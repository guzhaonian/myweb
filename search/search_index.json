{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u987e\u5146\u5e74\u7684\u5b66\u4e60\u7f51\u7ad9","title":"\u4e3b\u9875"},{"location":"#_1","text":"","title":"\u987e\u5146\u5e74\u7684\u5b66\u4e60\u7f51\u7ad9"},{"location":"%E6%80%BB%E8%A7%88/","text":"LearnPython \u4ee5\u64b8\u4ee3\u7801\u7684\u5f62\u5f0f\u5b66\u4e60Python, \u5177\u4f53\u8bf4\u660e\u5728 \u77e5\u4e4e\u4e13\u680f-\u64b8\u4ee3\u7801,\u5b66\u77e5\u8bc6 =================================================================================================== python_base.py:\u5343\u884c\u4ee3\u7801\u5165\u95e8Python python_visual.py: 15\u5f20\u56fe\u5165\u95e8Matplotlib python_visual_animation.py: \u4f7f\u7528Matplotlib\u753b\u52a8\u6001\u56fe\u5b9e\u4f8b python_spider.py: \u4e00\u4e2a\u5f88\u201c\u6c34\u201d\u7684Python\u722c\u866b\u5165\u95e8\u4ee3\u7801\u6587\u4ef6 python_weibo.py: \u201c\u53f2\u4e0a\u6700\u8be6\u7ec6\u201d\u7684Python\u6a21\u62df\u767b\u5f55\u65b0\u6d6a\u5fae\u535a\u6d41\u7a0b python_lda.py: \u73a9\u70b9\u9ad8\u7ea7\u7684--\u5e26\u4f60\u5165\u95e8Topic\u6a21\u578bLDA\uff08\u5c0f\u6539\u8fdb+\u9644\u6e90\u7801\uff09 python_sqlalchemy.py: \u4f5c\u4e3a\u4e00\u4e2aPythoner, \u4e0d\u4f1aSQLAlchemy\u90fd\u4e0d\u597d\u610f\u601d\u8ddf\u540c\u884c\u6253\u62db\u547c\uff01 python_oneline.py: \u51e0\u4e2a\u5c0f\u4f8b\u5b50\u544a\u8bc9\u4f60, \u4e00\u884cPython\u4ee3\u7801\u80fd\u5e72\u54ea\u4e9b\u4e8b python_requests.py: Python\u4e2d\u6700\u597d\u7528\u7684\u722c\u866b\u5e93Requests\u4ee3\u7801\u5b9e\u4f8b python_functional.py: Python\u8fdb\u9636: \u51fd\u6570\u5f0f\u7f16\u7a0b\u5b9e\u4f8b\uff08\u9644\u4ee3\u7801\uff09 python_decorator.py: Python\u8fdb\u9636: \u901a\u8fc7\u5b9e\u4f8b\u8be6\u89e3\u88c5\u9970\u5668\uff08\u9644\u4ee3\u7801\uff09 python_datetime.py: \u4f60\u771f\u7684\u4e86\u89e3Python\u4e2d\u7684\u65e5\u671f\u65f6\u95f4\u5904\u7406\u5417\uff1f python_metaclass.py: Python\u8fdb\u9636: \u4e00\u6b65\u6b65\u7406\u89e3Python\u4e2d\u7684\u5143\u7c7bmetaclass python_coroutine.py: Python\u8fdb\u9636: \u7406\u89e3Python\u4e2d\u7684\u5f02\u6b65IO\u548c\u534f\u7a0b(Coroutine), \u5e76\u5e94\u7528\u5728\u722c\u866b\u4e2d python_aiohttp.py: Python\u4e2d\u6700\u597d\u7528\u7684\u5f02\u6b65\u722c\u866b\u5e93Aiohttp\u4ee3\u7801\u5b9e\u4f8b python_thread_multiprocess.py: Python\u8fdb\u9636: \u804a\u804aIO\u5bc6\u96c6\u578b\u4efb\u52a1\u3001\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u4ee5\u53ca\u591a\u7ebf\u7a0b\u3001\u591a\u8fdb\u7a0b python_version36.py: Python3.6\u6b63\u5f0f\u7248\u8981\u6765\u4e86, \u4f60\u671f\u5f85\u54ea\u4e9b\u65b0\u7279\u6027\uff1f python_magic_methods: Python\u8fdb\u9636: \u5b9e\u4f8b\u8bb2\u89e3Python\u4e2d\u7684\u9b54\u6cd5\u51fd\u6570(Magic Methods) python_restful_api.py: \u5229\u7528Python\u548cFlask\u5feb\u901f\u5f00\u53d1RESTful API python_restful_api.py: RESTful API\u8fdb\u9636: \u8fde\u63a5\u6570\u636e\u5e93\u3001\u6dfb\u52a0\u53c2\u6570\u3001Token\u8ba4\u8bc1\u3001\u8fd4\u56de\u4ee3\u7801\u8bf4\u660e\u7b49 python_context.py: With\u8bed\u53e5\u548c\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668ContextManager python_flask.py: Flask\u76f8\u5173\u8bf4\u660e MyShow: \u73a9\u70b9\u597d\u73a9\u7684--\u77e5\u4e4e\u5168\u90e8\u8bdd\u9898\u5173\u7cfb\u53ef\u89c6\u5316 python_markov_chain.py: \u73a9\u70b9\u597d\u73a9\u7684--\u4f7f\u7528\u9a6c\u5c14\u53ef\u592b\u6a21\u578b\u81ea\u52a8\u751f\u6210\u6587\u7ae0 python_wechat.py: \u73a9\u70b9\u597d\u73a9\u7684--\u81ea\u5df1\u5199\u4e00\u4e2a\u5fae\u4fe1\u5c0f\u52a9\u624b python_csv.py: Python\u4e2dCSV\u6587\u4ef6\u7684\u7b80\u5355\u8bfb\u5199 python_numpy.py: \u4f7f\u7528numpy\u8fdb\u884c\u77e9\u9635\u64cd\u4f5c python_mail.py: \u4f7f\u7528Python\u81ea\u52a8\u53d1\u9001\u90ae\u4ef6\uff0c\u5305\u62ec\u53d1\u9001HTML\u4ee5\u53ca\u56fe\u7247\u3001\u9644\u4ef6\u7b49 python_redis.py: Python\u64cd\u4f5cRedis\u5b9e\u73b0\u6d88\u606f\u7684\u53d1\u5e03\u4e0e\u8ba2\u9605 python_schedule.py: Python\u8fdb\u884c\u8c03\u5ea6\u5f00\u53d1 python_socket.py: Python\u7684socket\u5f00\u53d1\u5b9e\u4f8b Plotly\u76ee\u5f55: \u4e00\u4e9bplotly\u753b\u56fe\u7684\u5b9e\u4f8b\uff0c\u4f7f\u7528jupyter notebook\u7f16\u5199 =================================================================================================== \u60a8\u53ef\u4ee5fork\u8be5\u9879\u76ee, \u5e76\u5728\u4fee\u6539\u540e\u63d0\u4ea4Pull request, \u770b\u5230\u540e\u4f1a\u5c3d\u91cf\u8fdb\u884c\u4ee3\u7801\u5408\u5e76","title":"LearnPython"},{"location":"%E6%80%BB%E8%A7%88/#learnpython","text":"\u4ee5\u64b8\u4ee3\u7801\u7684\u5f62\u5f0f\u5b66\u4e60Python, \u5177\u4f53\u8bf4\u660e\u5728 \u77e5\u4e4e\u4e13\u680f-\u64b8\u4ee3\u7801,\u5b66\u77e5\u8bc6 ===================================================================================================","title":"LearnPython"},{"location":"%E6%80%BB%E8%A7%88/#python_basepypython","text":"","title":"python_base.py:\u5343\u884c\u4ee3\u7801\u5165\u95e8Python"},{"location":"%E6%80%BB%E8%A7%88/#python_visualpy-15matplotlib","text":"","title":"python_visual.py: 15\u5f20\u56fe\u5165\u95e8Matplotlib"},{"location":"%E6%80%BB%E8%A7%88/#python_visual_animationpy-matplotlib","text":"","title":"python_visual_animation.py: \u4f7f\u7528Matplotlib\u753b\u52a8\u6001\u56fe\u5b9e\u4f8b"},{"location":"%E6%80%BB%E8%A7%88/#python_spiderpy-python","text":"","title":"python_spider.py: \u4e00\u4e2a\u5f88\u201c\u6c34\u201d\u7684Python\u722c\u866b\u5165\u95e8\u4ee3\u7801\u6587\u4ef6"},{"location":"%E6%80%BB%E8%A7%88/#python_weibopy-python","text":"","title":"python_weibo.py: \u201c\u53f2\u4e0a\u6700\u8be6\u7ec6\u201d\u7684Python\u6a21\u62df\u767b\u5f55\u65b0\u6d6a\u5fae\u535a\u6d41\u7a0b"},{"location":"%E6%80%BB%E8%A7%88/#python_ldapy-topiclda","text":"","title":"python_lda.py: \u73a9\u70b9\u9ad8\u7ea7\u7684--\u5e26\u4f60\u5165\u95e8Topic\u6a21\u578bLDA\uff08\u5c0f\u6539\u8fdb+\u9644\u6e90\u7801\uff09"},{"location":"%E6%80%BB%E8%A7%88/#python_sqlalchemypy-pythoner-sqlalchemy","text":"","title":"python_sqlalchemy.py: \u4f5c\u4e3a\u4e00\u4e2aPythoner, \u4e0d\u4f1aSQLAlchemy\u90fd\u4e0d\u597d\u610f\u601d\u8ddf\u540c\u884c\u6253\u62db\u547c\uff01"},{"location":"%E6%80%BB%E8%A7%88/#python_onelinepy-python","text":"","title":"python_oneline.py: \u51e0\u4e2a\u5c0f\u4f8b\u5b50\u544a\u8bc9\u4f60, \u4e00\u884cPython\u4ee3\u7801\u80fd\u5e72\u54ea\u4e9b\u4e8b"},{"location":"%E6%80%BB%E8%A7%88/#python_requestspy-pythonrequests","text":"","title":"python_requests.py: Python\u4e2d\u6700\u597d\u7528\u7684\u722c\u866b\u5e93Requests\u4ee3\u7801\u5b9e\u4f8b"},{"location":"%E6%80%BB%E8%A7%88/#python_functionalpy-python","text":"","title":"python_functional.py: Python\u8fdb\u9636: \u51fd\u6570\u5f0f\u7f16\u7a0b\u5b9e\u4f8b\uff08\u9644\u4ee3\u7801\uff09"},{"location":"%E6%80%BB%E8%A7%88/#python_decoratorpy-python","text":"","title":"python_decorator.py: Python\u8fdb\u9636: \u901a\u8fc7\u5b9e\u4f8b\u8be6\u89e3\u88c5\u9970\u5668\uff08\u9644\u4ee3\u7801\uff09"},{"location":"%E6%80%BB%E8%A7%88/#python_datetimepy-python","text":"","title":"python_datetime.py: \u4f60\u771f\u7684\u4e86\u89e3Python\u4e2d\u7684\u65e5\u671f\u65f6\u95f4\u5904\u7406\u5417\uff1f"},{"location":"%E6%80%BB%E8%A7%88/#python_metaclasspy-python-pythonmetaclass","text":"","title":"python_metaclass.py: Python\u8fdb\u9636: \u4e00\u6b65\u6b65\u7406\u89e3Python\u4e2d\u7684\u5143\u7c7bmetaclass"},{"location":"%E6%80%BB%E8%A7%88/#python_coroutinepy-python-pythoniocoroutine","text":"","title":"python_coroutine.py: Python\u8fdb\u9636: \u7406\u89e3Python\u4e2d\u7684\u5f02\u6b65IO\u548c\u534f\u7a0b(Coroutine), \u5e76\u5e94\u7528\u5728\u722c\u866b\u4e2d"},{"location":"%E6%80%BB%E8%A7%88/#python_aiohttppy-pythonaiohttp","text":"","title":"python_aiohttp.py: Python\u4e2d\u6700\u597d\u7528\u7684\u5f02\u6b65\u722c\u866b\u5e93Aiohttp\u4ee3\u7801\u5b9e\u4f8b"},{"location":"%E6%80%BB%E8%A7%88/#python_thread_multiprocesspy-python-io","text":"","title":"python_thread_multiprocess.py: Python\u8fdb\u9636: \u804a\u804aIO\u5bc6\u96c6\u578b\u4efb\u52a1\u3001\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u4ee5\u53ca\u591a\u7ebf\u7a0b\u3001\u591a\u8fdb\u7a0b"},{"location":"%E6%80%BB%E8%A7%88/#python_version36py-python36","text":"","title":"python_version36.py: Python3.6\u6b63\u5f0f\u7248\u8981\u6765\u4e86, \u4f60\u671f\u5f85\u54ea\u4e9b\u65b0\u7279\u6027\uff1f"},{"location":"%E6%80%BB%E8%A7%88/#python_magic_methods-python-pythonmagic-methods","text":"","title":"python_magic_methods: Python\u8fdb\u9636: \u5b9e\u4f8b\u8bb2\u89e3Python\u4e2d\u7684\u9b54\u6cd5\u51fd\u6570(Magic Methods)"},{"location":"%E6%80%BB%E8%A7%88/#python_restful_apipy-pythonflaskrestful-api","text":"","title":"python_restful_api.py: \u5229\u7528Python\u548cFlask\u5feb\u901f\u5f00\u53d1RESTful API"},{"location":"%E6%80%BB%E8%A7%88/#python_restful_apipy-restful-api-token","text":"","title":"python_restful_api.py: RESTful API\u8fdb\u9636: \u8fde\u63a5\u6570\u636e\u5e93\u3001\u6dfb\u52a0\u53c2\u6570\u3001Token\u8ba4\u8bc1\u3001\u8fd4\u56de\u4ee3\u7801\u8bf4\u660e\u7b49"},{"location":"%E6%80%BB%E8%A7%88/#python_contextpy-withcontextmanager","text":"","title":"python_context.py: With\u8bed\u53e5\u548c\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668ContextManager"},{"location":"%E6%80%BB%E8%A7%88/#python_flaskpy-flask","text":"","title":"python_flask.py: Flask\u76f8\u5173\u8bf4\u660e"},{"location":"%E6%80%BB%E8%A7%88/#myshow-","text":"","title":"MyShow: \u73a9\u70b9\u597d\u73a9\u7684--\u77e5\u4e4e\u5168\u90e8\u8bdd\u9898\u5173\u7cfb\u53ef\u89c6\u5316"},{"location":"%E6%80%BB%E8%A7%88/#python_markov_chainpy-","text":"","title":"python_markov_chain.py: \u73a9\u70b9\u597d\u73a9\u7684--\u4f7f\u7528\u9a6c\u5c14\u53ef\u592b\u6a21\u578b\u81ea\u52a8\u751f\u6210\u6587\u7ae0"},{"location":"%E6%80%BB%E8%A7%88/#python_wechatpy-","text":"","title":"python_wechat.py: \u73a9\u70b9\u597d\u73a9\u7684--\u81ea\u5df1\u5199\u4e00\u4e2a\u5fae\u4fe1\u5c0f\u52a9\u624b"},{"location":"%E6%80%BB%E8%A7%88/#python_csvpy-pythoncsv","text":"","title":"python_csv.py: Python\u4e2dCSV\u6587\u4ef6\u7684\u7b80\u5355\u8bfb\u5199"},{"location":"%E6%80%BB%E8%A7%88/#python_numpypy-numpy","text":"","title":"python_numpy.py: \u4f7f\u7528numpy\u8fdb\u884c\u77e9\u9635\u64cd\u4f5c"},{"location":"%E6%80%BB%E8%A7%88/#python_mailpy-pythonhtml","text":"","title":"python_mail.py: \u4f7f\u7528Python\u81ea\u52a8\u53d1\u9001\u90ae\u4ef6\uff0c\u5305\u62ec\u53d1\u9001HTML\u4ee5\u53ca\u56fe\u7247\u3001\u9644\u4ef6\u7b49"},{"location":"%E6%80%BB%E8%A7%88/#python_redispy-pythonredis","text":"","title":"python_redis.py: Python\u64cd\u4f5cRedis\u5b9e\u73b0\u6d88\u606f\u7684\u53d1\u5e03\u4e0e\u8ba2\u9605"},{"location":"%E6%80%BB%E8%A7%88/#python_schedulepy-python","text":"","title":"python_schedule.py: Python\u8fdb\u884c\u8c03\u5ea6\u5f00\u53d1"},{"location":"%E6%80%BB%E8%A7%88/#python_socketpy-pythonsocket","text":"","title":"python_socket.py: Python\u7684socket\u5f00\u53d1\u5b9e\u4f8b"},{"location":"%E6%80%BB%E8%A7%88/#plotly-plotlyjupyter-notebook","text":"===================================================================================================","title":"Plotly\u76ee\u5f55: \u4e00\u4e9bplotly\u753b\u56fe\u7684\u5b9e\u4f8b\uff0c\u4f7f\u7528jupyter notebook\u7f16\u5199"},{"location":"%E6%80%BB%E8%A7%88/#fork-pull-request","text":"","title":"\u60a8\u53ef\u4ee5fork\u8be5\u9879\u76ee, \u5e76\u5728\u4fee\u6539\u540e\u63d0\u4ea4Pull request, \u770b\u5230\u540e\u4f1a\u5c3d\u91cf\u8fdb\u884c\u4ee3\u7801\u5408\u5e76"},{"location":"new/10%E3%80%81%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/","text":"\u56fe\u5f62\u7528\u6237\u754c\u9762\u548c\u6e38\u620f\u5f00\u53d1 \u57fa\u4e8etkinter\u6a21\u5757\u7684GUI GUI\u662f\u56fe\u5f62\u7528\u6237\u754c\u9762\u7684\u7f29\u5199\uff0c\u56fe\u5f62\u5316\u7684\u7528\u6237\u754c\u9762\u5bf9\u4f7f\u7528\u8fc7\u8ba1\u7b97\u673a\u7684\u4eba\u6765\u8bf4\u5e94\u8be5\u90fd\u4e0d\u964c\u751f\uff0c\u5728\u6b64\u4e5f\u65e0\u9700\u8fdb\u884c\u8d58\u8ff0\u3002Python\u9ed8\u8ba4\u7684GUI\u5f00\u53d1\u6a21\u5757\u662ftkinter\uff08\u5728Python 3\u4ee5\u524d\u7684\u7248\u672c\u4e2d\u540d\u4e3aTkinter\uff09\uff0c\u4ece\u8fd9\u4e2a\u540d\u5b57\u5c31\u53ef\u4ee5\u770b\u51fa\u5b83\u662f\u57fa\u4e8eTk\u7684\uff0cTk\u662f\u4e00\u4e2a\u5de5\u5177\u5305\uff0c\u6700\u521d\u662f\u4e3aTcl\u8bbe\u8ba1\u7684\uff0c\u540e\u6765\u88ab\u79fb\u690d\u5230\u5f88\u591a\u5176\u4ed6\u7684\u811a\u672c\u8bed\u8a00\u4e2d\uff0c\u5b83\u63d0\u4f9b\u4e86\u8de8\u5e73\u53f0\u7684GUI\u63a7\u4ef6\u3002\u5f53\u7136Tk\u5e76\u4e0d\u662f\u6700\u65b0\u548c\u6700\u597d\u7684\u9009\u62e9\uff0c\u4e5f\u6ca1\u6709\u529f\u80fd\u7279\u522b\u5f3a\u5927\u7684GUI\u63a7\u4ef6\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u5f00\u53d1GUI\u5e94\u7528\u5e76\u4e0d\u662fPython\u6700\u64c5\u957f\u7684\u5de5\u4f5c\uff0c\u5982\u679c\u771f\u7684\u9700\u8981\u4f7f\u7528Python\u5f00\u53d1GUI\u5e94\u7528\uff0cwxPython\u3001PyQt\u3001PyGTK\u7b49\u6a21\u5757\u90fd\u662f\u4e0d\u9519\u7684\u9009\u62e9\u3002 \u57fa\u672c\u4e0a\u4f7f\u7528tkinter\u6765\u5f00\u53d1GUI\u5e94\u7528\u9700\u8981\u4ee5\u4e0b5\u4e2a\u6b65\u9aa4\uff1a \u5bfc\u5165tkinter\u6a21\u5757\u4e2d\u6211\u4eec\u9700\u8981\u7684\u4e1c\u897f\u3002 \u521b\u5efa\u4e00\u4e2a\u9876\u5c42\u7a97\u53e3\u5bf9\u8c61\u5e76\u7528\u5b83\u6765\u627f\u8f7d\u6574\u4e2aGUI\u5e94\u7528\u3002 \u5728\u9876\u5c42\u7a97\u53e3\u5bf9\u8c61\u4e0a\u6dfb\u52a0GUI\u7ec4\u4ef6\u3002 \u901a\u8fc7\u4ee3\u7801\u5c06\u8fd9\u4e9bGUI\u7ec4\u4ef6\u7684\u529f\u80fd\u7ec4\u7ec7\u8d77\u6765\u3002 \u8fdb\u5165\u4e3b\u4e8b\u4ef6\u5faa\u73af(main loop)\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528tkinter\u505a\u4e00\u4e2a\u7b80\u5355\u7684GUI\u5e94\u7528\u3002 import tkinter import tkinter.messagebox def main(): flag = True # \u4fee\u6539\u6807\u7b7e\u4e0a\u7684\u6587\u5b57 def change_label_text(): nonlocal flag flag = not flag color, msg = ('red', 'Hello, world!')\\ if flag else ('blue', 'Goodbye, world!') label.config(text=msg, fg=color) # \u786e\u8ba4\u9000\u51fa def confirm_to_quit(): if tkinter.messagebox.askokcancel('\u6e29\u99a8\u63d0\u793a', '\u786e\u5b9a\u8981\u9000\u51fa\u5417?'): top.quit() # \u521b\u5efa\u9876\u5c42\u7a97\u53e3 top = tkinter.Tk() # \u8bbe\u7f6e\u7a97\u53e3\u5927\u5c0f top.geometry('240x160') # \u8bbe\u7f6e\u7a97\u53e3\u6807\u9898 top.title('\u5c0f\u6e38\u620f') # \u521b\u5efa\u6807\u7b7e\u5bf9\u8c61\u5e76\u6dfb\u52a0\u5230\u9876\u5c42\u7a97\u53e3 label = tkinter.Label(top, text='Hello, world!', font='Arial -32', fg='red') label.pack(expand=1) # \u521b\u5efa\u4e00\u4e2a\u88c5\u6309\u94ae\u7684\u5bb9\u5668 panel = tkinter.Frame(top) # \u521b\u5efa\u6309\u94ae\u5bf9\u8c61 \u6307\u5b9a\u6dfb\u52a0\u5230\u54ea\u4e2a\u5bb9\u5668\u4e2d \u901a\u8fc7command\u53c2\u6570\u7ed1\u5b9a\u4e8b\u4ef6\u56de\u8c03\u51fd\u6570 button1 = tkinter.Button(panel, text='\u4fee\u6539', command=change_label_text) button1.pack(side='left') button2 = tkinter.Button(panel, text='\u9000\u51fa', command=confirm_to_quit) button2.pack(side='right') panel.pack(side='bottom') # \u5f00\u542f\u4e3b\u4e8b\u4ef6\u5faa\u73af tkinter.mainloop() if __name__ == '__main__': main() \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0cGUI\u5e94\u7528\u901a\u5e38\u662f\u4e8b\u4ef6\u9a71\u52a8\u5f0f\u7684\uff0c\u4e4b\u6240\u4ee5\u8981\u8fdb\u5165\u4e3b\u4e8b\u4ef6\u5faa\u73af\u5c31\u662f\u8981\u76d1\u542c\u9f20\u6807\u3001\u952e\u76d8\u7b49\u5404\u79cd\u4e8b\u4ef6\u7684\u53d1\u751f\u5e76\u6267\u884c\u5bf9\u5e94\u7684\u4ee3\u7801\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406\uff0c\u56e0\u4e3a\u4e8b\u4ef6\u4f1a\u6301\u7eed\u7684\u53d1\u751f\uff0c\u6240\u4ee5\u9700\u8981\u8fd9\u6837\u7684\u4e00\u4e2a\u5faa\u73af\u4e00\u76f4\u8fd0\u884c\u7740\u7b49\u5f85\u4e0b\u4e00\u4e2a\u4e8b\u4ef6\u7684\u53d1\u751f\u3002\u53e6\u4e00\u65b9\u9762\uff0cTk\u4e3a\u63a7\u4ef6\u7684\u6446\u653e\u63d0\u4f9b\u4e86\u4e09\u79cd\u5e03\u5c40\u7ba1\u7406\u5668\uff0c\u901a\u8fc7\u5e03\u5c40\u7ba1\u7406\u5668\u53ef\u4ee5\u5bf9\u63a7\u4ef6\u8fdb\u884c\u5b9a\u4f4d\uff0c\u8fd9\u4e09\u79cd\u5e03\u5c40\u7ba1\u7406\u5668\u5206\u522b\u662f\uff1aPlacer\uff08\u5f00\u53d1\u8005\u63d0\u4f9b\u63a7\u4ef6\u7684\u5927\u5c0f\u548c\u6446\u653e\u4f4d\u7f6e\uff09\u3001Packer\uff08\u81ea\u52a8\u5c06\u63a7\u4ef6\u586b\u5145\u5230\u5408\u9002\u7684\u4f4d\u7f6e\uff09\u548cGrid\uff08\u57fa\u4e8e\u7f51\u683c\u5750\u6807\u6765\u6446\u653e\u63a7\u4ef6\uff09\uff0c\u6b64\u5904\u4e0d\u8fdb\u884c\u8d58\u8ff0\u3002 \u4f7f\u7528Pygame\u8fdb\u884c\u6e38\u620f\u5f00\u53d1 Pygame\u662f\u4e00\u4e2a\u5f00\u6e90\u7684Python\u6a21\u5757\uff0c\u4e13\u95e8\u7528\u4e8e\u591a\u5a92\u4f53\u5e94\u7528\uff08\u5982\u7535\u5b50\u6e38\u620f\uff09\u7684\u5f00\u53d1\uff0c\u5176\u4e2d\u5305\u542b\u5bf9\u56fe\u50cf\u3001\u58f0\u97f3\u3001\u89c6\u9891\u3001\u4e8b\u4ef6\u3001\u78b0\u649e\u7b49\u7684\u652f\u6301\u3002Pygame\u5efa\u7acb\u5728 SDL \u7684\u57fa\u7840\u4e0a\uff0cSDL\u662f\u4e00\u5957\u8de8\u5e73\u53f0\u7684\u591a\u5a92\u4f53\u5f00\u53d1\u5e93\uff0c\u7528C\u8bed\u8a00\u5b9e\u73b0\uff0c\u88ab\u5e7f\u6cdb\u7684\u5e94\u7528\u4e8e\u6e38\u620f\u3001\u6a21\u62df\u5668\u3001\u64ad\u653e\u5668\u7b49\u7684\u5f00\u53d1\u3002\u800cPygame\u8ba9\u6e38\u620f\u5f00\u53d1\u8005\u4e0d\u518d\u88ab\u5e95\u5c42\u8bed\u8a00\u675f\u7f1a\uff0c\u53ef\u4ee5\u66f4\u591a\u7684\u5173\u6ce8\u6e38\u620f\u7684\u529f\u80fd\u548c\u903b\u8f91\u3002 \u4e0b\u9762\u6211\u4eec\u6765\u5b8c\u6210\u4e00\u4e2a\u7b80\u5355\u7684\u5c0f\u6e38\u620f\uff0c\u6e38\u620f\u7684\u540d\u5b57\u53eb\u201c\u5927\u7403\u5403\u5c0f\u7403\u201d\uff0c\u5f53\u7136\u5b8c\u6210\u8fd9\u4e2a\u6e38\u620f\u5e76\u4e0d\u662f\u91cd\u70b9\uff0c\u5b66\u4f1a\u4f7f\u7528Pygame\u4e5f\u4e0d\u662f\u91cd\u70b9\uff0c\u6700\u91cd\u8981\u7684\u6211\u4eec\u8981\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4f53\u4f1a\u5982\u4f55\u4f7f\u7528\u524d\u9762\u8bb2\u89e3\u7684\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\uff0c\u5b66\u4f1a\u7528\u8fd9\u79cd\u7f16\u7a0b\u601d\u60f3\u53bb\u89e3\u51b3\u73b0\u5b9e\u4e2d\u7684\u95ee\u9898\u3002 \u5236\u4f5c\u6e38\u620f\u7a97\u53e3 import pygame def main(): # \u521d\u59cb\u5316\u5bfc\u5165\u7684pygame\u4e2d\u7684\u6a21\u5757 pygame.init() # \u521d\u59cb\u5316\u7528\u4e8e\u663e\u793a\u7684\u7a97\u53e3\u5e76\u8bbe\u7f6e\u7a97\u53e3\u5c3a\u5bf8 screen = pygame.display.set_mode((800, 600)) # \u8bbe\u7f6e\u5f53\u524d\u7a97\u53e3\u7684\u6807\u9898 pygame.display.set_caption('\u5927\u7403\u5403\u5c0f\u7403') running = True # \u5f00\u542f\u4e00\u4e2a\u4e8b\u4ef6\u5faa\u73af\u5904\u7406\u53d1\u751f\u7684\u4e8b\u4ef6 while running: # \u4ece\u6d88\u606f\u961f\u5217\u4e2d\u83b7\u53d6\u4e8b\u4ef6\u5e76\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406 for event in pygame.event.get(): if event.type == pygame.QUIT: running = False if __name__ == '__main__': main() \u5728\u7a97\u53e3\u4e2d\u7ed8\u56fe \u53ef\u4ee5\u901a\u8fc7pygame\u4e2ddraw\u6a21\u5757\u7684\u51fd\u6570\u5728\u7a97\u53e3\u4e0a\u7ed8\u56fe\uff0c\u53ef\u4ee5\u7ed8\u5236\u7684\u56fe\u5f62\u5305\u62ec\uff1a\u7ebf\u6761\u3001\u77e9\u5f62\u3001\u591a\u8fb9\u5f62\u3001\u5706\u3001\u692d\u5706\u3001\u5706\u5f27\u7b49\u3002\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u5c4f\u5e55\u5750\u6807\u7cfb\u662f\u5c06\u5c4f\u5e55\u5de6\u4e0a\u89d2\u8bbe\u7f6e\u4e3a\u5750\u6807\u539f\u70b9 (0, 0) \uff0c\u5411\u53f3\u662fx\u8f74\u7684\u6b63\u5411\uff0c\u5411\u4e0b\u662fy\u8f74\u7684\u6b63\u5411\uff0c\u5728\u8868\u793a\u4f4d\u7f6e\u6216\u8005\u8bbe\u7f6e\u5c3a\u5bf8\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9ed8\u8ba4\u7684\u5355\u4f4d\u90fd\u662f \u50cf\u7d20 \u3002\u6240\u8c13\u50cf\u7d20\u5c31\u662f\u5c4f\u5e55\u4e0a\u7684\u4e00\u4e2a\u70b9\uff0c\u4f60\u53ef\u4ee5\u7528\u6d4f\u89c8\u56fe\u7247\u7684\u8f6f\u4ef6\u8bd5\u7740\u5c06\u4e00\u5f20\u56fe\u7247\u653e\u5927\u82e5\u5e72\u500d\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u8fd9\u4e9b\u70b9\u3002pygame\u4e2d\u8868\u793a\u989c\u8272\u7528\u7684\u662f\u8272\u5149 \u4e09\u539f\u8272 \u8868\u793a\u6cd5\uff0c\u5373\u901a\u8fc7\u4e00\u4e2a\u5143\u7ec4\u6216\u5217\u8868\u6765\u6307\u5b9a\u989c\u8272\u7684RGB\u503c\uff0c\u6bcf\u4e2a\u503c\u90fd\u57280~255\u4e4b\u95f4\uff0c\u56e0\u4e3a\u662f\u6bcf\u79cd\u539f\u8272\u90fd\u7528\u4e00\u4e2a8\u4f4d\uff08bit\uff09\u7684\u503c\u6765\u8868\u793a\uff0c\u4e09\u79cd\u989c\u8272\u76f8\u5f53\u4e8e\u4e00\u5171\u753124\u4f4d\u6784\u6210\uff0c\u8fd9\u4e5f\u5c31\u662f\u5e38\u8bf4\u7684\u201c24\u4f4d\u989c\u8272\u8868\u793a\u6cd5\u201d\u3002 import pygame def main(): # \u521d\u59cb\u5316\u5bfc\u5165\u7684pygame\u4e2d\u7684\u6a21\u5757 pygame.init() # \u521d\u59cb\u5316\u7528\u4e8e\u663e\u793a\u7684\u7a97\u53e3\u5e76\u8bbe\u7f6e\u7a97\u53e3\u5c3a\u5bf8 screen = pygame.display.set_mode((800, 600)) # \u8bbe\u7f6e\u5f53\u524d\u7a97\u53e3\u7684\u6807\u9898 pygame.display.set_caption('\u5927\u7403\u5403\u5c0f\u7403') # \u8bbe\u7f6e\u7a97\u53e3\u7684\u80cc\u666f\u8272(\u989c\u8272\u662f\u7531\u7ea2\u7eff\u84dd\u4e09\u539f\u8272\u6784\u6210\u7684\u5143\u7ec4) screen.fill((242, 242, 242)) # \u7ed8\u5236\u4e00\u4e2a\u5706(\u53c2\u6570\u5206\u522b\u662f: \u5c4f\u5e55, \u989c\u8272, \u5706\u5fc3\u4f4d\u7f6e, \u534a\u5f84, 0\u8868\u793a\u586b\u5145\u5706) pygame.draw.circle(screen, (255, 0, 0,), (100, 100), 30, 0) # \u5237\u65b0\u5f53\u524d\u7a97\u53e3(\u6e32\u67d3\u7a97\u53e3\u5c06\u7ed8\u5236\u7684\u56fe\u50cf\u5448\u73b0\u51fa\u6765) pygame.display.flip() running = True # \u5f00\u542f\u4e00\u4e2a\u4e8b\u4ef6\u5faa\u73af\u5904\u7406\u53d1\u751f\u7684\u4e8b\u4ef6 while running: # \u4ece\u6d88\u606f\u961f\u5217\u4e2d\u83b7\u53d6\u4e8b\u4ef6\u5e76\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406 for event in pygame.event.get(): if event.type == pygame.QUIT: running = False if __name__ == '__main__': main() \u52a0\u8f7d\u56fe\u50cf \u5982\u679c\u9700\u8981\u76f4\u63a5\u52a0\u8f7d\u56fe\u50cf\u5230\u7a97\u53e3\u4e0a\uff0c\u53ef\u4ee5\u4f7f\u7528pygame\u4e2dimage\u6a21\u5757\u7684\u51fd\u6570\u6765\u52a0\u8f7d\u56fe\u50cf\uff0c\u518d\u901a\u8fc7\u4e4b\u524d\u83b7\u5f97\u7684\u7a97\u53e3\u5bf9\u8c61\u7684 blit \u65b9\u6cd5\u6e32\u67d3\u56fe\u50cf\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import pygame def main(): # \u521d\u59cb\u5316\u5bfc\u5165\u7684pygame\u4e2d\u7684\u6a21\u5757 pygame.init() # \u521d\u59cb\u5316\u7528\u4e8e\u663e\u793a\u7684\u7a97\u53e3\u5e76\u8bbe\u7f6e\u7a97\u53e3\u5c3a\u5bf8 screen = pygame.display.set_mode((800, 600)) # \u8bbe\u7f6e\u5f53\u524d\u7a97\u53e3\u7684\u6807\u9898 pygame.display.set_caption('\u5927\u7403\u5403\u5c0f\u7403') # \u8bbe\u7f6e\u7a97\u53e3\u7684\u80cc\u666f\u8272(\u989c\u8272\u662f\u7531\u7ea2\u7eff\u84dd\u4e09\u539f\u8272\u6784\u6210\u7684\u5143\u7ec4) screen.fill((255, 255, 255)) # \u901a\u8fc7\u6307\u5b9a\u7684\u6587\u4ef6\u540d\u52a0\u8f7d\u56fe\u50cf ball_image = pygame.image.load('./res/ball.png') # \u5728\u7a97\u53e3\u4e0a\u6e32\u67d3\u56fe\u50cf screen.blit(ball_image, (50, 50)) # \u5237\u65b0\u5f53\u524d\u7a97\u53e3(\u6e32\u67d3\u7a97\u53e3\u5c06\u7ed8\u5236\u7684\u56fe\u50cf\u5448\u73b0\u51fa\u6765) pygame.display.flip() running = True # \u5f00\u542f\u4e00\u4e2a\u4e8b\u4ef6\u5faa\u73af\u5904\u7406\u53d1\u751f\u7684\u4e8b\u4ef6 while running: # \u4ece\u6d88\u606f\u961f\u5217\u4e2d\u83b7\u53d6\u4e8b\u4ef6\u5e76\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406 for event in pygame.event.get(): if event.type == pygame.QUIT: running = False if __name__ == '__main__': main() \u5b9e\u73b0\u52a8\u753b\u6548\u679c \u8bf4\u5230 \u52a8\u753b \u8fd9\u4e2a\u8bcd\u5927\u5bb6\u90fd\u4e0d\u4f1a\u964c\u751f\uff0c\u4e8b\u5b9e\u4e0a\u8981\u5b9e\u73b0\u52a8\u753b\u6548\u679c\uff0c\u672c\u8eab\u7684\u539f\u7406\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u5c31\u662f\u5c06\u4e0d\u8fde\u7eed\u7684\u56fe\u7247\u8fde\u7eed\u7684\u64ad\u653e\uff0c\u53ea\u8981\u6bcf\u79d2\u949f\u8fbe\u5230\u4e86\u4e00\u5b9a\u7684\u5e27\u6570\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u505a\u51fa\u6bd4\u8f83\u6d41\u7545\u7684\u52a8\u753b\u6548\u679c\u3002\u5982\u679c\u8981\u8ba9\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684\u5c0f\u7403\u52a8\u8d77\u6765\uff0c\u53ef\u4ee5\u5c06\u5c0f\u7403\u7684\u4f4d\u7f6e\u7528\u53d8\u91cf\u6765\u8868\u793a\uff0c\u5e76\u5728\u5faa\u73af\u4e2d\u4fee\u6539\u5c0f\u7403\u7684\u4f4d\u7f6e\u518d\u5237\u65b0\u6574\u4e2a\u7a97\u53e3\u5373\u53ef\u3002 import pygame def main(): # \u521d\u59cb\u5316\u5bfc\u5165\u7684pygame\u4e2d\u7684\u6a21\u5757 pygame.init() # \u521d\u59cb\u5316\u7528\u4e8e\u663e\u793a\u7684\u7a97\u53e3\u5e76\u8bbe\u7f6e\u7a97\u53e3\u5c3a\u5bf8 screen = pygame.display.set_mode((800, 600)) # \u8bbe\u7f6e\u5f53\u524d\u7a97\u53e3\u7684\u6807\u9898 pygame.display.set_caption('\u5927\u7403\u5403\u5c0f\u7403') # \u5b9a\u4e49\u53d8\u91cf\u6765\u8868\u793a\u5c0f\u7403\u5728\u5c4f\u5e55\u4e0a\u7684\u4f4d\u7f6e x, y = 50, 50 running = True # \u5f00\u542f\u4e00\u4e2a\u4e8b\u4ef6\u5faa\u73af\u5904\u7406\u53d1\u751f\u7684\u4e8b\u4ef6 while running: # \u4ece\u6d88\u606f\u961f\u5217\u4e2d\u83b7\u53d6\u4e8b\u4ef6\u5e76\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406 for event in pygame.event.get(): if event.type == pygame.QUIT: running = False screen.fill((255, 255, 255)) pygame.draw.circle(screen, (255, 0, 0,), (x, y), 30, 0) pygame.display.flip() # \u6bcf\u969450\u6beb\u79d2\u5c31\u6539\u53d8\u5c0f\u7403\u7684\u4f4d\u7f6e\u518d\u5237\u65b0\u7a97\u53e3 pygame.time.delay(50) x, y = x + 5, y + 5 if __name__ == '__main__': main() \u78b0\u649e\u68c0\u6d4b \u901a\u5e38\u4e00\u4e2a\u6e38\u620f\u4e2d\u4f1a\u6709\u5f88\u591a\u5bf9\u8c61\u51fa\u73b0\uff0c\u800c\u8fd9\u4e9b\u5bf9\u8c61\u4e4b\u95f4\u7684\u201c\u78b0\u649e\u201d\u5728\u6240\u96be\u514d\uff0c\u6bd4\u5982\u70ae\u5f39\u51fb\u4e2d\u4e86\u98de\u673a\u3001\u7bb1\u5b50\u649e\u5230\u4e86\u5730\u9762\u7b49\u3002\u78b0\u649e\u68c0\u6d4b\u5728\u7edd\u5927\u591a\u6570\u7684\u6e38\u620f\u4e2d\u90fd\u662f\u4e00\u4e2a\u5fc5\u987b\u5f97\u5904\u7406\u7684\u81f3\u5173\u91cd\u8981\u7684\u95ee\u9898\uff0cpygame\u7684sprite\uff08\u52a8\u753b\u7cbe\u7075\uff09\u6a21\u5757\u5c31\u63d0\u4f9b\u4e86\u5bf9\u78b0\u649e\u68c0\u6d4b\u7684\u652f\u6301\uff0c\u8fd9\u91cc\u6211\u4eec\u6682\u65f6\u4e0d\u4ecb\u7ecdsprite\u6a21\u5757\u63d0\u4f9b\u7684\u529f\u80fd\uff0c\u56e0\u4e3a\u8981\u68c0\u6d4b\u4e24\u4e2a\u5c0f\u7403\u6709\u6ca1\u6709\u78b0\u649e\u5176\u5b9e\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u68c0\u67e5\u7403\u5fc3\u7684\u8ddd\u79bb\u6709\u6ca1\u6709\u5c0f\u4e8e\u4e24\u4e2a\u7403\u7684\u534a\u5f84\u4e4b\u548c\u3002\u4e3a\u4e86\u5236\u9020\u51fa\u66f4\u591a\u7684\u5c0f\u7403\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5bf9\u9f20\u6807\u4e8b\u4ef6\u7684\u5904\u7406\uff0c\u5728\u70b9\u51fb\u9f20\u6807\u7684\u4f4d\u7f6e\u521b\u5efa\u989c\u8272\u3001\u5927\u5c0f\u548c\u79fb\u52a8\u901f\u5ea6\u90fd\u968f\u673a\u7684\u5c0f\u7403\uff0c\u5f53\u7136\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4e4b\u524d\u5b66\u4e60\u5230\u7684\u9762\u5411\u5bf9\u8c61\u7684\u77e5\u8bc6\u5e94\u7528\u8d77\u6765\u3002 from enum import Enum, unique from math import sqrt from random import randint import pygame @unique class Color(Enum): \"\"\"\u989c\u8272\"\"\" RED = (255, 0, 0) GREEN = (0, 255, 0) BLUE = (0, 0, 255) BLACK = (0, 0, 0) WHITE = (255, 255, 255) GRAY = (242, 242, 242) @staticmethod def random_color(): \"\"\"\u83b7\u5f97\u968f\u673a\u989c\u8272\"\"\" r = randint(0, 255) g = randint(0, 255) b = randint(0, 255) return (r, g, b) class Ball(object): \"\"\"\u7403\"\"\" def __init__(self, x, y, radius, sx, sy, color=Color.RED): \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5\"\"\" self.x = x self.y = y self.radius = radius self.sx = sx self.sy = sy self.color = color self.alive = True def move(self, screen): \"\"\"\u79fb\u52a8\"\"\" self.x += self.sx self.y += self.sy if self.x - self.radius <= 0 or \\ self.x + self.radius >= screen.get_width(): self.sx = -self.sx if self.y - self.radius <= 0 or \\ self.y + self.radius >= screen.get_height(): self.sy = -self.sy def eat(self, other): \"\"\"\u5403\u5176\u4ed6\u7403\"\"\" if self.alive and other.alive and self != other: dx, dy = self.x - other.x, self.y - other.y distance = sqrt(dx ** 2 + dy ** 2) if distance < self.radius + other.radius \\ and self.radius > other.radius: other.alive = False self.radius = self.radius + int(other.radius * 0.146) def draw(self, screen): \"\"\"\u5728\u7a97\u53e3\u4e0a\u7ed8\u5236\u7403\"\"\" pygame.draw.circle(screen, self.color, (self.x, self.y), self.radius, 0) \u4e8b\u4ef6\u5904\u7406 \u53ef\u4ee5\u5728\u4e8b\u4ef6\u5faa\u73af\u4e2d\u5bf9\u9f20\u6807\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406\uff0c\u901a\u8fc7\u4e8b\u4ef6\u5bf9\u8c61\u7684 type \u5c5e\u6027\u53ef\u4ee5\u5224\u5b9a\u4e8b\u4ef6\u7c7b\u578b\uff0c\u518d\u901a\u8fc7 pos \u5c5e\u6027\u5c31\u53ef\u4ee5\u83b7\u5f97\u9f20\u6807\u70b9\u51fb\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u8981\u5904\u7406\u952e\u76d8\u4e8b\u4ef6\u4e5f\u662f\u5728\u8fd9\u4e2a\u5730\u65b9\uff0c\u505a\u6cd5\u4e0e\u5904\u7406\u9f20\u6807\u4e8b\u4ef6\u7c7b\u4f3c\u3002 def main(): # \u5b9a\u4e49\u7528\u6765\u88c5\u6240\u6709\u7403\u7684\u5bb9\u5668 balls = [] # \u521d\u59cb\u5316\u5bfc\u5165\u7684pygame\u4e2d\u7684\u6a21\u5757 pygame.init() # \u521d\u59cb\u5316\u7528\u4e8e\u663e\u793a\u7684\u7a97\u53e3\u5e76\u8bbe\u7f6e\u7a97\u53e3\u5c3a\u5bf8 screen = pygame.display.set_mode((800, 600)) # \u8bbe\u7f6e\u5f53\u524d\u7a97\u53e3\u7684\u6807\u9898 pygame.display.set_caption('\u5927\u7403\u5403\u5c0f\u7403') running = True # \u5f00\u542f\u4e00\u4e2a\u4e8b\u4ef6\u5faa\u73af\u5904\u7406\u53d1\u751f\u7684\u4e8b\u4ef6 while running: # \u4ece\u6d88\u606f\u961f\u5217\u4e2d\u83b7\u53d6\u4e8b\u4ef6\u5e76\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406 for event in pygame.event.get(): if event.type == pygame.QUIT: running = False # \u5904\u7406\u9f20\u6807\u4e8b\u4ef6\u7684\u4ee3\u7801 if event.type == pygame.MOUSEBUTTONDOWN and event.button == 1: # \u83b7\u5f97\u70b9\u51fb\u9f20\u6807\u7684\u4f4d\u7f6e x, y = event.pos radius = randint(10, 100) sx, sy = randint(-10, 10), randint(-10, 10) color = Color.random_color() # \u5728\u70b9\u51fb\u9f20\u6807\u7684\u4f4d\u7f6e\u521b\u5efa\u4e00\u4e2a\u7403(\u5927\u5c0f\u3001\u901f\u5ea6\u548c\u989c\u8272\u968f\u673a) ball = Ball(x, y, radius, sx, sy, color) # \u5c06\u7403\u6dfb\u52a0\u5230\u5217\u8868\u5bb9\u5668\u4e2d balls.append(ball) screen.fill((255, 255, 255)) # \u53d6\u51fa\u5bb9\u5668\u4e2d\u7684\u7403 \u5982\u679c\u6ca1\u88ab\u5403\u6389\u5c31\u7ed8\u5236 \u88ab\u5403\u6389\u4e86\u5c31\u79fb\u9664 for ball in balls: if ball.alive: ball.draw(screen) else: balls.remove(ball) pygame.display.flip() # \u6bcf\u969450\u6beb\u79d2\u5c31\u6539\u53d8\u7403\u7684\u4f4d\u7f6e\u518d\u5237\u65b0\u7a97\u53e3 pygame.time.delay(50) for ball in balls: ball.move(screen) # \u68c0\u67e5\u7403\u6709\u6ca1\u6709\u5403\u5230\u5176\u4ed6\u7684\u7403 for other in balls: ball.eat(other) if __name__ == '__main__': main() \u4e0a\u9762\u7684\u4e24\u6bb5\u4ee3\u7801\u5408\u5728\u4e00\u8d77\uff0c\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u201c\u5927\u7403\u5403\u5c0f\u7403\u201d\u7684\u6e38\u620f\uff08\u5982\u4e0b\u56fe\u6240\u793a\uff09\uff0c\u51c6\u786e\u7684\u8bf4\u5b83\u7b97\u4e0d\u4e0a\u4e00\u4e2a\u6e38\u620f\uff0c\u4f46\u662f\u505a\u4e00\u4e2a\u5c0f\u6e38\u620f\u7684\u57fa\u672c\u77e5\u8bc6\u6211\u4eec\u5df2\u7ecf\u901a\u8fc7\u8fd9\u4e2a\u4f8b\u5b50\u544a\u8bc9\u5927\u5bb6\u4e86\uff0c\u6709\u4e86\u8fd9\u4e9b\u77e5\u8bc6\u5df2\u7ecf\u53ef\u4ee5\u5f00\u59cb\u4f60\u7684\u5c0f\u6e38\u620f\u5f00\u53d1\u4e4b\u65c5\u4e86\u3002\u5176\u5b9e\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u8fd8\u6709\u5f88\u591a\u503c\u5f97\u6539\u8fdb\u7684\u5730\u65b9\uff0c\u6bd4\u5982\u5237\u65b0\u7a97\u53e3\u4ee5\u53ca\u8ba9\u7403\u79fb\u52a8\u8d77\u6765\u7684\u4ee3\u7801\u5e76\u4e0d\u5e94\u8be5\u653e\u5728\u4e8b\u4ef6\u5faa\u73af\u4e2d\uff0c\u7b49\u5b66\u4e60\u4e86\u591a\u7ebf\u7a0b\u7684\u77e5\u8bc6\u540e\uff0c\u7528\u4e00\u4e2a\u540e\u53f0\u7ebf\u7a0b\u6765\u5904\u7406\u8fd9\u4e9b\u4e8b\u53ef\u80fd\u662f\u66f4\u597d\u7684\u9009\u62e9\u3002\u5982\u679c\u5e0c\u671b\u83b7\u5f97\u66f4\u597d\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5728\u6e38\u620f\u4e2d\u52a0\u5165\u80cc\u666f\u97f3\u4e50\u4ee5\u53ca\u5728\u7403\u4e0e\u7403\u53d1\u751f\u78b0\u649e\u65f6\u64ad\u653e\u97f3\u6548\uff0c\u5229\u7528pygame\u7684mixer\u548cmusic\u6a21\u5757\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u884c\u4e86\u89e3\u8fd9\u65b9\u9762\u7684\u77e5\u8bc6\u3002\u4e8b\u5b9e\u4e0a\uff0c\u60f3\u4e86\u89e3\u66f4\u591a\u7684\u5173\u4e8epygame\u7684\u77e5\u8bc6\uff0c\u6700\u597d\u7684\u6559\u7a0b\u662f pygame\u7684\u5b98\u65b9\u7f51\u7ad9 \uff0c\u5982\u679c\u82f1\u8bed\u6ca1\u6bdb\u75c5\u5c31\u53ef\u4ee5\u8d76\u7d27\u53bb\u770b\u770b\u5566\u3002 \u5982\u679c\u60f3\u5f00\u53d1 3D\u6e38\u620f \uff0cpygame\u5c31\u663e\u5f97\u529b\u4e0d\u4ece\u5fc3\u4e86\uff0c\u5bf93D\u6e38\u620f\u5f00\u53d1\u5982\u679c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u4e0d\u59a8\u770b\u770b Panda3D \u3002","title":"\u7b2c\u5341\u5929"},{"location":"new/10%E3%80%81%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/#_1","text":"","title":"\u56fe\u5f62\u7528\u6237\u754c\u9762\u548c\u6e38\u620f\u5f00\u53d1"},{"location":"new/10%E3%80%81%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/#tkintergui","text":"GUI\u662f\u56fe\u5f62\u7528\u6237\u754c\u9762\u7684\u7f29\u5199\uff0c\u56fe\u5f62\u5316\u7684\u7528\u6237\u754c\u9762\u5bf9\u4f7f\u7528\u8fc7\u8ba1\u7b97\u673a\u7684\u4eba\u6765\u8bf4\u5e94\u8be5\u90fd\u4e0d\u964c\u751f\uff0c\u5728\u6b64\u4e5f\u65e0\u9700\u8fdb\u884c\u8d58\u8ff0\u3002Python\u9ed8\u8ba4\u7684GUI\u5f00\u53d1\u6a21\u5757\u662ftkinter\uff08\u5728Python 3\u4ee5\u524d\u7684\u7248\u672c\u4e2d\u540d\u4e3aTkinter\uff09\uff0c\u4ece\u8fd9\u4e2a\u540d\u5b57\u5c31\u53ef\u4ee5\u770b\u51fa\u5b83\u662f\u57fa\u4e8eTk\u7684\uff0cTk\u662f\u4e00\u4e2a\u5de5\u5177\u5305\uff0c\u6700\u521d\u662f\u4e3aTcl\u8bbe\u8ba1\u7684\uff0c\u540e\u6765\u88ab\u79fb\u690d\u5230\u5f88\u591a\u5176\u4ed6\u7684\u811a\u672c\u8bed\u8a00\u4e2d\uff0c\u5b83\u63d0\u4f9b\u4e86\u8de8\u5e73\u53f0\u7684GUI\u63a7\u4ef6\u3002\u5f53\u7136Tk\u5e76\u4e0d\u662f\u6700\u65b0\u548c\u6700\u597d\u7684\u9009\u62e9\uff0c\u4e5f\u6ca1\u6709\u529f\u80fd\u7279\u522b\u5f3a\u5927\u7684GUI\u63a7\u4ef6\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u5f00\u53d1GUI\u5e94\u7528\u5e76\u4e0d\u662fPython\u6700\u64c5\u957f\u7684\u5de5\u4f5c\uff0c\u5982\u679c\u771f\u7684\u9700\u8981\u4f7f\u7528Python\u5f00\u53d1GUI\u5e94\u7528\uff0cwxPython\u3001PyQt\u3001PyGTK\u7b49\u6a21\u5757\u90fd\u662f\u4e0d\u9519\u7684\u9009\u62e9\u3002 \u57fa\u672c\u4e0a\u4f7f\u7528tkinter\u6765\u5f00\u53d1GUI\u5e94\u7528\u9700\u8981\u4ee5\u4e0b5\u4e2a\u6b65\u9aa4\uff1a \u5bfc\u5165tkinter\u6a21\u5757\u4e2d\u6211\u4eec\u9700\u8981\u7684\u4e1c\u897f\u3002 \u521b\u5efa\u4e00\u4e2a\u9876\u5c42\u7a97\u53e3\u5bf9\u8c61\u5e76\u7528\u5b83\u6765\u627f\u8f7d\u6574\u4e2aGUI\u5e94\u7528\u3002 \u5728\u9876\u5c42\u7a97\u53e3\u5bf9\u8c61\u4e0a\u6dfb\u52a0GUI\u7ec4\u4ef6\u3002 \u901a\u8fc7\u4ee3\u7801\u5c06\u8fd9\u4e9bGUI\u7ec4\u4ef6\u7684\u529f\u80fd\u7ec4\u7ec7\u8d77\u6765\u3002 \u8fdb\u5165\u4e3b\u4e8b\u4ef6\u5faa\u73af(main loop)\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528tkinter\u505a\u4e00\u4e2a\u7b80\u5355\u7684GUI\u5e94\u7528\u3002 import tkinter import tkinter.messagebox def main(): flag = True # \u4fee\u6539\u6807\u7b7e\u4e0a\u7684\u6587\u5b57 def change_label_text(): nonlocal flag flag = not flag color, msg = ('red', 'Hello, world!')\\ if flag else ('blue', 'Goodbye, world!') label.config(text=msg, fg=color) # \u786e\u8ba4\u9000\u51fa def confirm_to_quit(): if tkinter.messagebox.askokcancel('\u6e29\u99a8\u63d0\u793a', '\u786e\u5b9a\u8981\u9000\u51fa\u5417?'): top.quit() # \u521b\u5efa\u9876\u5c42\u7a97\u53e3 top = tkinter.Tk() # \u8bbe\u7f6e\u7a97\u53e3\u5927\u5c0f top.geometry('240x160') # \u8bbe\u7f6e\u7a97\u53e3\u6807\u9898 top.title('\u5c0f\u6e38\u620f') # \u521b\u5efa\u6807\u7b7e\u5bf9\u8c61\u5e76\u6dfb\u52a0\u5230\u9876\u5c42\u7a97\u53e3 label = tkinter.Label(top, text='Hello, world!', font='Arial -32', fg='red') label.pack(expand=1) # \u521b\u5efa\u4e00\u4e2a\u88c5\u6309\u94ae\u7684\u5bb9\u5668 panel = tkinter.Frame(top) # \u521b\u5efa\u6309\u94ae\u5bf9\u8c61 \u6307\u5b9a\u6dfb\u52a0\u5230\u54ea\u4e2a\u5bb9\u5668\u4e2d \u901a\u8fc7command\u53c2\u6570\u7ed1\u5b9a\u4e8b\u4ef6\u56de\u8c03\u51fd\u6570 button1 = tkinter.Button(panel, text='\u4fee\u6539', command=change_label_text) button1.pack(side='left') button2 = tkinter.Button(panel, text='\u9000\u51fa', command=confirm_to_quit) button2.pack(side='right') panel.pack(side='bottom') # \u5f00\u542f\u4e3b\u4e8b\u4ef6\u5faa\u73af tkinter.mainloop() if __name__ == '__main__': main() \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0cGUI\u5e94\u7528\u901a\u5e38\u662f\u4e8b\u4ef6\u9a71\u52a8\u5f0f\u7684\uff0c\u4e4b\u6240\u4ee5\u8981\u8fdb\u5165\u4e3b\u4e8b\u4ef6\u5faa\u73af\u5c31\u662f\u8981\u76d1\u542c\u9f20\u6807\u3001\u952e\u76d8\u7b49\u5404\u79cd\u4e8b\u4ef6\u7684\u53d1\u751f\u5e76\u6267\u884c\u5bf9\u5e94\u7684\u4ee3\u7801\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406\uff0c\u56e0\u4e3a\u4e8b\u4ef6\u4f1a\u6301\u7eed\u7684\u53d1\u751f\uff0c\u6240\u4ee5\u9700\u8981\u8fd9\u6837\u7684\u4e00\u4e2a\u5faa\u73af\u4e00\u76f4\u8fd0\u884c\u7740\u7b49\u5f85\u4e0b\u4e00\u4e2a\u4e8b\u4ef6\u7684\u53d1\u751f\u3002\u53e6\u4e00\u65b9\u9762\uff0cTk\u4e3a\u63a7\u4ef6\u7684\u6446\u653e\u63d0\u4f9b\u4e86\u4e09\u79cd\u5e03\u5c40\u7ba1\u7406\u5668\uff0c\u901a\u8fc7\u5e03\u5c40\u7ba1\u7406\u5668\u53ef\u4ee5\u5bf9\u63a7\u4ef6\u8fdb\u884c\u5b9a\u4f4d\uff0c\u8fd9\u4e09\u79cd\u5e03\u5c40\u7ba1\u7406\u5668\u5206\u522b\u662f\uff1aPlacer\uff08\u5f00\u53d1\u8005\u63d0\u4f9b\u63a7\u4ef6\u7684\u5927\u5c0f\u548c\u6446\u653e\u4f4d\u7f6e\uff09\u3001Packer\uff08\u81ea\u52a8\u5c06\u63a7\u4ef6\u586b\u5145\u5230\u5408\u9002\u7684\u4f4d\u7f6e\uff09\u548cGrid\uff08\u57fa\u4e8e\u7f51\u683c\u5750\u6807\u6765\u6446\u653e\u63a7\u4ef6\uff09\uff0c\u6b64\u5904\u4e0d\u8fdb\u884c\u8d58\u8ff0\u3002","title":"\u57fa\u4e8etkinter\u6a21\u5757\u7684GUI"},{"location":"new/10%E3%80%81%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/#pygame","text":"Pygame\u662f\u4e00\u4e2a\u5f00\u6e90\u7684Python\u6a21\u5757\uff0c\u4e13\u95e8\u7528\u4e8e\u591a\u5a92\u4f53\u5e94\u7528\uff08\u5982\u7535\u5b50\u6e38\u620f\uff09\u7684\u5f00\u53d1\uff0c\u5176\u4e2d\u5305\u542b\u5bf9\u56fe\u50cf\u3001\u58f0\u97f3\u3001\u89c6\u9891\u3001\u4e8b\u4ef6\u3001\u78b0\u649e\u7b49\u7684\u652f\u6301\u3002Pygame\u5efa\u7acb\u5728 SDL \u7684\u57fa\u7840\u4e0a\uff0cSDL\u662f\u4e00\u5957\u8de8\u5e73\u53f0\u7684\u591a\u5a92\u4f53\u5f00\u53d1\u5e93\uff0c\u7528C\u8bed\u8a00\u5b9e\u73b0\uff0c\u88ab\u5e7f\u6cdb\u7684\u5e94\u7528\u4e8e\u6e38\u620f\u3001\u6a21\u62df\u5668\u3001\u64ad\u653e\u5668\u7b49\u7684\u5f00\u53d1\u3002\u800cPygame\u8ba9\u6e38\u620f\u5f00\u53d1\u8005\u4e0d\u518d\u88ab\u5e95\u5c42\u8bed\u8a00\u675f\u7f1a\uff0c\u53ef\u4ee5\u66f4\u591a\u7684\u5173\u6ce8\u6e38\u620f\u7684\u529f\u80fd\u548c\u903b\u8f91\u3002 \u4e0b\u9762\u6211\u4eec\u6765\u5b8c\u6210\u4e00\u4e2a\u7b80\u5355\u7684\u5c0f\u6e38\u620f\uff0c\u6e38\u620f\u7684\u540d\u5b57\u53eb\u201c\u5927\u7403\u5403\u5c0f\u7403\u201d\uff0c\u5f53\u7136\u5b8c\u6210\u8fd9\u4e2a\u6e38\u620f\u5e76\u4e0d\u662f\u91cd\u70b9\uff0c\u5b66\u4f1a\u4f7f\u7528Pygame\u4e5f\u4e0d\u662f\u91cd\u70b9\uff0c\u6700\u91cd\u8981\u7684\u6211\u4eec\u8981\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4f53\u4f1a\u5982\u4f55\u4f7f\u7528\u524d\u9762\u8bb2\u89e3\u7684\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\uff0c\u5b66\u4f1a\u7528\u8fd9\u79cd\u7f16\u7a0b\u601d\u60f3\u53bb\u89e3\u51b3\u73b0\u5b9e\u4e2d\u7684\u95ee\u9898\u3002","title":"\u4f7f\u7528Pygame\u8fdb\u884c\u6e38\u620f\u5f00\u53d1"},{"location":"new/10%E3%80%81%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/#_2","text":"import pygame def main(): # \u521d\u59cb\u5316\u5bfc\u5165\u7684pygame\u4e2d\u7684\u6a21\u5757 pygame.init() # \u521d\u59cb\u5316\u7528\u4e8e\u663e\u793a\u7684\u7a97\u53e3\u5e76\u8bbe\u7f6e\u7a97\u53e3\u5c3a\u5bf8 screen = pygame.display.set_mode((800, 600)) # \u8bbe\u7f6e\u5f53\u524d\u7a97\u53e3\u7684\u6807\u9898 pygame.display.set_caption('\u5927\u7403\u5403\u5c0f\u7403') running = True # \u5f00\u542f\u4e00\u4e2a\u4e8b\u4ef6\u5faa\u73af\u5904\u7406\u53d1\u751f\u7684\u4e8b\u4ef6 while running: # \u4ece\u6d88\u606f\u961f\u5217\u4e2d\u83b7\u53d6\u4e8b\u4ef6\u5e76\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406 for event in pygame.event.get(): if event.type == pygame.QUIT: running = False if __name__ == '__main__': main()","title":"\u5236\u4f5c\u6e38\u620f\u7a97\u53e3"},{"location":"new/10%E3%80%81%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/#_3","text":"\u53ef\u4ee5\u901a\u8fc7pygame\u4e2ddraw\u6a21\u5757\u7684\u51fd\u6570\u5728\u7a97\u53e3\u4e0a\u7ed8\u56fe\uff0c\u53ef\u4ee5\u7ed8\u5236\u7684\u56fe\u5f62\u5305\u62ec\uff1a\u7ebf\u6761\u3001\u77e9\u5f62\u3001\u591a\u8fb9\u5f62\u3001\u5706\u3001\u692d\u5706\u3001\u5706\u5f27\u7b49\u3002\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u5c4f\u5e55\u5750\u6807\u7cfb\u662f\u5c06\u5c4f\u5e55\u5de6\u4e0a\u89d2\u8bbe\u7f6e\u4e3a\u5750\u6807\u539f\u70b9 (0, 0) \uff0c\u5411\u53f3\u662fx\u8f74\u7684\u6b63\u5411\uff0c\u5411\u4e0b\u662fy\u8f74\u7684\u6b63\u5411\uff0c\u5728\u8868\u793a\u4f4d\u7f6e\u6216\u8005\u8bbe\u7f6e\u5c3a\u5bf8\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9ed8\u8ba4\u7684\u5355\u4f4d\u90fd\u662f \u50cf\u7d20 \u3002\u6240\u8c13\u50cf\u7d20\u5c31\u662f\u5c4f\u5e55\u4e0a\u7684\u4e00\u4e2a\u70b9\uff0c\u4f60\u53ef\u4ee5\u7528\u6d4f\u89c8\u56fe\u7247\u7684\u8f6f\u4ef6\u8bd5\u7740\u5c06\u4e00\u5f20\u56fe\u7247\u653e\u5927\u82e5\u5e72\u500d\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u8fd9\u4e9b\u70b9\u3002pygame\u4e2d\u8868\u793a\u989c\u8272\u7528\u7684\u662f\u8272\u5149 \u4e09\u539f\u8272 \u8868\u793a\u6cd5\uff0c\u5373\u901a\u8fc7\u4e00\u4e2a\u5143\u7ec4\u6216\u5217\u8868\u6765\u6307\u5b9a\u989c\u8272\u7684RGB\u503c\uff0c\u6bcf\u4e2a\u503c\u90fd\u57280~255\u4e4b\u95f4\uff0c\u56e0\u4e3a\u662f\u6bcf\u79cd\u539f\u8272\u90fd\u7528\u4e00\u4e2a8\u4f4d\uff08bit\uff09\u7684\u503c\u6765\u8868\u793a\uff0c\u4e09\u79cd\u989c\u8272\u76f8\u5f53\u4e8e\u4e00\u5171\u753124\u4f4d\u6784\u6210\uff0c\u8fd9\u4e5f\u5c31\u662f\u5e38\u8bf4\u7684\u201c24\u4f4d\u989c\u8272\u8868\u793a\u6cd5\u201d\u3002 import pygame def main(): # \u521d\u59cb\u5316\u5bfc\u5165\u7684pygame\u4e2d\u7684\u6a21\u5757 pygame.init() # \u521d\u59cb\u5316\u7528\u4e8e\u663e\u793a\u7684\u7a97\u53e3\u5e76\u8bbe\u7f6e\u7a97\u53e3\u5c3a\u5bf8 screen = pygame.display.set_mode((800, 600)) # \u8bbe\u7f6e\u5f53\u524d\u7a97\u53e3\u7684\u6807\u9898 pygame.display.set_caption('\u5927\u7403\u5403\u5c0f\u7403') # \u8bbe\u7f6e\u7a97\u53e3\u7684\u80cc\u666f\u8272(\u989c\u8272\u662f\u7531\u7ea2\u7eff\u84dd\u4e09\u539f\u8272\u6784\u6210\u7684\u5143\u7ec4) screen.fill((242, 242, 242)) # \u7ed8\u5236\u4e00\u4e2a\u5706(\u53c2\u6570\u5206\u522b\u662f: \u5c4f\u5e55, \u989c\u8272, \u5706\u5fc3\u4f4d\u7f6e, \u534a\u5f84, 0\u8868\u793a\u586b\u5145\u5706) pygame.draw.circle(screen, (255, 0, 0,), (100, 100), 30, 0) # \u5237\u65b0\u5f53\u524d\u7a97\u53e3(\u6e32\u67d3\u7a97\u53e3\u5c06\u7ed8\u5236\u7684\u56fe\u50cf\u5448\u73b0\u51fa\u6765) pygame.display.flip() running = True # \u5f00\u542f\u4e00\u4e2a\u4e8b\u4ef6\u5faa\u73af\u5904\u7406\u53d1\u751f\u7684\u4e8b\u4ef6 while running: # \u4ece\u6d88\u606f\u961f\u5217\u4e2d\u83b7\u53d6\u4e8b\u4ef6\u5e76\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406 for event in pygame.event.get(): if event.type == pygame.QUIT: running = False if __name__ == '__main__': main()","title":"\u5728\u7a97\u53e3\u4e2d\u7ed8\u56fe"},{"location":"new/10%E3%80%81%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/#_4","text":"\u5982\u679c\u9700\u8981\u76f4\u63a5\u52a0\u8f7d\u56fe\u50cf\u5230\u7a97\u53e3\u4e0a\uff0c\u53ef\u4ee5\u4f7f\u7528pygame\u4e2dimage\u6a21\u5757\u7684\u51fd\u6570\u6765\u52a0\u8f7d\u56fe\u50cf\uff0c\u518d\u901a\u8fc7\u4e4b\u524d\u83b7\u5f97\u7684\u7a97\u53e3\u5bf9\u8c61\u7684 blit \u65b9\u6cd5\u6e32\u67d3\u56fe\u50cf\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import pygame def main(): # \u521d\u59cb\u5316\u5bfc\u5165\u7684pygame\u4e2d\u7684\u6a21\u5757 pygame.init() # \u521d\u59cb\u5316\u7528\u4e8e\u663e\u793a\u7684\u7a97\u53e3\u5e76\u8bbe\u7f6e\u7a97\u53e3\u5c3a\u5bf8 screen = pygame.display.set_mode((800, 600)) # \u8bbe\u7f6e\u5f53\u524d\u7a97\u53e3\u7684\u6807\u9898 pygame.display.set_caption('\u5927\u7403\u5403\u5c0f\u7403') # \u8bbe\u7f6e\u7a97\u53e3\u7684\u80cc\u666f\u8272(\u989c\u8272\u662f\u7531\u7ea2\u7eff\u84dd\u4e09\u539f\u8272\u6784\u6210\u7684\u5143\u7ec4) screen.fill((255, 255, 255)) # \u901a\u8fc7\u6307\u5b9a\u7684\u6587\u4ef6\u540d\u52a0\u8f7d\u56fe\u50cf ball_image = pygame.image.load('./res/ball.png') # \u5728\u7a97\u53e3\u4e0a\u6e32\u67d3\u56fe\u50cf screen.blit(ball_image, (50, 50)) # \u5237\u65b0\u5f53\u524d\u7a97\u53e3(\u6e32\u67d3\u7a97\u53e3\u5c06\u7ed8\u5236\u7684\u56fe\u50cf\u5448\u73b0\u51fa\u6765) pygame.display.flip() running = True # \u5f00\u542f\u4e00\u4e2a\u4e8b\u4ef6\u5faa\u73af\u5904\u7406\u53d1\u751f\u7684\u4e8b\u4ef6 while running: # \u4ece\u6d88\u606f\u961f\u5217\u4e2d\u83b7\u53d6\u4e8b\u4ef6\u5e76\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406 for event in pygame.event.get(): if event.type == pygame.QUIT: running = False if __name__ == '__main__': main()","title":"\u52a0\u8f7d\u56fe\u50cf"},{"location":"new/10%E3%80%81%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/#_5","text":"\u8bf4\u5230 \u52a8\u753b \u8fd9\u4e2a\u8bcd\u5927\u5bb6\u90fd\u4e0d\u4f1a\u964c\u751f\uff0c\u4e8b\u5b9e\u4e0a\u8981\u5b9e\u73b0\u52a8\u753b\u6548\u679c\uff0c\u672c\u8eab\u7684\u539f\u7406\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u5c31\u662f\u5c06\u4e0d\u8fde\u7eed\u7684\u56fe\u7247\u8fde\u7eed\u7684\u64ad\u653e\uff0c\u53ea\u8981\u6bcf\u79d2\u949f\u8fbe\u5230\u4e86\u4e00\u5b9a\u7684\u5e27\u6570\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u505a\u51fa\u6bd4\u8f83\u6d41\u7545\u7684\u52a8\u753b\u6548\u679c\u3002\u5982\u679c\u8981\u8ba9\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684\u5c0f\u7403\u52a8\u8d77\u6765\uff0c\u53ef\u4ee5\u5c06\u5c0f\u7403\u7684\u4f4d\u7f6e\u7528\u53d8\u91cf\u6765\u8868\u793a\uff0c\u5e76\u5728\u5faa\u73af\u4e2d\u4fee\u6539\u5c0f\u7403\u7684\u4f4d\u7f6e\u518d\u5237\u65b0\u6574\u4e2a\u7a97\u53e3\u5373\u53ef\u3002 import pygame def main(): # \u521d\u59cb\u5316\u5bfc\u5165\u7684pygame\u4e2d\u7684\u6a21\u5757 pygame.init() # \u521d\u59cb\u5316\u7528\u4e8e\u663e\u793a\u7684\u7a97\u53e3\u5e76\u8bbe\u7f6e\u7a97\u53e3\u5c3a\u5bf8 screen = pygame.display.set_mode((800, 600)) # \u8bbe\u7f6e\u5f53\u524d\u7a97\u53e3\u7684\u6807\u9898 pygame.display.set_caption('\u5927\u7403\u5403\u5c0f\u7403') # \u5b9a\u4e49\u53d8\u91cf\u6765\u8868\u793a\u5c0f\u7403\u5728\u5c4f\u5e55\u4e0a\u7684\u4f4d\u7f6e x, y = 50, 50 running = True # \u5f00\u542f\u4e00\u4e2a\u4e8b\u4ef6\u5faa\u73af\u5904\u7406\u53d1\u751f\u7684\u4e8b\u4ef6 while running: # \u4ece\u6d88\u606f\u961f\u5217\u4e2d\u83b7\u53d6\u4e8b\u4ef6\u5e76\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406 for event in pygame.event.get(): if event.type == pygame.QUIT: running = False screen.fill((255, 255, 255)) pygame.draw.circle(screen, (255, 0, 0,), (x, y), 30, 0) pygame.display.flip() # \u6bcf\u969450\u6beb\u79d2\u5c31\u6539\u53d8\u5c0f\u7403\u7684\u4f4d\u7f6e\u518d\u5237\u65b0\u7a97\u53e3 pygame.time.delay(50) x, y = x + 5, y + 5 if __name__ == '__main__': main()","title":"\u5b9e\u73b0\u52a8\u753b\u6548\u679c"},{"location":"new/10%E3%80%81%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/#_6","text":"\u901a\u5e38\u4e00\u4e2a\u6e38\u620f\u4e2d\u4f1a\u6709\u5f88\u591a\u5bf9\u8c61\u51fa\u73b0\uff0c\u800c\u8fd9\u4e9b\u5bf9\u8c61\u4e4b\u95f4\u7684\u201c\u78b0\u649e\u201d\u5728\u6240\u96be\u514d\uff0c\u6bd4\u5982\u70ae\u5f39\u51fb\u4e2d\u4e86\u98de\u673a\u3001\u7bb1\u5b50\u649e\u5230\u4e86\u5730\u9762\u7b49\u3002\u78b0\u649e\u68c0\u6d4b\u5728\u7edd\u5927\u591a\u6570\u7684\u6e38\u620f\u4e2d\u90fd\u662f\u4e00\u4e2a\u5fc5\u987b\u5f97\u5904\u7406\u7684\u81f3\u5173\u91cd\u8981\u7684\u95ee\u9898\uff0cpygame\u7684sprite\uff08\u52a8\u753b\u7cbe\u7075\uff09\u6a21\u5757\u5c31\u63d0\u4f9b\u4e86\u5bf9\u78b0\u649e\u68c0\u6d4b\u7684\u652f\u6301\uff0c\u8fd9\u91cc\u6211\u4eec\u6682\u65f6\u4e0d\u4ecb\u7ecdsprite\u6a21\u5757\u63d0\u4f9b\u7684\u529f\u80fd\uff0c\u56e0\u4e3a\u8981\u68c0\u6d4b\u4e24\u4e2a\u5c0f\u7403\u6709\u6ca1\u6709\u78b0\u649e\u5176\u5b9e\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u68c0\u67e5\u7403\u5fc3\u7684\u8ddd\u79bb\u6709\u6ca1\u6709\u5c0f\u4e8e\u4e24\u4e2a\u7403\u7684\u534a\u5f84\u4e4b\u548c\u3002\u4e3a\u4e86\u5236\u9020\u51fa\u66f4\u591a\u7684\u5c0f\u7403\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5bf9\u9f20\u6807\u4e8b\u4ef6\u7684\u5904\u7406\uff0c\u5728\u70b9\u51fb\u9f20\u6807\u7684\u4f4d\u7f6e\u521b\u5efa\u989c\u8272\u3001\u5927\u5c0f\u548c\u79fb\u52a8\u901f\u5ea6\u90fd\u968f\u673a\u7684\u5c0f\u7403\uff0c\u5f53\u7136\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4e4b\u524d\u5b66\u4e60\u5230\u7684\u9762\u5411\u5bf9\u8c61\u7684\u77e5\u8bc6\u5e94\u7528\u8d77\u6765\u3002 from enum import Enum, unique from math import sqrt from random import randint import pygame @unique class Color(Enum): \"\"\"\u989c\u8272\"\"\" RED = (255, 0, 0) GREEN = (0, 255, 0) BLUE = (0, 0, 255) BLACK = (0, 0, 0) WHITE = (255, 255, 255) GRAY = (242, 242, 242) @staticmethod def random_color(): \"\"\"\u83b7\u5f97\u968f\u673a\u989c\u8272\"\"\" r = randint(0, 255) g = randint(0, 255) b = randint(0, 255) return (r, g, b) class Ball(object): \"\"\"\u7403\"\"\" def __init__(self, x, y, radius, sx, sy, color=Color.RED): \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5\"\"\" self.x = x self.y = y self.radius = radius self.sx = sx self.sy = sy self.color = color self.alive = True def move(self, screen): \"\"\"\u79fb\u52a8\"\"\" self.x += self.sx self.y += self.sy if self.x - self.radius <= 0 or \\ self.x + self.radius >= screen.get_width(): self.sx = -self.sx if self.y - self.radius <= 0 or \\ self.y + self.radius >= screen.get_height(): self.sy = -self.sy def eat(self, other): \"\"\"\u5403\u5176\u4ed6\u7403\"\"\" if self.alive and other.alive and self != other: dx, dy = self.x - other.x, self.y - other.y distance = sqrt(dx ** 2 + dy ** 2) if distance < self.radius + other.radius \\ and self.radius > other.radius: other.alive = False self.radius = self.radius + int(other.radius * 0.146) def draw(self, screen): \"\"\"\u5728\u7a97\u53e3\u4e0a\u7ed8\u5236\u7403\"\"\" pygame.draw.circle(screen, self.color, (self.x, self.y), self.radius, 0)","title":"\u78b0\u649e\u68c0\u6d4b"},{"location":"new/10%E3%80%81%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/#_7","text":"\u53ef\u4ee5\u5728\u4e8b\u4ef6\u5faa\u73af\u4e2d\u5bf9\u9f20\u6807\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406\uff0c\u901a\u8fc7\u4e8b\u4ef6\u5bf9\u8c61\u7684 type \u5c5e\u6027\u53ef\u4ee5\u5224\u5b9a\u4e8b\u4ef6\u7c7b\u578b\uff0c\u518d\u901a\u8fc7 pos \u5c5e\u6027\u5c31\u53ef\u4ee5\u83b7\u5f97\u9f20\u6807\u70b9\u51fb\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u8981\u5904\u7406\u952e\u76d8\u4e8b\u4ef6\u4e5f\u662f\u5728\u8fd9\u4e2a\u5730\u65b9\uff0c\u505a\u6cd5\u4e0e\u5904\u7406\u9f20\u6807\u4e8b\u4ef6\u7c7b\u4f3c\u3002 def main(): # \u5b9a\u4e49\u7528\u6765\u88c5\u6240\u6709\u7403\u7684\u5bb9\u5668 balls = [] # \u521d\u59cb\u5316\u5bfc\u5165\u7684pygame\u4e2d\u7684\u6a21\u5757 pygame.init() # \u521d\u59cb\u5316\u7528\u4e8e\u663e\u793a\u7684\u7a97\u53e3\u5e76\u8bbe\u7f6e\u7a97\u53e3\u5c3a\u5bf8 screen = pygame.display.set_mode((800, 600)) # \u8bbe\u7f6e\u5f53\u524d\u7a97\u53e3\u7684\u6807\u9898 pygame.display.set_caption('\u5927\u7403\u5403\u5c0f\u7403') running = True # \u5f00\u542f\u4e00\u4e2a\u4e8b\u4ef6\u5faa\u73af\u5904\u7406\u53d1\u751f\u7684\u4e8b\u4ef6 while running: # \u4ece\u6d88\u606f\u961f\u5217\u4e2d\u83b7\u53d6\u4e8b\u4ef6\u5e76\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406 for event in pygame.event.get(): if event.type == pygame.QUIT: running = False # \u5904\u7406\u9f20\u6807\u4e8b\u4ef6\u7684\u4ee3\u7801 if event.type == pygame.MOUSEBUTTONDOWN and event.button == 1: # \u83b7\u5f97\u70b9\u51fb\u9f20\u6807\u7684\u4f4d\u7f6e x, y = event.pos radius = randint(10, 100) sx, sy = randint(-10, 10), randint(-10, 10) color = Color.random_color() # \u5728\u70b9\u51fb\u9f20\u6807\u7684\u4f4d\u7f6e\u521b\u5efa\u4e00\u4e2a\u7403(\u5927\u5c0f\u3001\u901f\u5ea6\u548c\u989c\u8272\u968f\u673a) ball = Ball(x, y, radius, sx, sy, color) # \u5c06\u7403\u6dfb\u52a0\u5230\u5217\u8868\u5bb9\u5668\u4e2d balls.append(ball) screen.fill((255, 255, 255)) # \u53d6\u51fa\u5bb9\u5668\u4e2d\u7684\u7403 \u5982\u679c\u6ca1\u88ab\u5403\u6389\u5c31\u7ed8\u5236 \u88ab\u5403\u6389\u4e86\u5c31\u79fb\u9664 for ball in balls: if ball.alive: ball.draw(screen) else: balls.remove(ball) pygame.display.flip() # \u6bcf\u969450\u6beb\u79d2\u5c31\u6539\u53d8\u7403\u7684\u4f4d\u7f6e\u518d\u5237\u65b0\u7a97\u53e3 pygame.time.delay(50) for ball in balls: ball.move(screen) # \u68c0\u67e5\u7403\u6709\u6ca1\u6709\u5403\u5230\u5176\u4ed6\u7684\u7403 for other in balls: ball.eat(other) if __name__ == '__main__': main() \u4e0a\u9762\u7684\u4e24\u6bb5\u4ee3\u7801\u5408\u5728\u4e00\u8d77\uff0c\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u201c\u5927\u7403\u5403\u5c0f\u7403\u201d\u7684\u6e38\u620f\uff08\u5982\u4e0b\u56fe\u6240\u793a\uff09\uff0c\u51c6\u786e\u7684\u8bf4\u5b83\u7b97\u4e0d\u4e0a\u4e00\u4e2a\u6e38\u620f\uff0c\u4f46\u662f\u505a\u4e00\u4e2a\u5c0f\u6e38\u620f\u7684\u57fa\u672c\u77e5\u8bc6\u6211\u4eec\u5df2\u7ecf\u901a\u8fc7\u8fd9\u4e2a\u4f8b\u5b50\u544a\u8bc9\u5927\u5bb6\u4e86\uff0c\u6709\u4e86\u8fd9\u4e9b\u77e5\u8bc6\u5df2\u7ecf\u53ef\u4ee5\u5f00\u59cb\u4f60\u7684\u5c0f\u6e38\u620f\u5f00\u53d1\u4e4b\u65c5\u4e86\u3002\u5176\u5b9e\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u8fd8\u6709\u5f88\u591a\u503c\u5f97\u6539\u8fdb\u7684\u5730\u65b9\uff0c\u6bd4\u5982\u5237\u65b0\u7a97\u53e3\u4ee5\u53ca\u8ba9\u7403\u79fb\u52a8\u8d77\u6765\u7684\u4ee3\u7801\u5e76\u4e0d\u5e94\u8be5\u653e\u5728\u4e8b\u4ef6\u5faa\u73af\u4e2d\uff0c\u7b49\u5b66\u4e60\u4e86\u591a\u7ebf\u7a0b\u7684\u77e5\u8bc6\u540e\uff0c\u7528\u4e00\u4e2a\u540e\u53f0\u7ebf\u7a0b\u6765\u5904\u7406\u8fd9\u4e9b\u4e8b\u53ef\u80fd\u662f\u66f4\u597d\u7684\u9009\u62e9\u3002\u5982\u679c\u5e0c\u671b\u83b7\u5f97\u66f4\u597d\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5728\u6e38\u620f\u4e2d\u52a0\u5165\u80cc\u666f\u97f3\u4e50\u4ee5\u53ca\u5728\u7403\u4e0e\u7403\u53d1\u751f\u78b0\u649e\u65f6\u64ad\u653e\u97f3\u6548\uff0c\u5229\u7528pygame\u7684mixer\u548cmusic\u6a21\u5757\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u884c\u4e86\u89e3\u8fd9\u65b9\u9762\u7684\u77e5\u8bc6\u3002\u4e8b\u5b9e\u4e0a\uff0c\u60f3\u4e86\u89e3\u66f4\u591a\u7684\u5173\u4e8epygame\u7684\u77e5\u8bc6\uff0c\u6700\u597d\u7684\u6559\u7a0b\u662f pygame\u7684\u5b98\u65b9\u7f51\u7ad9 \uff0c\u5982\u679c\u82f1\u8bed\u6ca1\u6bdb\u75c5\u5c31\u53ef\u4ee5\u8d76\u7d27\u53bb\u770b\u770b\u5566\u3002 \u5982\u679c\u60f3\u5f00\u53d1 3D\u6e38\u620f \uff0cpygame\u5c31\u663e\u5f97\u529b\u4e0d\u4ece\u5fc3\u4e86\uff0c\u5bf93D\u6e38\u620f\u5f00\u53d1\u5982\u679c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u4e0d\u59a8\u770b\u770b Panda3D \u3002","title":"\u4e8b\u4ef6\u5904\u7406"},{"location":"new/11%E3%80%81%E6%96%87%E4%BB%B6%E5%92%8C%E5%BC%82%E5%B8%B8/","text":"\u6587\u4ef6\u548c\u5f02\u5e38 \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u5e38\u5e38\u9700\u8981\u5bf9\u7a0b\u5e8f\u4e2d\u7684\u6570\u636e\u8fdb\u884c \u6301\u4e45\u5316 \u64cd\u4f5c\uff0c\u800c\u5b9e\u73b0\u6570\u636e\u6301\u4e45\u5316\u6700\u76f4\u63a5\u7b80\u5355\u7684\u65b9\u5f0f\u5c31\u662f\u5c06\u6570\u636e\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\u3002\u8bf4\u5230\u201c\u6587\u4ef6\u201d\u8fd9\u4e2a\u8bcd\uff0c\u53ef\u80fd\u9700\u8981\u5148\u79d1\u666e\u4e00\u4e0b\u5173\u4e8e \u6587\u4ef6\u7cfb\u7edf \u7684\u77e5\u8bc6\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u6982\u5ff5\uff0c\u7ef4\u57fa\u767e\u79d1\u4e0a\u7ed9\u51fa\u4e86\u5f88\u597d\u7684\u8be0\u91ca\uff0c\u8fd9\u91cc\u4e0d\u518d\u6d6a\u8d39\u7b14\u58a8\u3002 \u5728Python\u4e2d\u5b9e\u73b0\u6587\u4ef6\u7684\u8bfb\u5199\u64cd\u4f5c\u5176\u5b9e\u975e\u5e38\u7b80\u5355\uff0c\u901a\u8fc7Python\u5185\u7f6e\u7684 open \u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a\u6587\u4ef6\u540d\u3001\u64cd\u4f5c\u6a21\u5f0f\u3001\u7f16\u7801\u4fe1\u606f\u7b49\u6765\u83b7\u5f97\u64cd\u4f5c\u6587\u4ef6\u7684\u5bf9\u8c61\uff0c\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u5bf9\u6587\u4ef6\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\u4e86\u3002\u8fd9\u91cc\u6240\u8bf4\u7684\u64cd\u4f5c\u6a21\u5f0f\u662f\u6307\u8981\u6253\u5f00\u4ec0\u4e48\u6837\u7684\u6587\u4ef6\uff08\u5b57\u7b26\u6587\u4ef6\u8fd8\u662f\u4e8c\u8fdb\u5236\u6587\u4ef6\uff09\u4ee5\u53ca\u505a\u4ec0\u4e48\u6837\u7684\u64cd\u4f5c\uff08\u8bfb\u3001\u5199\u8fd8\u662f\u8ffd\u52a0\uff09\uff0c\u5177\u4f53\u7684\u5982\u4e0b\u8868\u6240\u793a\u3002 \u64cd\u4f5c\u6a21\u5f0f \u5177\u4f53\u542b\u4e49 'r' \u8bfb\u53d6 \uff08\u9ed8\u8ba4\uff09 'w' \u5199\u5165\uff08\u4f1a\u5148\u622a\u65ad\u4e4b\u524d\u7684\u5185\u5bb9\uff09 'x' \u5199\u5165\uff0c\u5982\u679c\u6587\u4ef6\u5df2\u7ecf\u5b58\u5728\u4f1a\u4ea7\u751f\u5f02\u5e38 'a' \u8ffd\u52a0\uff0c\u5c06\u5185\u5bb9\u5199\u5165\u5230\u5df2\u6709\u6587\u4ef6\u7684\u672b\u5c3e 'b' \u4e8c\u8fdb\u5236\u6a21\u5f0f 't' \u6587\u672c\u6a21\u5f0f\uff08\u9ed8\u8ba4\uff09 '+' \u66f4\u65b0\uff08\u65e2\u53ef\u4ee5\u8bfb\u53c8\u53ef\u4ee5\u5199\uff09 \u4e0b\u9762\u8fd9\u5f20\u56fe\u6765\u81ea\u4e8e \u83dc\u9e1f\u6559\u7a0b \u7f51\u7ad9\uff0c\u5b83\u5c55\u793a\u4e86\u5982\u679c\u6839\u636e\u5e94\u7528\u7a0b\u5e8f\u7684\u9700\u8981\u6765\u8bbe\u7f6e\u64cd\u4f5c\u6a21\u5f0f\u3002 \u8bfb\u5199\u6587\u672c\u6587\u4ef6 \u8bfb\u53d6\u6587\u672c\u6587\u4ef6\u65f6\uff0c\u9700\u8981\u5728\u4f7f\u7528 open \u51fd\u6570\u65f6\u6307\u5b9a\u597d\u5e26\u8def\u5f84\u7684\u6587\u4ef6\u540d\uff08\u53ef\u4ee5\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\u6216\u7edd\u5bf9\u8def\u5f84\uff09\u5e76\u5c06\u6587\u4ef6\u6a21\u5f0f\u8bbe\u7f6e\u4e3a 'r' \uff08\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u503c\u4e5f\u662f 'r' \uff09\uff0c\u7136\u540e\u901a\u8fc7 encoding \u53c2\u6570\u6307\u5b9a\u7f16\u7801\uff08\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u503c\u662fNone\uff0c\u90a3\u4e48\u5728\u8bfb\u53d6\u6587\u4ef6\u65f6\u4f7f\u7528\u7684\u662f\u64cd\u4f5c\u7cfb\u7edf\u9ed8\u8ba4\u7684\u7f16\u7801\uff09\uff0c\u5982\u679c\u4e0d\u80fd\u4fdd\u8bc1\u4fdd\u5b58\u6587\u4ef6\u65f6\u4f7f\u7528\u7684\u7f16\u7801\u65b9\u5f0f\u4e0eencoding\u53c2\u6570\u6307\u5b9a\u7684\u7f16\u7801\u65b9\u5f0f\u662f\u4e00\u81f4\u7684\uff0c\u90a3\u4e48\u5c31\u53ef\u80fd\u56e0\u65e0\u6cd5\u89e3\u7801\u5b57\u7b26\u800c\u5bfc\u81f4\u8bfb\u53d6\u5931\u8d25\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u8bfb\u53d6\u4e00\u4e2a\u7eaf\u6587\u672c\u6587\u4ef6\u3002 def main(): f = open('\u81f4\u6a61\u6811.txt', 'r', encoding='utf-8') print(f.read()) f.close() if __name__ == '__main__': main() \u8bf7\u6ce8\u610f\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u5982\u679c open \u51fd\u6570\u6307\u5b9a\u7684\u6587\u4ef6\u5e76\u4e0d\u5b58\u5728\u6216\u8005\u65e0\u6cd5\u6253\u5f00\uff0c\u90a3\u4e48\u5c06\u5f15\u53d1\u5f02\u5e38\u72b6\u51b5\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002\u4e3a\u4e86\u8ba9\u4ee3\u7801\u6709\u4e00\u5b9a\u7684\u5065\u58ee\u6027\u548c\u5bb9\u9519\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Python\u7684\u5f02\u5e38\u673a\u5236\u5bf9\u53ef\u80fd\u5728\u8fd0\u884c\u65f6\u53d1\u751f\u72b6\u51b5\u7684\u4ee3\u7801\u8fdb\u884c\u9002\u5f53\u7684\u5904\u7406\uff0c\u5982\u4e0b\u6240\u793a\u3002 def main(): f = None try: f = open('\u81f4\u6a61\u6811.txt', 'r', encoding='utf-8') print(f.read()) except FileNotFoundError: print('\u65e0\u6cd5\u6253\u5f00\u6307\u5b9a\u7684\u6587\u4ef6!') except LookupError: print('\u6307\u5b9a\u4e86\u672a\u77e5\u7684\u7f16\u7801!') except UnicodeDecodeError: print('\u8bfb\u53d6\u6587\u4ef6\u65f6\u89e3\u7801\u9519\u8bef!') finally: if f: f.close() if __name__ == '__main__': main() \u5728Python\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u90a3\u4e9b\u5728\u8fd0\u884c\u65f6\u53ef\u80fd\u4f1a\u51fa\u73b0\u72b6\u51b5\u7684\u4ee3\u7801\u653e\u5728 try \u4ee3\u7801\u5757\u4e2d\uff0c\u5728 try \u4ee3\u7801\u5757\u7684\u540e\u9762\u53ef\u4ee5\u8ddf\u4e0a\u4e00\u4e2a\u6216\u591a\u4e2a except \u6765\u6355\u83b7\u53ef\u80fd\u51fa\u73b0\u7684\u5f02\u5e38\u72b6\u51b5\u3002\u4f8b\u5982\u5728\u4e0a\u9762\u8bfb\u53d6\u6587\u4ef6\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6587\u4ef6\u627e\u4e0d\u5230\u4f1a\u5f15\u53d1 FileNotFoundError \uff0c\u6307\u5b9a\u4e86\u672a\u77e5\u7684\u7f16\u7801\u4f1a\u5f15\u53d1 LookupError \uff0c\u800c\u5982\u679c\u8bfb\u53d6\u6587\u4ef6\u65f6\u65e0\u6cd5\u6309\u6307\u5b9a\u65b9\u5f0f\u89e3\u7801\u4f1a\u5f15\u53d1 UnicodeDecodeError \uff0c\u6211\u4eec\u5728 try \u540e\u9762\u8ddf\u4e0a\u4e86\u4e09\u4e2a except \u5206\u522b\u5904\u7406\u8fd9\u4e09\u79cd\u4e0d\u540c\u7684\u5f02\u5e38\u72b6\u51b5\u3002\u6700\u540e\u6211\u4eec\u4f7f\u7528 finally \u4ee3\u7801\u5757\u6765\u5173\u95ed\u6253\u5f00\u7684\u6587\u4ef6\uff0c\u91ca\u653e\u6389\u7a0b\u5e8f\u4e2d\u83b7\u53d6\u7684\u5916\u90e8\u8d44\u6e90\uff0c\u7531\u4e8e finally \u5757\u7684\u4ee3\u7801\u4e0d\u8bba\u7a0b\u5e8f\u6b63\u5e38\u8fd8\u662f\u5f02\u5e38\u90fd\u4f1a\u6267\u884c\u5230\uff08\u751a\u81f3\u662f\u8c03\u7528\u4e86 sys \u6a21\u5757\u7684 exit \u51fd\u6570\u9000\u51faPython\u73af\u5883\uff0c finally \u5757\u90fd\u4f1a\u88ab\u6267\u884c\uff0c\u56e0\u4e3a exit \u51fd\u6570\u5b9e\u8d28\u4e0a\u662f\u5f15\u53d1\u4e86 SystemExit \u5f02\u5e38\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u901a\u5e38\u628a finally \u5757\u79f0\u4e3a\u201c\u603b\u662f\u6267\u884c\u4ee3\u7801\u5757\u201d\uff0c\u5b83\u6700\u9002\u5408\u7528\u6765\u505a\u91ca\u653e\u5916\u90e8\u8d44\u6e90\u7684\u64cd\u4f5c\u3002\u5982\u679c\u4e0d\u613f\u610f\u5728 finally \u4ee3\u7801\u5757\u4e2d\u5173\u95ed\u6587\u4ef6\u5bf9\u8c61\u91ca\u653e\u8d44\u6e90\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e0a\u4e0b\u6587\u8bed\u6cd5\uff0c\u901a\u8fc7 with \u5173\u952e\u5b57\u6307\u5b9a\u6587\u4ef6\u5bf9\u8c61\u7684\u4e0a\u4e0b\u6587\u73af\u5883\u5e76\u5728\u79bb\u5f00\u4e0a\u4e0b\u6587\u73af\u5883\u65f6\u81ea\u52a8\u91ca\u653e\u6587\u4ef6\u8d44\u6e90\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 def main(): try: with open('\u81f4\u6a61\u6811.txt', 'r', encoding='utf-8') as f: print(f.read()) except FileNotFoundError: print('\u65e0\u6cd5\u6253\u5f00\u6307\u5b9a\u7684\u6587\u4ef6!') except LookupError: print('\u6307\u5b9a\u4e86\u672a\u77e5\u7684\u7f16\u7801!') except UnicodeDecodeError: print('\u8bfb\u53d6\u6587\u4ef6\u65f6\u89e3\u7801\u9519\u8bef!') if __name__ == '__main__': main() \u9664\u4e86\u4f7f\u7528\u6587\u4ef6\u5bf9\u8c61\u7684 read \u65b9\u6cd5\u8bfb\u53d6\u6587\u4ef6\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 for-in \u5faa\u73af\u9010\u884c\u8bfb\u53d6\u6216\u8005\u7528 readlines \u65b9\u6cd5\u5c06\u6587\u4ef6\u6309\u884c\u8bfb\u53d6\u5230\u4e00\u4e2a\u5217\u8868\u5bb9\u5668\u4e2d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import time def main(): # \u4e00\u6b21\u6027\u8bfb\u53d6\u6574\u4e2a\u6587\u4ef6\u5185\u5bb9 with open('\u81f4\u6a61\u6811.txt', 'r', encoding='utf-8') as f: print(f.read()) # \u901a\u8fc7for-in\u5faa\u73af\u9010\u884c\u8bfb\u53d6 with open('\u81f4\u6a61\u6811.txt', mode='r') as f: for line in f: print(line, end='') time.sleep(0.5) print() # \u8bfb\u53d6\u6587\u4ef6\u6309\u884c\u8bfb\u53d6\u5230\u5217\u8868\u4e2d with open('\u81f4\u6a61\u6811.txt') as f: lines = f.readlines() print(lines) if __name__ == '__main__': main() \u8981\u5c06\u6587\u672c\u4fe1\u606f\u5199\u5165\u6587\u4ef6\u6587\u4ef6\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u5728\u4f7f\u7528 open \u51fd\u6570\u65f6\u6307\u5b9a\u597d\u6587\u4ef6\u540d\u5e76\u5c06\u6587\u4ef6\u6a21\u5f0f\u8bbe\u7f6e\u4e3a 'w' \u5373\u53ef\u3002\u6ce8\u610f\u5982\u679c\u9700\u8981\u5bf9\u6587\u4ef6\u5185\u5bb9\u8fdb\u884c\u8ffd\u52a0\u5f0f\u5199\u5165\uff0c\u5e94\u8be5\u5c06\u6a21\u5f0f\u8bbe\u7f6e\u4e3a 'a' \u3002\u5982\u679c\u8981\u5199\u5165\u7684\u6587\u4ef6\u4e0d\u5b58\u5728\u4f1a\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u800c\u4e0d\u662f\u5f15\u53d1\u5f02\u5e38\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u5c061-9999\u76f4\u63a5\u7684\u7d20\u6570\u5206\u522b\u5199\u5165\u4e09\u4e2a\u6587\u4ef6\u4e2d\uff081-99\u4e4b\u95f4\u7684\u7d20\u6570\u4fdd\u5b58\u5728a.txt\u4e2d\uff0c100-999\u4e4b\u95f4\u7684\u7d20\u6570\u4fdd\u5b58\u5728b.txt\u4e2d\uff0c1000-9999\u4e4b\u95f4\u7684\u7d20\u6570\u4fdd\u5b58\u5728c.txt\u4e2d\uff09\u3002 from math import sqrt def is_prime(n): \"\"\"\u5224\u65ad\u7d20\u6570\u7684\u51fd\u6570\"\"\" assert n > 0 for factor in range(2, int(sqrt(n)) + 1): if n % factor == 0: return False return True if n != 1 else False def main(): filenames = ('a.txt', 'b.txt', 'c.txt') fs_list = [] try: for filename in filenames: fs_list.append(open(filename, 'w', encoding='utf-8')) for number in range(1, 10000): if is_prime(number): if number < 100: fs_list[0].write(str(number) + '\\n') elif number < 1000: fs_list[1].write(str(number) + '\\n') else: fs_list[2].write(str(number) + '\\n') except IOError as ex: print(ex) print('\u5199\u6587\u4ef6\u65f6\u53d1\u751f\u9519\u8bef!') finally: for fs in fs_list: fs.close() print('\u64cd\u4f5c\u5b8c\u6210!') if __name__ == '__main__': main() \u8bfb\u5199\u4e8c\u8fdb\u5236\u6587\u4ef6 \u77e5\u9053\u4e86\u5982\u4f55\u8bfb\u5199\u6587\u672c\u6587\u4ef6\u8981\u8bfb\u5199\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e5f\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\u4e86\u590d\u5236\u56fe\u7247\u6587\u4ef6\u7684\u529f\u80fd\u3002 def main(): try: with open('guido.jpg', 'rb') as fs1: data = fs1.read() print(type(data)) # <class 'bytes'> with open('\u5409\u591a.jpg', 'wb') as fs2: fs2.write(data) except FileNotFoundError as e: print('\u6307\u5b9a\u7684\u6587\u4ef6\u65e0\u6cd5\u6253\u5f00.') except IOError as e: print('\u8bfb\u5199\u6587\u4ef6\u65f6\u51fa\u73b0\u9519\u8bef.') print('\u7a0b\u5e8f\u6267\u884c\u7ed3\u675f.') if __name__ == '__main__': main() \u8bfb\u5199JSON\u6587\u4ef6 \u901a\u8fc7\u4e0a\u9762\u7684\u8bb2\u89e3\uff0c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u5982\u4f55\u5c06\u6587\u672c\u6570\u636e\u548c\u4e8c\u8fdb\u5236\u6570\u636e\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\uff0c\u90a3\u4e48\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u5e0c\u671b\u628a\u4e00\u4e2a\u5217\u8868\u6216\u8005\u4e00\u4e2a\u5b57\u5178\u4e2d\u7684\u6570\u636e\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\u53c8\u8be5\u600e\u4e48\u505a\u5462\uff1f\u7b54\u6848\u662f\u5c06\u6570\u636e\u4ee5JSON\u683c\u5f0f\u8fdb\u884c\u4fdd\u5b58\u3002JSON\u662f\u201cJavaScript Object Notation\u201d\u7684\u7f29\u5199\uff0c\u5b83\u672c\u6765\u662fJavaScript\u8bed\u8a00\u4e2d\u521b\u5efa\u5bf9\u8c61\u7684\u4e00\u79cd\u5b57\u9762\u91cf\u8bed\u6cd5\uff0c\u73b0\u5728\u5df2\u7ecf\u88ab\u5e7f\u6cdb\u7684\u5e94\u7528\u4e8e\u8de8\u5e73\u53f0\u8de8\u8bed\u8a00\u7684\u6570\u636e\u4ea4\u6362\uff0c\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u56e0\u4e3aJSON\u4e5f\u662f\u7eaf\u6587\u672c\uff0c\u4efb\u4f55\u7cfb\u7edf\u4efb\u4f55\u7f16\u7a0b\u8bed\u8a00\u5904\u7406\u7eaf\u6587\u672c\u90fd\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002\u76ee\u524dJSON\u57fa\u672c\u4e0a\u5df2\u7ecf\u53d6\u4ee3\u4e86XML\u4f5c\u4e3a\u5f02\u6784\u7cfb\u7edf\u95f4\u4ea4\u6362\u6570\u636e\u7684\u4e8b\u5b9e\u6807\u51c6\u3002\u5173\u4e8eJSON\u7684\u77e5\u8bc6\uff0c\u66f4\u591a\u7684\u53ef\u4ee5\u53c2\u8003 JSON\u7684\u5b98\u65b9\u7f51\u7ad9 \uff0c\u4ece\u8fd9\u4e2a\u7f51\u7ad9\u4e5f\u53ef\u4ee5\u4e86\u89e3\u5230\u6bcf\u79cd\u8bed\u8a00\u5904\u7406JSON\u6570\u636e\u683c\u5f0f\u53ef\u4ee5\u4f7f\u7528\u7684\u5de5\u5177\u6216\u4e09\u65b9\u5e93\uff0c\u4e0b\u9762\u662f\u4e00\u4e2aJSON\u7684\u7b80\u5355\u4f8b\u5b50\u3002 { 'name': '\u9a86\u660a', 'age': 38, 'qq': 957658, 'friends': ['\u738b\u5927\u9524', '\u767d\u5143\u82b3'], 'cars': [ {'brand': 'BYD', 'max_speed': 180}, {'brand': 'Audi', 'max_speed': 280}, {'brand': 'Benz', 'max_speed': 320} ] } \u53ef\u80fd\u5927\u5bb6\u5df2\u7ecf\u6ce8\u610f\u5230\u4e86\uff0c\u4e0a\u9762\u7684JSON\u8ddfPython\u4e2d\u7684\u5b57\u5178\u5176\u5b9e\u662f\u4e00\u6837\u4e00\u6837\u7684\uff0c\u4e8b\u5b9e\u4e0aJSON\u7684\u6570\u636e\u7c7b\u578b\u548cPython\u7684\u6570\u636e\u7c7b\u578b\u662f\u5f88\u5bb9\u6613\u627e\u5230\u5bf9\u5e94\u5173\u7cfb\u7684\uff0c\u5982\u4e0b\u9762\u4e24\u5f20\u8868\u6240\u793a\u3002 JSON Python object dict array list string str number (int / real) int / float true / false True / False null None Python JSON dict object list, tuple array str string int, float, int- & float-derived Enums number True / False true / false None null \u6211\u4eec\u4f7f\u7528Python\u4e2d\u7684json\u6a21\u5757\u5c31\u53ef\u4ee5\u5c06\u5b57\u5178\u6216\u5217\u8868\u4ee5JSON\u683c\u5f0f\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import json def main(): mydict = { 'name': '\u9a86\u660a', 'age': 38, 'qq': 957658, 'friends': ['\u738b\u5927\u9524', '\u767d\u5143\u82b3'], 'cars': [ {'brand': 'BYD', 'max_speed': 180}, {'brand': 'Audi', 'max_speed': 280}, {'brand': 'Benz', 'max_speed': 320} ] } try: with open('data.json', 'w', encoding='utf-8') as fs: json.dump(mydict, fs) except IOError as e: print(e) print('\u4fdd\u5b58\u6570\u636e\u5b8c\u6210!') if __name__ == '__main__': main() json\u6a21\u5757\u4e3b\u8981\u6709\u56db\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u51fd\u6570\uff0c\u5206\u522b\u662f\uff1a dump - \u5c06Python\u5bf9\u8c61\u6309\u7167JSON\u683c\u5f0f\u5e8f\u5217\u5316\u5230\u6587\u4ef6\u4e2d dumps - \u5c06Python\u5bf9\u8c61\u5904\u7406\u6210JSON\u683c\u5f0f\u7684\u5b57\u7b26\u4e32 load - \u5c06\u6587\u4ef6\u4e2d\u7684JSON\u6570\u636e\u53cd\u5e8f\u5217\u5316\u6210\u5bf9\u8c61 loads - \u5c06\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u53cd\u5e8f\u5217\u5316\u6210Python\u5bf9\u8c61 \u8fd9\u91cc\u51fa\u73b0\u4e86\u4e24\u4e2a\u6982\u5ff5\uff0c\u4e00\u4e2a\u53eb\u5e8f\u5217\u5316\uff0c\u4e00\u4e2a\u53eb\u53cd\u5e8f\u5217\u5316\u3002\u81ea\u7531\u7684\u767e\u79d1\u5168\u4e66 \u7ef4\u57fa\u767e\u79d1 \u4e0a\u5bf9\u8fd9\u4e24\u4e2a\u6982\u5ff5\u662f\u8fd9\u6837\u89e3\u91ca\u7684\uff1a\u201c\u5e8f\u5217\u5316\uff08serialization\uff09\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u6570\u636e\u5904\u7406\u4e2d\uff0c\u662f\u6307\u5c06\u6570\u636e\u7ed3\u6784\u6216\u5bf9\u8c61\u72b6\u6001\u8f6c\u6362\u4e3a\u53ef\u4ee5\u5b58\u50a8\u6216\u4f20\u8f93\u7684\u5f62\u5f0f\uff0c\u8fd9\u6837\u5728\u9700\u8981\u7684\u65f6\u5019\u80fd\u591f\u6062\u590d\u5230\u539f\u5148\u7684\u72b6\u6001\uff0c\u800c\u4e14\u901a\u8fc7\u5e8f\u5217\u5316\u7684\u6570\u636e\u91cd\u65b0\u83b7\u53d6\u5b57\u8282\u65f6\uff0c\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u5b57\u8282\u6765\u4ea7\u751f\u539f\u59cb\u5bf9\u8c61\u7684\u526f\u672c\uff08\u62f7\u8d1d\uff09\u3002\u4e0e\u8fd9\u4e2a\u8fc7\u7a0b\u76f8\u53cd\u7684\u52a8\u4f5c\uff0c\u5373\u4ece\u4e00\u7cfb\u5217\u5b57\u8282\u4e2d\u63d0\u53d6\u6570\u636e\u7ed3\u6784\u7684\u64cd\u4f5c\uff0c\u5c31\u662f\u53cd\u5e8f\u5217\u5316\uff08deserialization\uff09\u201d\u3002 \u76ee\u524d\u7edd\u5927\u591a\u6570\u7f51\u7edc\u6570\u636e\u670d\u52a1\uff08\u6216\u79f0\u4e4b\u4e3a\u7f51\u7edcAPI\uff09\u90fd\u662f\u57fa\u4e8e HTTP\u534f\u8bae \u63d0\u4f9bJSON\u683c\u5f0f\u7684\u6570\u636e\uff0c\u5173\u4e8eHTTP\u534f\u8bae\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u53ef\u4ee5\u770b\u770b\u962e\u4e00\u5cf0\u8001\u5e08\u7684 \u300aHTTP\u534f\u8bae\u5165\u95e8\u300b \uff0c\u5982\u679c\u60f3\u4e86\u89e3\u56fd\u5185\u7684\u7f51\u7edc\u6570\u636e\u670d\u52a1\uff0c\u53ef\u4ee5\u770b\u770b \u805a\u5408\u6570\u636e \u548c \u963f\u51e1\u8fbe\u6570\u636e \u7b49\u7f51\u7ad9\uff0c\u56fd\u5916\u7684\u53ef\u4ee5\u770b\u770b {API}Search \u7f51\u7ad9\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528 requests \u6a21\u5757\uff08\u5c01\u88c5\u5f97\u8db3\u591f\u597d\u7684\u7b2c\u4e09\u65b9\u7f51\u7edc\u8bbf\u95ee\u6a21\u5757\uff09\u8bbf\u95ee\u7f51\u7edcAPI\u83b7\u53d6\u56fd\u5185\u65b0\u95fb\uff0c\u5982\u4f55\u901a\u8fc7json\u6a21\u5757\u89e3\u6790JSON\u6570\u636e\u5e76\u663e\u793a\u65b0\u95fb\u6807\u9898\uff0c\u8fd9\u4e2a\u4f8b\u5b50\u4f7f\u7528\u4e86 \u5929\u884c\u6570\u636e \u63d0\u4f9b\u7684\u56fd\u5185\u65b0\u95fb\u6570\u636e\u63a5\u53e3\uff0c\u5176\u4e2d\u7684APIKey\u9700\u8981\u81ea\u5df1\u5230\u8be5\u7f51\u7ad9\u7533\u8bf7\u3002 import requests import json def main(): resp = requests.get('http://api.tianapi.com/guonei/?key=APIKey&num=10') data_model = json.loads(resp.text) for news in data_model['newslist']: print(news['title']) if __name__ == '__main__': main() \u5728Python\u4e2d\u8981\u5b9e\u73b0\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u9664\u4e86\u4f7f\u7528json\u6a21\u5757\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528pickle\u548cshelve\u6a21\u5757\uff0c\u4f46\u662f\u8fd9\u4e24\u4e2a\u6a21\u5757\u662f\u4f7f\u7528\u7279\u6709\u7684\u5e8f\u5217\u5316\u534f\u8bae\u6765\u5e8f\u5217\u5316\u6570\u636e\uff0c\u56e0\u6b64\u5e8f\u5217\u5316\u540e\u7684\u6570\u636e\u53ea\u80fd\u88abPython\u8bc6\u522b\u3002\u5173\u4e8e\u8fd9\u4e24\u4e2a\u6a21\u5757\u7684\u76f8\u5173\u77e5\u8bc6\u53ef\u4ee5\u81ea\u5df1\u770b\u770b\u7f51\u7edc\u4e0a\u7684\u8d44\u6599\u3002\u53e6\u5916\uff0c\u5982\u679c\u8981\u4e86\u89e3\u66f4\u591a\u7684\u5173\u4e8ePython\u5f02\u5e38\u673a\u5236\u7684\u77e5\u8bc6\uff0c\u53ef\u4ee5\u770b\u770bsegmentfault\u4e0a\u9762\u7684\u6587\u7ae0 \u300a\u603b\u7ed3\uff1aPython\u4e2d\u7684\u5f02\u5e38\u5904\u7406\u300b \uff0c\u8fd9\u7bc7\u6587\u7ae0\u4e0d\u4ec5\u4ecb\u7ecd\u4e86Python\u4e2d\u5f02\u5e38\u673a\u5236\u7684\u4f7f\u7528\uff0c\u8fd8\u603b\u7ed3\u4e86\u4e00\u7cfb\u5217\u7684\u6700\u4f73\u5b9e\u8df5\uff0c\u5f88\u503c\u5f97\u4e00\u8bfb\u3002","title":"\u7b2c\u5341\u4e00\u5929"},{"location":"new/11%E3%80%81%E6%96%87%E4%BB%B6%E5%92%8C%E5%BC%82%E5%B8%B8/#_1","text":"\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u5e38\u5e38\u9700\u8981\u5bf9\u7a0b\u5e8f\u4e2d\u7684\u6570\u636e\u8fdb\u884c \u6301\u4e45\u5316 \u64cd\u4f5c\uff0c\u800c\u5b9e\u73b0\u6570\u636e\u6301\u4e45\u5316\u6700\u76f4\u63a5\u7b80\u5355\u7684\u65b9\u5f0f\u5c31\u662f\u5c06\u6570\u636e\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\u3002\u8bf4\u5230\u201c\u6587\u4ef6\u201d\u8fd9\u4e2a\u8bcd\uff0c\u53ef\u80fd\u9700\u8981\u5148\u79d1\u666e\u4e00\u4e0b\u5173\u4e8e \u6587\u4ef6\u7cfb\u7edf \u7684\u77e5\u8bc6\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u6982\u5ff5\uff0c\u7ef4\u57fa\u767e\u79d1\u4e0a\u7ed9\u51fa\u4e86\u5f88\u597d\u7684\u8be0\u91ca\uff0c\u8fd9\u91cc\u4e0d\u518d\u6d6a\u8d39\u7b14\u58a8\u3002 \u5728Python\u4e2d\u5b9e\u73b0\u6587\u4ef6\u7684\u8bfb\u5199\u64cd\u4f5c\u5176\u5b9e\u975e\u5e38\u7b80\u5355\uff0c\u901a\u8fc7Python\u5185\u7f6e\u7684 open \u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a\u6587\u4ef6\u540d\u3001\u64cd\u4f5c\u6a21\u5f0f\u3001\u7f16\u7801\u4fe1\u606f\u7b49\u6765\u83b7\u5f97\u64cd\u4f5c\u6587\u4ef6\u7684\u5bf9\u8c61\uff0c\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u5bf9\u6587\u4ef6\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\u4e86\u3002\u8fd9\u91cc\u6240\u8bf4\u7684\u64cd\u4f5c\u6a21\u5f0f\u662f\u6307\u8981\u6253\u5f00\u4ec0\u4e48\u6837\u7684\u6587\u4ef6\uff08\u5b57\u7b26\u6587\u4ef6\u8fd8\u662f\u4e8c\u8fdb\u5236\u6587\u4ef6\uff09\u4ee5\u53ca\u505a\u4ec0\u4e48\u6837\u7684\u64cd\u4f5c\uff08\u8bfb\u3001\u5199\u8fd8\u662f\u8ffd\u52a0\uff09\uff0c\u5177\u4f53\u7684\u5982\u4e0b\u8868\u6240\u793a\u3002 \u64cd\u4f5c\u6a21\u5f0f \u5177\u4f53\u542b\u4e49 'r' \u8bfb\u53d6 \uff08\u9ed8\u8ba4\uff09 'w' \u5199\u5165\uff08\u4f1a\u5148\u622a\u65ad\u4e4b\u524d\u7684\u5185\u5bb9\uff09 'x' \u5199\u5165\uff0c\u5982\u679c\u6587\u4ef6\u5df2\u7ecf\u5b58\u5728\u4f1a\u4ea7\u751f\u5f02\u5e38 'a' \u8ffd\u52a0\uff0c\u5c06\u5185\u5bb9\u5199\u5165\u5230\u5df2\u6709\u6587\u4ef6\u7684\u672b\u5c3e 'b' \u4e8c\u8fdb\u5236\u6a21\u5f0f 't' \u6587\u672c\u6a21\u5f0f\uff08\u9ed8\u8ba4\uff09 '+' \u66f4\u65b0\uff08\u65e2\u53ef\u4ee5\u8bfb\u53c8\u53ef\u4ee5\u5199\uff09 \u4e0b\u9762\u8fd9\u5f20\u56fe\u6765\u81ea\u4e8e \u83dc\u9e1f\u6559\u7a0b \u7f51\u7ad9\uff0c\u5b83\u5c55\u793a\u4e86\u5982\u679c\u6839\u636e\u5e94\u7528\u7a0b\u5e8f\u7684\u9700\u8981\u6765\u8bbe\u7f6e\u64cd\u4f5c\u6a21\u5f0f\u3002","title":"\u6587\u4ef6\u548c\u5f02\u5e38"},{"location":"new/11%E3%80%81%E6%96%87%E4%BB%B6%E5%92%8C%E5%BC%82%E5%B8%B8/#_2","text":"\u8bfb\u53d6\u6587\u672c\u6587\u4ef6\u65f6\uff0c\u9700\u8981\u5728\u4f7f\u7528 open \u51fd\u6570\u65f6\u6307\u5b9a\u597d\u5e26\u8def\u5f84\u7684\u6587\u4ef6\u540d\uff08\u53ef\u4ee5\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\u6216\u7edd\u5bf9\u8def\u5f84\uff09\u5e76\u5c06\u6587\u4ef6\u6a21\u5f0f\u8bbe\u7f6e\u4e3a 'r' \uff08\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u503c\u4e5f\u662f 'r' \uff09\uff0c\u7136\u540e\u901a\u8fc7 encoding \u53c2\u6570\u6307\u5b9a\u7f16\u7801\uff08\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u503c\u662fNone\uff0c\u90a3\u4e48\u5728\u8bfb\u53d6\u6587\u4ef6\u65f6\u4f7f\u7528\u7684\u662f\u64cd\u4f5c\u7cfb\u7edf\u9ed8\u8ba4\u7684\u7f16\u7801\uff09\uff0c\u5982\u679c\u4e0d\u80fd\u4fdd\u8bc1\u4fdd\u5b58\u6587\u4ef6\u65f6\u4f7f\u7528\u7684\u7f16\u7801\u65b9\u5f0f\u4e0eencoding\u53c2\u6570\u6307\u5b9a\u7684\u7f16\u7801\u65b9\u5f0f\u662f\u4e00\u81f4\u7684\uff0c\u90a3\u4e48\u5c31\u53ef\u80fd\u56e0\u65e0\u6cd5\u89e3\u7801\u5b57\u7b26\u800c\u5bfc\u81f4\u8bfb\u53d6\u5931\u8d25\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u8bfb\u53d6\u4e00\u4e2a\u7eaf\u6587\u672c\u6587\u4ef6\u3002 def main(): f = open('\u81f4\u6a61\u6811.txt', 'r', encoding='utf-8') print(f.read()) f.close() if __name__ == '__main__': main() \u8bf7\u6ce8\u610f\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u5982\u679c open \u51fd\u6570\u6307\u5b9a\u7684\u6587\u4ef6\u5e76\u4e0d\u5b58\u5728\u6216\u8005\u65e0\u6cd5\u6253\u5f00\uff0c\u90a3\u4e48\u5c06\u5f15\u53d1\u5f02\u5e38\u72b6\u51b5\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002\u4e3a\u4e86\u8ba9\u4ee3\u7801\u6709\u4e00\u5b9a\u7684\u5065\u58ee\u6027\u548c\u5bb9\u9519\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Python\u7684\u5f02\u5e38\u673a\u5236\u5bf9\u53ef\u80fd\u5728\u8fd0\u884c\u65f6\u53d1\u751f\u72b6\u51b5\u7684\u4ee3\u7801\u8fdb\u884c\u9002\u5f53\u7684\u5904\u7406\uff0c\u5982\u4e0b\u6240\u793a\u3002 def main(): f = None try: f = open('\u81f4\u6a61\u6811.txt', 'r', encoding='utf-8') print(f.read()) except FileNotFoundError: print('\u65e0\u6cd5\u6253\u5f00\u6307\u5b9a\u7684\u6587\u4ef6!') except LookupError: print('\u6307\u5b9a\u4e86\u672a\u77e5\u7684\u7f16\u7801!') except UnicodeDecodeError: print('\u8bfb\u53d6\u6587\u4ef6\u65f6\u89e3\u7801\u9519\u8bef!') finally: if f: f.close() if __name__ == '__main__': main() \u5728Python\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u90a3\u4e9b\u5728\u8fd0\u884c\u65f6\u53ef\u80fd\u4f1a\u51fa\u73b0\u72b6\u51b5\u7684\u4ee3\u7801\u653e\u5728 try \u4ee3\u7801\u5757\u4e2d\uff0c\u5728 try \u4ee3\u7801\u5757\u7684\u540e\u9762\u53ef\u4ee5\u8ddf\u4e0a\u4e00\u4e2a\u6216\u591a\u4e2a except \u6765\u6355\u83b7\u53ef\u80fd\u51fa\u73b0\u7684\u5f02\u5e38\u72b6\u51b5\u3002\u4f8b\u5982\u5728\u4e0a\u9762\u8bfb\u53d6\u6587\u4ef6\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6587\u4ef6\u627e\u4e0d\u5230\u4f1a\u5f15\u53d1 FileNotFoundError \uff0c\u6307\u5b9a\u4e86\u672a\u77e5\u7684\u7f16\u7801\u4f1a\u5f15\u53d1 LookupError \uff0c\u800c\u5982\u679c\u8bfb\u53d6\u6587\u4ef6\u65f6\u65e0\u6cd5\u6309\u6307\u5b9a\u65b9\u5f0f\u89e3\u7801\u4f1a\u5f15\u53d1 UnicodeDecodeError \uff0c\u6211\u4eec\u5728 try \u540e\u9762\u8ddf\u4e0a\u4e86\u4e09\u4e2a except \u5206\u522b\u5904\u7406\u8fd9\u4e09\u79cd\u4e0d\u540c\u7684\u5f02\u5e38\u72b6\u51b5\u3002\u6700\u540e\u6211\u4eec\u4f7f\u7528 finally \u4ee3\u7801\u5757\u6765\u5173\u95ed\u6253\u5f00\u7684\u6587\u4ef6\uff0c\u91ca\u653e\u6389\u7a0b\u5e8f\u4e2d\u83b7\u53d6\u7684\u5916\u90e8\u8d44\u6e90\uff0c\u7531\u4e8e finally \u5757\u7684\u4ee3\u7801\u4e0d\u8bba\u7a0b\u5e8f\u6b63\u5e38\u8fd8\u662f\u5f02\u5e38\u90fd\u4f1a\u6267\u884c\u5230\uff08\u751a\u81f3\u662f\u8c03\u7528\u4e86 sys \u6a21\u5757\u7684 exit \u51fd\u6570\u9000\u51faPython\u73af\u5883\uff0c finally \u5757\u90fd\u4f1a\u88ab\u6267\u884c\uff0c\u56e0\u4e3a exit \u51fd\u6570\u5b9e\u8d28\u4e0a\u662f\u5f15\u53d1\u4e86 SystemExit \u5f02\u5e38\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u901a\u5e38\u628a finally \u5757\u79f0\u4e3a\u201c\u603b\u662f\u6267\u884c\u4ee3\u7801\u5757\u201d\uff0c\u5b83\u6700\u9002\u5408\u7528\u6765\u505a\u91ca\u653e\u5916\u90e8\u8d44\u6e90\u7684\u64cd\u4f5c\u3002\u5982\u679c\u4e0d\u613f\u610f\u5728 finally \u4ee3\u7801\u5757\u4e2d\u5173\u95ed\u6587\u4ef6\u5bf9\u8c61\u91ca\u653e\u8d44\u6e90\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e0a\u4e0b\u6587\u8bed\u6cd5\uff0c\u901a\u8fc7 with \u5173\u952e\u5b57\u6307\u5b9a\u6587\u4ef6\u5bf9\u8c61\u7684\u4e0a\u4e0b\u6587\u73af\u5883\u5e76\u5728\u79bb\u5f00\u4e0a\u4e0b\u6587\u73af\u5883\u65f6\u81ea\u52a8\u91ca\u653e\u6587\u4ef6\u8d44\u6e90\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 def main(): try: with open('\u81f4\u6a61\u6811.txt', 'r', encoding='utf-8') as f: print(f.read()) except FileNotFoundError: print('\u65e0\u6cd5\u6253\u5f00\u6307\u5b9a\u7684\u6587\u4ef6!') except LookupError: print('\u6307\u5b9a\u4e86\u672a\u77e5\u7684\u7f16\u7801!') except UnicodeDecodeError: print('\u8bfb\u53d6\u6587\u4ef6\u65f6\u89e3\u7801\u9519\u8bef!') if __name__ == '__main__': main() \u9664\u4e86\u4f7f\u7528\u6587\u4ef6\u5bf9\u8c61\u7684 read \u65b9\u6cd5\u8bfb\u53d6\u6587\u4ef6\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 for-in \u5faa\u73af\u9010\u884c\u8bfb\u53d6\u6216\u8005\u7528 readlines \u65b9\u6cd5\u5c06\u6587\u4ef6\u6309\u884c\u8bfb\u53d6\u5230\u4e00\u4e2a\u5217\u8868\u5bb9\u5668\u4e2d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import time def main(): # \u4e00\u6b21\u6027\u8bfb\u53d6\u6574\u4e2a\u6587\u4ef6\u5185\u5bb9 with open('\u81f4\u6a61\u6811.txt', 'r', encoding='utf-8') as f: print(f.read()) # \u901a\u8fc7for-in\u5faa\u73af\u9010\u884c\u8bfb\u53d6 with open('\u81f4\u6a61\u6811.txt', mode='r') as f: for line in f: print(line, end='') time.sleep(0.5) print() # \u8bfb\u53d6\u6587\u4ef6\u6309\u884c\u8bfb\u53d6\u5230\u5217\u8868\u4e2d with open('\u81f4\u6a61\u6811.txt') as f: lines = f.readlines() print(lines) if __name__ == '__main__': main() \u8981\u5c06\u6587\u672c\u4fe1\u606f\u5199\u5165\u6587\u4ef6\u6587\u4ef6\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u5728\u4f7f\u7528 open \u51fd\u6570\u65f6\u6307\u5b9a\u597d\u6587\u4ef6\u540d\u5e76\u5c06\u6587\u4ef6\u6a21\u5f0f\u8bbe\u7f6e\u4e3a 'w' \u5373\u53ef\u3002\u6ce8\u610f\u5982\u679c\u9700\u8981\u5bf9\u6587\u4ef6\u5185\u5bb9\u8fdb\u884c\u8ffd\u52a0\u5f0f\u5199\u5165\uff0c\u5e94\u8be5\u5c06\u6a21\u5f0f\u8bbe\u7f6e\u4e3a 'a' \u3002\u5982\u679c\u8981\u5199\u5165\u7684\u6587\u4ef6\u4e0d\u5b58\u5728\u4f1a\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u800c\u4e0d\u662f\u5f15\u53d1\u5f02\u5e38\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u5c061-9999\u76f4\u63a5\u7684\u7d20\u6570\u5206\u522b\u5199\u5165\u4e09\u4e2a\u6587\u4ef6\u4e2d\uff081-99\u4e4b\u95f4\u7684\u7d20\u6570\u4fdd\u5b58\u5728a.txt\u4e2d\uff0c100-999\u4e4b\u95f4\u7684\u7d20\u6570\u4fdd\u5b58\u5728b.txt\u4e2d\uff0c1000-9999\u4e4b\u95f4\u7684\u7d20\u6570\u4fdd\u5b58\u5728c.txt\u4e2d\uff09\u3002 from math import sqrt def is_prime(n): \"\"\"\u5224\u65ad\u7d20\u6570\u7684\u51fd\u6570\"\"\" assert n > 0 for factor in range(2, int(sqrt(n)) + 1): if n % factor == 0: return False return True if n != 1 else False def main(): filenames = ('a.txt', 'b.txt', 'c.txt') fs_list = [] try: for filename in filenames: fs_list.append(open(filename, 'w', encoding='utf-8')) for number in range(1, 10000): if is_prime(number): if number < 100: fs_list[0].write(str(number) + '\\n') elif number < 1000: fs_list[1].write(str(number) + '\\n') else: fs_list[2].write(str(number) + '\\n') except IOError as ex: print(ex) print('\u5199\u6587\u4ef6\u65f6\u53d1\u751f\u9519\u8bef!') finally: for fs in fs_list: fs.close() print('\u64cd\u4f5c\u5b8c\u6210!') if __name__ == '__main__': main()","title":"\u8bfb\u5199\u6587\u672c\u6587\u4ef6"},{"location":"new/11%E3%80%81%E6%96%87%E4%BB%B6%E5%92%8C%E5%BC%82%E5%B8%B8/#_3","text":"\u77e5\u9053\u4e86\u5982\u4f55\u8bfb\u5199\u6587\u672c\u6587\u4ef6\u8981\u8bfb\u5199\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e5f\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\u4e86\u590d\u5236\u56fe\u7247\u6587\u4ef6\u7684\u529f\u80fd\u3002 def main(): try: with open('guido.jpg', 'rb') as fs1: data = fs1.read() print(type(data)) # <class 'bytes'> with open('\u5409\u591a.jpg', 'wb') as fs2: fs2.write(data) except FileNotFoundError as e: print('\u6307\u5b9a\u7684\u6587\u4ef6\u65e0\u6cd5\u6253\u5f00.') except IOError as e: print('\u8bfb\u5199\u6587\u4ef6\u65f6\u51fa\u73b0\u9519\u8bef.') print('\u7a0b\u5e8f\u6267\u884c\u7ed3\u675f.') if __name__ == '__main__': main()","title":"\u8bfb\u5199\u4e8c\u8fdb\u5236\u6587\u4ef6"},{"location":"new/11%E3%80%81%E6%96%87%E4%BB%B6%E5%92%8C%E5%BC%82%E5%B8%B8/#json","text":"\u901a\u8fc7\u4e0a\u9762\u7684\u8bb2\u89e3\uff0c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u5982\u4f55\u5c06\u6587\u672c\u6570\u636e\u548c\u4e8c\u8fdb\u5236\u6570\u636e\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\uff0c\u90a3\u4e48\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u5e0c\u671b\u628a\u4e00\u4e2a\u5217\u8868\u6216\u8005\u4e00\u4e2a\u5b57\u5178\u4e2d\u7684\u6570\u636e\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\u53c8\u8be5\u600e\u4e48\u505a\u5462\uff1f\u7b54\u6848\u662f\u5c06\u6570\u636e\u4ee5JSON\u683c\u5f0f\u8fdb\u884c\u4fdd\u5b58\u3002JSON\u662f\u201cJavaScript Object Notation\u201d\u7684\u7f29\u5199\uff0c\u5b83\u672c\u6765\u662fJavaScript\u8bed\u8a00\u4e2d\u521b\u5efa\u5bf9\u8c61\u7684\u4e00\u79cd\u5b57\u9762\u91cf\u8bed\u6cd5\uff0c\u73b0\u5728\u5df2\u7ecf\u88ab\u5e7f\u6cdb\u7684\u5e94\u7528\u4e8e\u8de8\u5e73\u53f0\u8de8\u8bed\u8a00\u7684\u6570\u636e\u4ea4\u6362\uff0c\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u56e0\u4e3aJSON\u4e5f\u662f\u7eaf\u6587\u672c\uff0c\u4efb\u4f55\u7cfb\u7edf\u4efb\u4f55\u7f16\u7a0b\u8bed\u8a00\u5904\u7406\u7eaf\u6587\u672c\u90fd\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002\u76ee\u524dJSON\u57fa\u672c\u4e0a\u5df2\u7ecf\u53d6\u4ee3\u4e86XML\u4f5c\u4e3a\u5f02\u6784\u7cfb\u7edf\u95f4\u4ea4\u6362\u6570\u636e\u7684\u4e8b\u5b9e\u6807\u51c6\u3002\u5173\u4e8eJSON\u7684\u77e5\u8bc6\uff0c\u66f4\u591a\u7684\u53ef\u4ee5\u53c2\u8003 JSON\u7684\u5b98\u65b9\u7f51\u7ad9 \uff0c\u4ece\u8fd9\u4e2a\u7f51\u7ad9\u4e5f\u53ef\u4ee5\u4e86\u89e3\u5230\u6bcf\u79cd\u8bed\u8a00\u5904\u7406JSON\u6570\u636e\u683c\u5f0f\u53ef\u4ee5\u4f7f\u7528\u7684\u5de5\u5177\u6216\u4e09\u65b9\u5e93\uff0c\u4e0b\u9762\u662f\u4e00\u4e2aJSON\u7684\u7b80\u5355\u4f8b\u5b50\u3002 { 'name': '\u9a86\u660a', 'age': 38, 'qq': 957658, 'friends': ['\u738b\u5927\u9524', '\u767d\u5143\u82b3'], 'cars': [ {'brand': 'BYD', 'max_speed': 180}, {'brand': 'Audi', 'max_speed': 280}, {'brand': 'Benz', 'max_speed': 320} ] } \u53ef\u80fd\u5927\u5bb6\u5df2\u7ecf\u6ce8\u610f\u5230\u4e86\uff0c\u4e0a\u9762\u7684JSON\u8ddfPython\u4e2d\u7684\u5b57\u5178\u5176\u5b9e\u662f\u4e00\u6837\u4e00\u6837\u7684\uff0c\u4e8b\u5b9e\u4e0aJSON\u7684\u6570\u636e\u7c7b\u578b\u548cPython\u7684\u6570\u636e\u7c7b\u578b\u662f\u5f88\u5bb9\u6613\u627e\u5230\u5bf9\u5e94\u5173\u7cfb\u7684\uff0c\u5982\u4e0b\u9762\u4e24\u5f20\u8868\u6240\u793a\u3002 JSON Python object dict array list string str number (int / real) int / float true / false True / False null None Python JSON dict object list, tuple array str string int, float, int- & float-derived Enums number True / False true / false None null \u6211\u4eec\u4f7f\u7528Python\u4e2d\u7684json\u6a21\u5757\u5c31\u53ef\u4ee5\u5c06\u5b57\u5178\u6216\u5217\u8868\u4ee5JSON\u683c\u5f0f\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import json def main(): mydict = { 'name': '\u9a86\u660a', 'age': 38, 'qq': 957658, 'friends': ['\u738b\u5927\u9524', '\u767d\u5143\u82b3'], 'cars': [ {'brand': 'BYD', 'max_speed': 180}, {'brand': 'Audi', 'max_speed': 280}, {'brand': 'Benz', 'max_speed': 320} ] } try: with open('data.json', 'w', encoding='utf-8') as fs: json.dump(mydict, fs) except IOError as e: print(e) print('\u4fdd\u5b58\u6570\u636e\u5b8c\u6210!') if __name__ == '__main__': main() json\u6a21\u5757\u4e3b\u8981\u6709\u56db\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u51fd\u6570\uff0c\u5206\u522b\u662f\uff1a dump - \u5c06Python\u5bf9\u8c61\u6309\u7167JSON\u683c\u5f0f\u5e8f\u5217\u5316\u5230\u6587\u4ef6\u4e2d dumps - \u5c06Python\u5bf9\u8c61\u5904\u7406\u6210JSON\u683c\u5f0f\u7684\u5b57\u7b26\u4e32 load - \u5c06\u6587\u4ef6\u4e2d\u7684JSON\u6570\u636e\u53cd\u5e8f\u5217\u5316\u6210\u5bf9\u8c61 loads - \u5c06\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u53cd\u5e8f\u5217\u5316\u6210Python\u5bf9\u8c61 \u8fd9\u91cc\u51fa\u73b0\u4e86\u4e24\u4e2a\u6982\u5ff5\uff0c\u4e00\u4e2a\u53eb\u5e8f\u5217\u5316\uff0c\u4e00\u4e2a\u53eb\u53cd\u5e8f\u5217\u5316\u3002\u81ea\u7531\u7684\u767e\u79d1\u5168\u4e66 \u7ef4\u57fa\u767e\u79d1 \u4e0a\u5bf9\u8fd9\u4e24\u4e2a\u6982\u5ff5\u662f\u8fd9\u6837\u89e3\u91ca\u7684\uff1a\u201c\u5e8f\u5217\u5316\uff08serialization\uff09\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u6570\u636e\u5904\u7406\u4e2d\uff0c\u662f\u6307\u5c06\u6570\u636e\u7ed3\u6784\u6216\u5bf9\u8c61\u72b6\u6001\u8f6c\u6362\u4e3a\u53ef\u4ee5\u5b58\u50a8\u6216\u4f20\u8f93\u7684\u5f62\u5f0f\uff0c\u8fd9\u6837\u5728\u9700\u8981\u7684\u65f6\u5019\u80fd\u591f\u6062\u590d\u5230\u539f\u5148\u7684\u72b6\u6001\uff0c\u800c\u4e14\u901a\u8fc7\u5e8f\u5217\u5316\u7684\u6570\u636e\u91cd\u65b0\u83b7\u53d6\u5b57\u8282\u65f6\uff0c\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u5b57\u8282\u6765\u4ea7\u751f\u539f\u59cb\u5bf9\u8c61\u7684\u526f\u672c\uff08\u62f7\u8d1d\uff09\u3002\u4e0e\u8fd9\u4e2a\u8fc7\u7a0b\u76f8\u53cd\u7684\u52a8\u4f5c\uff0c\u5373\u4ece\u4e00\u7cfb\u5217\u5b57\u8282\u4e2d\u63d0\u53d6\u6570\u636e\u7ed3\u6784\u7684\u64cd\u4f5c\uff0c\u5c31\u662f\u53cd\u5e8f\u5217\u5316\uff08deserialization\uff09\u201d\u3002 \u76ee\u524d\u7edd\u5927\u591a\u6570\u7f51\u7edc\u6570\u636e\u670d\u52a1\uff08\u6216\u79f0\u4e4b\u4e3a\u7f51\u7edcAPI\uff09\u90fd\u662f\u57fa\u4e8e HTTP\u534f\u8bae \u63d0\u4f9bJSON\u683c\u5f0f\u7684\u6570\u636e\uff0c\u5173\u4e8eHTTP\u534f\u8bae\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u53ef\u4ee5\u770b\u770b\u962e\u4e00\u5cf0\u8001\u5e08\u7684 \u300aHTTP\u534f\u8bae\u5165\u95e8\u300b \uff0c\u5982\u679c\u60f3\u4e86\u89e3\u56fd\u5185\u7684\u7f51\u7edc\u6570\u636e\u670d\u52a1\uff0c\u53ef\u4ee5\u770b\u770b \u805a\u5408\u6570\u636e \u548c \u963f\u51e1\u8fbe\u6570\u636e \u7b49\u7f51\u7ad9\uff0c\u56fd\u5916\u7684\u53ef\u4ee5\u770b\u770b {API}Search \u7f51\u7ad9\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528 requests \u6a21\u5757\uff08\u5c01\u88c5\u5f97\u8db3\u591f\u597d\u7684\u7b2c\u4e09\u65b9\u7f51\u7edc\u8bbf\u95ee\u6a21\u5757\uff09\u8bbf\u95ee\u7f51\u7edcAPI\u83b7\u53d6\u56fd\u5185\u65b0\u95fb\uff0c\u5982\u4f55\u901a\u8fc7json\u6a21\u5757\u89e3\u6790JSON\u6570\u636e\u5e76\u663e\u793a\u65b0\u95fb\u6807\u9898\uff0c\u8fd9\u4e2a\u4f8b\u5b50\u4f7f\u7528\u4e86 \u5929\u884c\u6570\u636e \u63d0\u4f9b\u7684\u56fd\u5185\u65b0\u95fb\u6570\u636e\u63a5\u53e3\uff0c\u5176\u4e2d\u7684APIKey\u9700\u8981\u81ea\u5df1\u5230\u8be5\u7f51\u7ad9\u7533\u8bf7\u3002 import requests import json def main(): resp = requests.get('http://api.tianapi.com/guonei/?key=APIKey&num=10') data_model = json.loads(resp.text) for news in data_model['newslist']: print(news['title']) if __name__ == '__main__': main() \u5728Python\u4e2d\u8981\u5b9e\u73b0\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u9664\u4e86\u4f7f\u7528json\u6a21\u5757\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528pickle\u548cshelve\u6a21\u5757\uff0c\u4f46\u662f\u8fd9\u4e24\u4e2a\u6a21\u5757\u662f\u4f7f\u7528\u7279\u6709\u7684\u5e8f\u5217\u5316\u534f\u8bae\u6765\u5e8f\u5217\u5316\u6570\u636e\uff0c\u56e0\u6b64\u5e8f\u5217\u5316\u540e\u7684\u6570\u636e\u53ea\u80fd\u88abPython\u8bc6\u522b\u3002\u5173\u4e8e\u8fd9\u4e24\u4e2a\u6a21\u5757\u7684\u76f8\u5173\u77e5\u8bc6\u53ef\u4ee5\u81ea\u5df1\u770b\u770b\u7f51\u7edc\u4e0a\u7684\u8d44\u6599\u3002\u53e6\u5916\uff0c\u5982\u679c\u8981\u4e86\u89e3\u66f4\u591a\u7684\u5173\u4e8ePython\u5f02\u5e38\u673a\u5236\u7684\u77e5\u8bc6\uff0c\u53ef\u4ee5\u770b\u770bsegmentfault\u4e0a\u9762\u7684\u6587\u7ae0 \u300a\u603b\u7ed3\uff1aPython\u4e2d\u7684\u5f02\u5e38\u5904\u7406\u300b \uff0c\u8fd9\u7bc7\u6587\u7ae0\u4e0d\u4ec5\u4ecb\u7ecd\u4e86Python\u4e2d\u5f02\u5e38\u673a\u5236\u7684\u4f7f\u7528\uff0c\u8fd8\u603b\u7ed3\u4e86\u4e00\u7cfb\u5217\u7684\u6700\u4f73\u5b9e\u8df5\uff0c\u5f88\u503c\u5f97\u4e00\u8bfb\u3002","title":"\u8bfb\u5199JSON\u6587\u4ef6"},{"location":"new/12%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/","text":"\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f \u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u5173\u77e5\u8bc6 \u5728\u7f16\u5199\u5904\u7406\u5b57\u7b26\u4e32\u7684\u7a0b\u5e8f\u6216\u7f51\u9875\u65f6\uff0c\u7ecf\u5e38\u4f1a\u6709\u67e5\u627e\u7b26\u5408\u67d0\u4e9b\u590d\u6742\u89c4\u5219\u7684\u5b57\u7b26\u4e32\u7684\u9700\u8981\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u5c31\u662f\u7528\u4e8e\u63cf\u8ff0\u8fd9\u4e9b\u89c4\u5219\u7684\u5de5\u5177\uff0c\u6362\u53e5\u8bdd\u8bf4\u6b63\u5219\u8868\u8fbe\u5f0f\u662f\u4e00\u79cd\u5de5\u5177\uff0c\u5b83\u5b9a\u4e49\u4e86\u5b57\u7b26\u4e32\u7684\u5339\u914d\u6a21\u5f0f\uff08\u5982\u4f55\u68c0\u67e5\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u6709\u8ddf\u67d0\u79cd\u6a21\u5f0f\u5339\u914d\u7684\u90e8\u5206\u6216\u8005\u4ece\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u5c06\u4e0e\u6a21\u5f0f\u5339\u914d\u7684\u90e8\u5206\u63d0\u53d6\u51fa\u6765\u6216\u8005\u66ff\u6362\u6389\uff09\u3002\u5982\u679c\u4f60\u5728Windows\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u4f7f\u7528\u8fc7\u6587\u4ef6\u67e5\u627e\u5e76\u4e14\u5728\u6307\u5b9a\u6587\u4ef6\u540d\u65f6\u4f7f\u7528\u8fc7\u901a\u914d\u7b26\uff08*\u548c?\uff09\uff0c\u90a3\u4e48\u6b63\u5219\u8868\u8fbe\u5f0f\u4e5f\u662f\u4e0e\u4e4b\u7c7b\u4f3c\u7684\u7528\u6765\u8fdb\u884c\u6587\u672c\u5339\u914d\u7684\u5de5\u5177\uff0c\u53ea\u4e0d\u8fc7\u6bd4\u8d77\u901a\u914d\u7b26\u6b63\u5219\u8868\u8fbe\u5f0f\u66f4\u5f3a\u5927\uff0c\u5b83\u80fd\u66f4\u7cbe\u786e\u5730\u63cf\u8ff0\u4f60\u7684\u9700\u6c42\uff08\u5f53\u7136\u4f60\u4ed8\u51fa\u7684\u4ee3\u4ef7\u662f\u4e66\u5199\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u6bd4\u6253\u51fa\u4e00\u4e2a\u901a\u914d\u7b26\u8981\u590d\u6742\u5f97\u591a\uff0c\u8981\u77e5\u9053\u4efb\u4f55\u7ed9\u4f60\u5e26\u6765\u597d\u5904\u7684\u4e1c\u897f\u90fd\u662f\u6709\u4ee3\u4ef7\u7684\uff0c\u5c31\u5982\u540c\u5b66\u4e60\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\u4e00\u6837\uff09\uff0c\u6bd4\u5982\u4f60\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u7528\u6765\u67e5\u627e\u6240\u6709\u4ee50\u5f00\u5934\uff0c\u540e\u9762\u8ddf\u77402-3\u4e2a\u6570\u5b57\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u8fde\u5b57\u53f7\u201c-\u201d\uff0c\u6700\u540e\u662f7\u62168\u4f4d\u6570\u5b57\u7684\u5b57\u7b26\u4e32\uff08\u50cf028-12345678\u62160813-7654321\uff09\uff0c\u8fd9\u4e0d\u5c31\u662f\u56fd\u5185\u7684\u5ea7\u673a\u53f7\u7801\u5417\u3002\u6700\u521d\u8ba1\u7b97\u673a\u662f\u4e3a\u4e86\u505a\u6570\u5b66\u8fd0\u7b97\u800c\u8bde\u751f\u7684\uff0c\u5904\u7406\u7684\u4fe1\u606f\u57fa\u672c\u4e0a\u90fd\u662f\u6570\u503c\uff0c\u800c\u4eca\u5929\u6211\u4eec\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\u5904\u7406\u7684\u4fe1\u606f\u57fa\u672c\u4e0a\u90fd\u662f\u6587\u672c\u6570\u636e\uff0c\u6211\u4eec\u5e0c\u671b\u8ba1\u7b97\u673a\u80fd\u591f\u8bc6\u522b\u548c\u5904\u7406\u7b26\u5408\u67d0\u4e9b\u6a21\u5f0f\u7684\u6587\u672c\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u5c31\u663e\u5f97\u975e\u5e38\u91cd\u8981\u4e86\u3002\u4eca\u5929\u51e0\u4e4e\u6240\u6709\u7684\u7f16\u7a0b\u8bed\u8a00\u90fd\u63d0\u4f9b\u4e86\u5bf9\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\u7684\u652f\u6301\uff0cPython\u901a\u8fc7\u6807\u51c6\u5e93\u4e2d\u7684re\u6a21\u5757\u6765\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\u3002 \u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e0b\u9762\u4e00\u4e2a\u95ee\u9898\uff1a\u6211\u4eec\u4ece\u67d0\u4e2a\u5730\u65b9\uff08\u53ef\u80fd\u662f\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u4e5f\u53ef\u80fd\u662f\u7f51\u7edc\u4e0a\u7684\u4e00\u5219\u65b0\u95fb\uff09\u83b7\u5f97\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e0c\u671b\u5728\u5b57\u7b26\u4e32\u4e2d\u627e\u51fa\u624b\u673a\u53f7\u548c\u5ea7\u673a\u53f7\u3002\u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u8bbe\u5b9a\u624b\u673a\u53f7\u662f11\u4f4d\u7684\u6570\u5b57\uff08\u6ce8\u610f\u5e76\u4e0d\u662f\u968f\u673a\u768411\u4f4d\u6570\u5b57\uff0c\u56e0\u4e3a\u4f60\u6ca1\u6709\u89c1\u8fc7\u201c25012345678\u201d\u8fd9\u6837\u7684\u624b\u673a\u53f7\u5427\uff09\u800c\u5ea7\u673a\u53f7\u8ddf\u4e0a\u4e00\u6bb5\u4e2d\u63cf\u8ff0\u7684\u6a21\u5f0f\u76f8\u540c\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u8981\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\u5c31\u4f1a\u5f88\u9ebb\u70e6\u3002 \u5173\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u5927\u5bb6\u53ef\u4ee5\u9605\u8bfb\u4e00\u7bc7\u975e\u5e38\u6709\u540d\u7684\u535a\u5ba2\u53eb \u300a\u6b63\u5219\u8868\u8fbe\u5f0f30\u5206\u949f\u5165\u95e8\u6559\u7a0b\u300b \uff0c\u8bfb\u5b8c\u8fd9\u7bc7\u6587\u7ae0\u540e\u4f60\u5c31\u53ef\u4ee5\u770b\u61c2\u4e0b\u9762\u7684\u8868\u683c\uff0c\u8fd9\u662f\u6211\u4eec\u5bf9\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u7684\u4e00\u4e9b\u57fa\u672c\u7b26\u53f7\u8fdb\u884c\u7684\u627c\u8981\u603b\u7ed3\u3002 \u7b26\u53f7 \u89e3\u91ca \u793a\u4f8b \u8bf4\u660e . \u5339\u914d\u4efb\u610f\u5b57\u7b26 b.t \u53ef\u4ee5\u5339\u914dbat / but / b#t / b1t\u7b49 \\w \u5339\u914d\u5b57\u6bcd/\u6570\u5b57/\u4e0b\u5212\u7ebf b\\wt \u53ef\u4ee5\u5339\u914dbat / b1t / b_t\u7b49 \u4f46\u4e0d\u80fd\u5339\u914db#t \\s \u5339\u914d\u7a7a\u767d\u5b57\u7b26\uff08\u5305\u62ec\\r\u3001\\n\u3001\\t\u7b49\uff09 love\\syou \u53ef\u4ee5\u5339\u914dlove you \\d \u5339\u914d\u6570\u5b57 \\d\\d \u53ef\u4ee5\u5339\u914d01 / 23 / 99\u7b49 \\b \u5339\u914d\u5355\u8bcd\u7684\u8fb9\u754c \\bThe\\b ^ \u5339\u914d\u5b57\u7b26\u4e32\u7684\u5f00\u59cb ^The \u53ef\u4ee5\u5339\u914dThe\u5f00\u5934\u7684\u5b57\u7b26\u4e32 $ \u5339\u914d\u5b57\u7b26\u4e32\u7684\u7ed3\u675f .exe$ \u53ef\u4ee5\u5339\u914d.exe\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32 \\W \u5339\u914d\u975e\u5b57\u6bcd/\u6570\u5b57/\u4e0b\u5212\u7ebf b\\Wt \u53ef\u4ee5\u5339\u914db#t / b@t\u7b49 \u4f46\u4e0d\u80fd\u5339\u914dbut / b1t / b_t\u7b49 \\S \u5339\u914d\u975e\u7a7a\u767d\u5b57\u7b26 love\\Syou \u53ef\u4ee5\u5339\u914dlove#you\u7b49 \u4f46\u4e0d\u80fd\u5339\u914dlove you \\D \u5339\u914d\u975e\u6570\u5b57 \\d\\D \u53ef\u4ee5\u5339\u914d9a / 3# / 0F\u7b49 \\B \u5339\u914d\u975e\u5355\u8bcd\u8fb9\u754c \\Bio\\B [] \u5339\u914d\u6765\u81ea\u5b57\u7b26\u96c6\u7684\u4efb\u610f\u5355\u4e00\u5b57\u7b26 [aeiou] \u53ef\u4ee5\u5339\u914d\u4efb\u4e00\u5143\u97f3\u5b57\u6bcd\u5b57\u7b26 [^] \u5339\u914d\u4e0d\u5728\u5b57\u7b26\u96c6\u4e2d\u7684\u4efb\u610f\u5355\u4e00\u5b57\u7b26 [^aeiou] \u53ef\u4ee5\u5339\u914d\u4efb\u4e00\u975e\u5143\u97f3\u5b57\u6bcd\u5b57\u7b26 * \u5339\u914d0\u6b21\u6216\u591a\u6b21 \\w* + \u5339\u914d1\u6b21\u6216\u591a\u6b21 \\w+ ? \u5339\u914d0\u6b21\u62161\u6b21 \\w? {N} \u5339\u914dN\u6b21 \\w{3} {M,} \u5339\u914d\u81f3\u5c11M\u6b21 \\w{3,} {M,N} \u5339\u914d\u81f3\u5c11M\u6b21\u81f3\u591aN\u6b21 \\w{3,6} | \u5206\u652f foo|bar \u53ef\u4ee5\u5339\u914dfoo\u6216\u8005bar (?#) \u6ce8\u91ca (exp) \u5339\u914dexp\u5e76\u6355\u83b7\u5230\u81ea\u52a8\u547d\u540d\u7684\u7ec4\u4e2d (?<name>exp) \u5339\u914dexp\u5e76\u6355\u83b7\u5230\u540d\u4e3aname\u7684\u7ec4\u4e2d (?:exp) \u5339\u914dexp\u4f46\u662f\u4e0d\u6355\u83b7\u5339\u914d\u7684\u6587\u672c (?=exp) \u5339\u914dexp\u524d\u9762\u7684\u4f4d\u7f6e \\b\\w+(?=ing) \u53ef\u4ee5\u5339\u914dI'm dancing\u4e2d\u7684danc (?<=exp) \u5339\u914dexp\u540e\u9762\u7684\u4f4d\u7f6e (?<=\\bdanc)\\w+\\b \u53ef\u4ee5\u5339\u914dI love dancing and reading\u4e2d\u7684\u7b2c\u4e00\u4e2aing (?!exp) \u5339\u914d\u540e\u9762\u4e0d\u662fexp\u7684\u4f4d\u7f6e (?<!exp) \u5339\u914d\u524d\u9762\u4e0d\u662fexp\u7684\u4f4d\u7f6e *? \u91cd\u590d\u4efb\u610f\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d a.*b a.*?b \u5c06\u6b63\u5219\u8868\u8fbe\u5f0f\u5e94\u7528\u4e8eaabab\uff0c\u524d\u8005\u4f1a\u5339\u914d\u6574\u4e2a\u5b57\u7b26\u4e32aabab\uff0c\u540e\u8005\u4f1a\u5339\u914daab\u548cab\u4e24\u4e2a\u5b57\u7b26\u4e32 +? \u91cd\u590d1\u6b21\u6216\u591a\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d ?? \u91cd\u590d0\u6b21\u62161\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d {M,N}? \u91cd\u590dM\u5230N\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d {M,}? \u91cd\u590dM\u6b21\u4ee5\u4e0a\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d \u8bf4\u660e\uff1a \u5982\u679c\u9700\u8981\u5339\u914d\u7684\u5b57\u7b26\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u7684\u7279\u6b8a\u5b57\u7b26\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\\\u8fdb\u884c\u8f6c\u4e49\u5904\u7406\uff0c\u4f8b\u5982\u60f3\u5339\u914d\u5c0f\u6570\u70b9\u53ef\u4ee5\u5199\u6210\\.\u5c31\u53ef\u4ee5\u4e86\uff0c\u56e0\u4e3a\u76f4\u63a5\u5199.\u4f1a\u5339\u914d\u4efb\u610f\u5b57\u7b26\uff1b\u540c\u7406\uff0c\u60f3\u5339\u914d\u5706\u62ec\u53f7\u5fc5\u987b\u5199\u6210\\(\u548c\\)\uff0c\u5426\u5219\u5706\u62ec\u53f7\u88ab\u89c6\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u7684\u5206\u7ec4\u3002 Python\u5bf9\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u652f\u6301 Python\u63d0\u4f9b\u4e86re\u6a21\u5757\u6765\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u5173\u64cd\u4f5c\uff0c\u4e0b\u9762\u662fre\u6a21\u5757\u4e2d\u7684\u6838\u5fc3\u51fd\u6570\u3002 \u51fd\u6570 \u8bf4\u660e compile(pattern, flags=0) \u7f16\u8bd1\u6b63\u5219\u8868\u8fbe\u5f0f\u8fd4\u56de\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61 match(pattern, string, flags=0) \u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5b57\u7b26\u4e32 \u6210\u529f\u8fd4\u56de\u5339\u914d\u5bf9\u8c61 \u5426\u5219\u8fd4\u56deNone search(pattern, string, flags=0) \u641c\u7d22\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u6a21\u5f0f \u6210\u529f\u8fd4\u56de\u5339\u914d\u5bf9\u8c61 \u5426\u5219\u8fd4\u56deNone split(pattern, string, maxsplit=0, flags=0) \u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u6307\u5b9a\u7684\u6a21\u5f0f\u5206\u9694\u7b26\u62c6\u5206\u5b57\u7b26\u4e32 \u8fd4\u56de\u5217\u8868 sub(pattern, repl, string, count=0, flags=0) \u7528\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u66ff\u6362\u539f\u5b57\u7b26\u4e32\u4e2d\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u7684\u6a21\u5f0f \u53ef\u4ee5\u7528count\u6307\u5b9a\u66ff\u6362\u7684\u6b21\u6570 fullmatch(pattern, string, flags=0) match\u51fd\u6570\u7684\u5b8c\u5168\u5339\u914d\uff08\u4ece\u5b57\u7b26\u4e32\u5f00\u5934\u5230\u7ed3\u5c3e\uff09\u7248\u672c findall(pattern, string, flags=0) \u67e5\u627e\u5b57\u7b26\u4e32\u6240\u6709\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u7684\u6a21\u5f0f \u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u5217\u8868 finditer(pattern, string, flags=0) \u67e5\u627e\u5b57\u7b26\u4e32\u6240\u6709\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u7684\u6a21\u5f0f \u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668 purge() \u6e05\u9664\u9690\u5f0f\u7f16\u8bd1\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u7f13\u5b58 re.I / re.IGNORECASE \u5ffd\u7565\u5927\u5c0f\u5199\u5339\u914d\u6807\u8bb0 re.M / re.MULTILINE \u591a\u884c\u5339\u914d\u6807\u8bb0 \u8bf4\u660e\uff1a \u4e0a\u9762\u63d0\u5230\u7684re\u6a21\u5757\u4e2d\u7684\u8fd9\u4e9b\u51fd\u6570\uff0c\u5b9e\u9645\u5f00\u53d1\u4e2d\u4e5f\u53ef\u4ee5\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61\u7684\u65b9\u6cd5\u66ff\u4ee3\u5bf9\u8fd9\u4e9b\u51fd\u6570\u7684\u4f7f\u7528\uff0c\u5982\u679c\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u9700\u8981\u91cd\u590d\u7684\u4f7f\u7528\uff0c\u90a3\u4e48\u5148\u901a\u8fc7compile\u51fd\u6570\u7f16\u8bd1\u6b63\u5219\u8868\u8fbe\u5f0f\u5e76\u521b\u5efa\u51fa\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61\u65e0\u7591\u662f\u66f4\u4e3a\u660e\u667a\u7684\u9009\u62e9\u3002 \u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u4f8b\u5b50\u6765\u544a\u8bc9\u5927\u5bb6\u5728Python\u4e2d\u5982\u4f55\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 \u4f8b\u5b501\uff1a\u9a8c\u8bc1\u8f93\u5165\u7528\u6237\u540d\u548cQQ\u53f7\u662f\u5426\u6709\u6548\u5e76\u7ed9\u51fa\u5bf9\u5e94\u7684\u63d0\u793a\u4fe1\u606f\u3002 \"\"\" \u9a8c\u8bc1\u8f93\u5165\u7528\u6237\u540d\u548cQQ\u53f7\u662f\u5426\u6709\u6548\u5e76\u7ed9\u51fa\u5bf9\u5e94\u7684\u63d0\u793a\u4fe1\u606f \u8981\u6c42\uff1a\u7528\u6237\u540d\u5fc5\u987b\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u6216\u4e0b\u5212\u7ebf\u6784\u6210\u4e14\u957f\u5ea6\u57286~20\u4e2a\u5b57\u7b26\u4e4b\u95f4\uff0cQQ\u53f7\u662f5~12\u7684\u6570\u5b57\u4e14\u9996\u4f4d\u4e0d\u80fd\u4e3a0 \"\"\" import re def main(): username = input('\u8bf7\u8f93\u5165\u7528\u6237\u540d: ') qq = input('\u8bf7\u8f93\u5165QQ\u53f7: ') # match\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u5b57\u7b26\u4e32\u6216\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61 # \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u8981\u8ddf\u6b63\u5219\u8868\u8fbe\u5f0f\u505a\u5339\u914d\u7684\u5b57\u7b26\u4e32\u5bf9\u8c61 m1 = re.match(r'^[0-9a-zA-Z_]{6,20}$', username) if not m1: print('\u8bf7\u8f93\u5165\u6709\u6548\u7684\u7528\u6237\u540d.') m2 = re.match(r'^[1-9]\\d{4,11}$', qq) if not m2: print('\u8bf7\u8f93\u5165\u6709\u6548\u7684QQ\u53f7.') if m1 and m2: print('\u4f60\u8f93\u5165\u7684\u4fe1\u606f\u662f\u6709\u6548\u7684!') if __name__ == '__main__': main() \u63d0\u793a \uff1a\u4e0a\u9762\u5728\u4e66\u5199\u6b63\u5219\u8868\u8fbe\u5f0f\u65f6\u4f7f\u7528\u4e86\u201c\u539f\u59cb\u5b57\u7b26\u4e32\u201d\u7684\u5199\u6cd5\uff08\u5728\u5b57\u7b26\u4e32\u524d\u9762\u52a0\u4e0a\u4e86r\uff09\uff0c\u6240\u8c13\u201c\u539f\u59cb\u5b57\u7b26\u4e32\u201d\u5c31\u662f\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u90fd\u662f\u5b83\u539f\u59cb\u7684\u610f\u4e49\uff0c\u8bf4\u5f97\u66f4\u76f4\u63a5\u4e00\u70b9\u5c31\u662f\u5b57\u7b26\u4e32\u4e2d\u6ca1\u6709\u6240\u8c13\u7684\u8f6c\u4e49\u5b57\u7b26\u5566\u3002\u56e0\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u6709\u5f88\u591a\u5143\u5b57\u7b26\u548c\u9700\u8981\u8fdb\u884c\u8f6c\u4e49\u7684\u5730\u65b9\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u539f\u59cb\u5b57\u7b26\u4e32\u5c31\u9700\u8981\u5c06\u53cd\u659c\u6760\u5199\u4f5c\\\\\uff0c\u4f8b\u5982\u8868\u793a\u6570\u5b57\u7684\\d\u5f97\u4e66\u5199\u6210\\\\d\uff0c\u8fd9\u6837\u4e0d\u4ec5\u5199\u8d77\u6765\u4e0d\u65b9\u4fbf\uff0c\u9605\u8bfb\u7684\u65f6\u5019\u4e5f\u4f1a\u5f88\u5403\u529b\u3002 \u4f8b\u5b502\uff1a\u4ece\u4e00\u6bb5\u6587\u5b57\u4e2d\u63d0\u53d6\u51fa\u56fd\u5185\u624b\u673a\u53f7\u7801\u3002 \u4e0b\u9762\u8fd9\u5f20\u56fe\u662f\u622a\u6b62\u52302017\u5e74\u5e95\uff0c\u56fd\u5185\u4e09\u5bb6\u8fd0\u8425\u5546\u63a8\u51fa\u7684\u624b\u673a\u53f7\u6bb5\u3002 import re def main(): # \u521b\u5efa\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61 \u4f7f\u7528\u4e86\u524d\u77bb\u548c\u56de\u987e\u6765\u4fdd\u8bc1\u624b\u673a\u53f7\u524d\u540e\u4e0d\u5e94\u8be5\u51fa\u73b0\u6570\u5b57 pattern = re.compile(r'(?<=\\D)1[34578]\\d{9}(?=\\D)') sentence = ''' \u91cd\u8981\u7684\u4e8b\u60c5\u8bf48130123456789\u904d\uff0c\u6211\u7684\u624b\u673a\u53f7\u662f13512346789\u8fd9\u4e2a\u9753\u53f7\uff0c \u4e0d\u662f15600998765\uff0c\u4e5f\u662f110\u6216119\uff0c\u738b\u5927\u9524\u7684\u624b\u673a\u53f7\u624d\u662f15600998765\u3002 ''' # \u67e5\u627e\u6240\u6709\u5339\u914d\u5e76\u4fdd\u5b58\u5230\u4e00\u4e2a\u5217\u8868\u4e2d mylist = re.findall(pattern, sentence) print(mylist) print('--------\u534e\u4e3d\u7684\u5206\u9694\u7ebf--------') # \u901a\u8fc7\u8fed\u4ee3\u5668\u53d6\u51fa\u5339\u914d\u5bf9\u8c61\u5e76\u83b7\u5f97\u5339\u914d\u7684\u5185\u5bb9 for temp in pattern.finditer(sentence): print(temp.group()) print('--------\u534e\u4e3d\u7684\u5206\u9694\u7ebf--------') # \u901a\u8fc7search\u51fd\u6570\u6307\u5b9a\u641c\u7d22\u4f4d\u7f6e\u627e\u51fa\u6240\u6709\u5339\u914d m = pattern.search(sentence) while m: print(m.group()) m = pattern.search(sentence, m.end()) if __name__ == '__main__': main() \u8bf4\u660e \uff1a\u4e0a\u9762\u5339\u914d\u56fd\u5185\u624b\u673a\u53f7\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5e76\u4e0d\u591f\u597d\uff0c\u56e0\u4e3a\u50cf14\u5f00\u5934\u7684\u53f7\u7801\u53ea\u6709145\u6216147\uff0c\u800c\u4e0a\u9762\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5e76\u6ca1\u6709\u8003\u8651\u8fd9\u79cd\u60c5\u51b5\uff0c\u8981\u5339\u914d\u56fd\u5185\u624b\u673a\u53f7\uff0c\u66f4\u597d\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5199\u6cd5\u662f\uff1a (?<=\\D)(1[38]\\d{9}|14[57]\\d{8}|15[0-35-9]\\d{8}|17[678]\\d{8})(?=\\D) \uff0c\u56fd\u5185\u6700\u8fd1\u597d\u50cf\u670919\u548c16\u5f00\u5934\u7684\u624b\u673a\u53f7\u4e86\uff0c\u4f46\u662f\u8fd9\u4e2a\u6682\u65f6\u4e0d\u5728\u6211\u4eec\u8003\u8651\u4e4b\u5217\u3002 \u4f8b\u5b503\uff1a\u66ff\u6362\u5b57\u7b26\u4e32\u4e2d\u7684\u4e0d\u826f\u5185\u5bb9 import re def main(): sentence = '\u4f60\u4e2b\u662f\u50bb\u53c9\u5417? \u6211\u64cd\u4f60\u5927\u7237\u7684. Fuck you.' purified = re.sub('[\u64cd\u808f\u8279]|fuck|shit|\u50bb[\u6bd4\u5c44\u903c\u53c9\u7f3a\u540a\u5c4c]|\u715e\u7b14', '*', sentence, flags=re.IGNORECASE) print(purified) # \u4f60\u4e2b\u662f*\u5417? \u6211*\u4f60\u5927\u7237\u7684. * you. if __name__ == '__main__': main() \u8bf4\u660e \uff1are\u6a21\u5757\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u5173\u51fd\u6570\u4e2d\u90fd\u6709\u4e00\u4e2aflags\u53c2\u6570\uff0c\u5b83\u4ee3\u8868\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5339\u914d\u6807\u8bb0\uff0c\u53ef\u4ee5\u901a\u8fc7\u8be5\u6807\u8bb0\u6765\u6307\u5b9a\u5339\u914d\u65f6\u662f\u5426\u5ffd\u7565\u5927\u5c0f\u5199\u3001\u662f\u5426\u8fdb\u884c\u591a\u884c\u5339\u914d\u3001\u662f\u5426\u663e\u793a\u8c03\u8bd5\u4fe1\u606f\u7b49\u3002\u5982\u679c\u9700\u8981\u4e3aflags\u53c2\u6570\u6307\u5b9a\u591a\u4e2a\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528 \u6309\u4f4d\u6216\u8fd0\u7b97\u7b26 \u8fdb\u884c\u53e0\u52a0\uff0c\u5982 flags=re.I | re.M \u3002 \u4f8b\u5b504\uff1a\u62c6\u5206\u957f\u5b57\u7b26\u4e32 import re def main(): poem = '\u7a97\u524d\u660e\u6708\u5149\uff0c\u7591\u662f\u5730\u4e0a\u971c\u3002\u4e3e\u5934\u671b\u660e\u6708\uff0c\u4f4e\u5934\u601d\u6545\u4e61\u3002' sentence_list = re.split(r'[\uff0c\u3002, .]', poem) while '' in sentence_list: sentence_list.remove('') print(sentence_list) # ['\u7a97\u524d\u660e\u6708\u5149', '\u7591\u662f\u5730\u4e0a\u971c', '\u4e3e\u5934\u671b\u660e\u6708', '\u4f4e\u5934\u601d\u6545\u4e61'] if __name__ == '__main__': main() \u540e\u8bdd \u5982\u679c\u8981\u4ece\u4e8b\u722c\u866b\u7c7b\u5e94\u7528\u7684\u5f00\u53d1\uff0c\u90a3\u4e48\u6b63\u5219\u8868\u8fbe\u5f0f\u4e00\u5b9a\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u52a9\u624b\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u8fc5\u901f\u7684\u4ece\u7f51\u9875\u4ee3\u7801\u4e2d\u53d1\u73b0\u67d0\u79cd\u6211\u4eec\u6307\u5b9a\u7684\u6a21\u5f0f\u5e76\u63d0\u53d6\u51fa\u6211\u4eec\u9700\u8981\u7684\u4fe1\u606f\uff0c\u5f53\u7136\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u6536\uff0c\u8981\u7f16\u5199\u4e00\u4e2a\u6b63\u786e\u7684\u9002\u5f53\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u80fd\u5e76\u4e0d\u662f\u4e00\u4ef6\u5bb9\u6613\u7684\u4e8b\u60c5\uff08\u5f53\u7136\u6709\u4e9b\u5e38\u7528\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u4ee5\u76f4\u63a5\u5728\u7f51\u4e0a\u627e\u627e\uff09\uff0c\u6240\u4ee5\u5b9e\u9645\u5f00\u53d1\u722c\u866b\u5e94\u7528\u7684\u65f6\u5019\uff0c\u6709\u5f88\u591a\u4eba\u4f1a\u9009\u62e9 Beautiful Soup \u6216 Lxml \u6765\u8fdb\u884c\u5339\u914d\u548c\u4fe1\u606f\u7684\u63d0\u53d6\uff0c\u524d\u8005\u7b80\u5355\u65b9\u4fbf\u4f46\u662f\u6027\u80fd\u8f83\u5dee\uff0c\u540e\u8005\u65e2\u597d\u7528\u6027\u80fd\u4e5f\u597d\uff0c\u4f46\u662f\u5b89\u88c5\u7a0d\u5acc\u9ebb\u70e6\uff0c\u8fd9\u4e9b\u5185\u5bb9\u6211\u4eec\u4f1a\u5728\u540e\u671f\u7684\u722c\u866b\u4e13\u9898\u4e2d\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u3002","title":"\u7b2c\u5341\u4e8c\u5929"},{"location":"new/12%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#_1","text":"","title":"\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f"},{"location":"new/12%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#_2","text":"\u5728\u7f16\u5199\u5904\u7406\u5b57\u7b26\u4e32\u7684\u7a0b\u5e8f\u6216\u7f51\u9875\u65f6\uff0c\u7ecf\u5e38\u4f1a\u6709\u67e5\u627e\u7b26\u5408\u67d0\u4e9b\u590d\u6742\u89c4\u5219\u7684\u5b57\u7b26\u4e32\u7684\u9700\u8981\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u5c31\u662f\u7528\u4e8e\u63cf\u8ff0\u8fd9\u4e9b\u89c4\u5219\u7684\u5de5\u5177\uff0c\u6362\u53e5\u8bdd\u8bf4\u6b63\u5219\u8868\u8fbe\u5f0f\u662f\u4e00\u79cd\u5de5\u5177\uff0c\u5b83\u5b9a\u4e49\u4e86\u5b57\u7b26\u4e32\u7684\u5339\u914d\u6a21\u5f0f\uff08\u5982\u4f55\u68c0\u67e5\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u6709\u8ddf\u67d0\u79cd\u6a21\u5f0f\u5339\u914d\u7684\u90e8\u5206\u6216\u8005\u4ece\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u5c06\u4e0e\u6a21\u5f0f\u5339\u914d\u7684\u90e8\u5206\u63d0\u53d6\u51fa\u6765\u6216\u8005\u66ff\u6362\u6389\uff09\u3002\u5982\u679c\u4f60\u5728Windows\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u4f7f\u7528\u8fc7\u6587\u4ef6\u67e5\u627e\u5e76\u4e14\u5728\u6307\u5b9a\u6587\u4ef6\u540d\u65f6\u4f7f\u7528\u8fc7\u901a\u914d\u7b26\uff08*\u548c?\uff09\uff0c\u90a3\u4e48\u6b63\u5219\u8868\u8fbe\u5f0f\u4e5f\u662f\u4e0e\u4e4b\u7c7b\u4f3c\u7684\u7528\u6765\u8fdb\u884c\u6587\u672c\u5339\u914d\u7684\u5de5\u5177\uff0c\u53ea\u4e0d\u8fc7\u6bd4\u8d77\u901a\u914d\u7b26\u6b63\u5219\u8868\u8fbe\u5f0f\u66f4\u5f3a\u5927\uff0c\u5b83\u80fd\u66f4\u7cbe\u786e\u5730\u63cf\u8ff0\u4f60\u7684\u9700\u6c42\uff08\u5f53\u7136\u4f60\u4ed8\u51fa\u7684\u4ee3\u4ef7\u662f\u4e66\u5199\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u6bd4\u6253\u51fa\u4e00\u4e2a\u901a\u914d\u7b26\u8981\u590d\u6742\u5f97\u591a\uff0c\u8981\u77e5\u9053\u4efb\u4f55\u7ed9\u4f60\u5e26\u6765\u597d\u5904\u7684\u4e1c\u897f\u90fd\u662f\u6709\u4ee3\u4ef7\u7684\uff0c\u5c31\u5982\u540c\u5b66\u4e60\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\u4e00\u6837\uff09\uff0c\u6bd4\u5982\u4f60\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u7528\u6765\u67e5\u627e\u6240\u6709\u4ee50\u5f00\u5934\uff0c\u540e\u9762\u8ddf\u77402-3\u4e2a\u6570\u5b57\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u8fde\u5b57\u53f7\u201c-\u201d\uff0c\u6700\u540e\u662f7\u62168\u4f4d\u6570\u5b57\u7684\u5b57\u7b26\u4e32\uff08\u50cf028-12345678\u62160813-7654321\uff09\uff0c\u8fd9\u4e0d\u5c31\u662f\u56fd\u5185\u7684\u5ea7\u673a\u53f7\u7801\u5417\u3002\u6700\u521d\u8ba1\u7b97\u673a\u662f\u4e3a\u4e86\u505a\u6570\u5b66\u8fd0\u7b97\u800c\u8bde\u751f\u7684\uff0c\u5904\u7406\u7684\u4fe1\u606f\u57fa\u672c\u4e0a\u90fd\u662f\u6570\u503c\uff0c\u800c\u4eca\u5929\u6211\u4eec\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\u5904\u7406\u7684\u4fe1\u606f\u57fa\u672c\u4e0a\u90fd\u662f\u6587\u672c\u6570\u636e\uff0c\u6211\u4eec\u5e0c\u671b\u8ba1\u7b97\u673a\u80fd\u591f\u8bc6\u522b\u548c\u5904\u7406\u7b26\u5408\u67d0\u4e9b\u6a21\u5f0f\u7684\u6587\u672c\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u5c31\u663e\u5f97\u975e\u5e38\u91cd\u8981\u4e86\u3002\u4eca\u5929\u51e0\u4e4e\u6240\u6709\u7684\u7f16\u7a0b\u8bed\u8a00\u90fd\u63d0\u4f9b\u4e86\u5bf9\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\u7684\u652f\u6301\uff0cPython\u901a\u8fc7\u6807\u51c6\u5e93\u4e2d\u7684re\u6a21\u5757\u6765\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\u3002 \u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e0b\u9762\u4e00\u4e2a\u95ee\u9898\uff1a\u6211\u4eec\u4ece\u67d0\u4e2a\u5730\u65b9\uff08\u53ef\u80fd\u662f\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u4e5f\u53ef\u80fd\u662f\u7f51\u7edc\u4e0a\u7684\u4e00\u5219\u65b0\u95fb\uff09\u83b7\u5f97\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e0c\u671b\u5728\u5b57\u7b26\u4e32\u4e2d\u627e\u51fa\u624b\u673a\u53f7\u548c\u5ea7\u673a\u53f7\u3002\u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u8bbe\u5b9a\u624b\u673a\u53f7\u662f11\u4f4d\u7684\u6570\u5b57\uff08\u6ce8\u610f\u5e76\u4e0d\u662f\u968f\u673a\u768411\u4f4d\u6570\u5b57\uff0c\u56e0\u4e3a\u4f60\u6ca1\u6709\u89c1\u8fc7\u201c25012345678\u201d\u8fd9\u6837\u7684\u624b\u673a\u53f7\u5427\uff09\u800c\u5ea7\u673a\u53f7\u8ddf\u4e0a\u4e00\u6bb5\u4e2d\u63cf\u8ff0\u7684\u6a21\u5f0f\u76f8\u540c\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u8981\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\u5c31\u4f1a\u5f88\u9ebb\u70e6\u3002 \u5173\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u5927\u5bb6\u53ef\u4ee5\u9605\u8bfb\u4e00\u7bc7\u975e\u5e38\u6709\u540d\u7684\u535a\u5ba2\u53eb \u300a\u6b63\u5219\u8868\u8fbe\u5f0f30\u5206\u949f\u5165\u95e8\u6559\u7a0b\u300b \uff0c\u8bfb\u5b8c\u8fd9\u7bc7\u6587\u7ae0\u540e\u4f60\u5c31\u53ef\u4ee5\u770b\u61c2\u4e0b\u9762\u7684\u8868\u683c\uff0c\u8fd9\u662f\u6211\u4eec\u5bf9\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u7684\u4e00\u4e9b\u57fa\u672c\u7b26\u53f7\u8fdb\u884c\u7684\u627c\u8981\u603b\u7ed3\u3002 \u7b26\u53f7 \u89e3\u91ca \u793a\u4f8b \u8bf4\u660e . \u5339\u914d\u4efb\u610f\u5b57\u7b26 b.t \u53ef\u4ee5\u5339\u914dbat / but / b#t / b1t\u7b49 \\w \u5339\u914d\u5b57\u6bcd/\u6570\u5b57/\u4e0b\u5212\u7ebf b\\wt \u53ef\u4ee5\u5339\u914dbat / b1t / b_t\u7b49 \u4f46\u4e0d\u80fd\u5339\u914db#t \\s \u5339\u914d\u7a7a\u767d\u5b57\u7b26\uff08\u5305\u62ec\\r\u3001\\n\u3001\\t\u7b49\uff09 love\\syou \u53ef\u4ee5\u5339\u914dlove you \\d \u5339\u914d\u6570\u5b57 \\d\\d \u53ef\u4ee5\u5339\u914d01 / 23 / 99\u7b49 \\b \u5339\u914d\u5355\u8bcd\u7684\u8fb9\u754c \\bThe\\b ^ \u5339\u914d\u5b57\u7b26\u4e32\u7684\u5f00\u59cb ^The \u53ef\u4ee5\u5339\u914dThe\u5f00\u5934\u7684\u5b57\u7b26\u4e32 $ \u5339\u914d\u5b57\u7b26\u4e32\u7684\u7ed3\u675f .exe$ \u53ef\u4ee5\u5339\u914d.exe\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32 \\W \u5339\u914d\u975e\u5b57\u6bcd/\u6570\u5b57/\u4e0b\u5212\u7ebf b\\Wt \u53ef\u4ee5\u5339\u914db#t / b@t\u7b49 \u4f46\u4e0d\u80fd\u5339\u914dbut / b1t / b_t\u7b49 \\S \u5339\u914d\u975e\u7a7a\u767d\u5b57\u7b26 love\\Syou \u53ef\u4ee5\u5339\u914dlove#you\u7b49 \u4f46\u4e0d\u80fd\u5339\u914dlove you \\D \u5339\u914d\u975e\u6570\u5b57 \\d\\D \u53ef\u4ee5\u5339\u914d9a / 3# / 0F\u7b49 \\B \u5339\u914d\u975e\u5355\u8bcd\u8fb9\u754c \\Bio\\B [] \u5339\u914d\u6765\u81ea\u5b57\u7b26\u96c6\u7684\u4efb\u610f\u5355\u4e00\u5b57\u7b26 [aeiou] \u53ef\u4ee5\u5339\u914d\u4efb\u4e00\u5143\u97f3\u5b57\u6bcd\u5b57\u7b26 [^] \u5339\u914d\u4e0d\u5728\u5b57\u7b26\u96c6\u4e2d\u7684\u4efb\u610f\u5355\u4e00\u5b57\u7b26 [^aeiou] \u53ef\u4ee5\u5339\u914d\u4efb\u4e00\u975e\u5143\u97f3\u5b57\u6bcd\u5b57\u7b26 * \u5339\u914d0\u6b21\u6216\u591a\u6b21 \\w* + \u5339\u914d1\u6b21\u6216\u591a\u6b21 \\w+ ? \u5339\u914d0\u6b21\u62161\u6b21 \\w? {N} \u5339\u914dN\u6b21 \\w{3} {M,} \u5339\u914d\u81f3\u5c11M\u6b21 \\w{3,} {M,N} \u5339\u914d\u81f3\u5c11M\u6b21\u81f3\u591aN\u6b21 \\w{3,6} | \u5206\u652f foo|bar \u53ef\u4ee5\u5339\u914dfoo\u6216\u8005bar (?#) \u6ce8\u91ca (exp) \u5339\u914dexp\u5e76\u6355\u83b7\u5230\u81ea\u52a8\u547d\u540d\u7684\u7ec4\u4e2d (?<name>exp) \u5339\u914dexp\u5e76\u6355\u83b7\u5230\u540d\u4e3aname\u7684\u7ec4\u4e2d (?:exp) \u5339\u914dexp\u4f46\u662f\u4e0d\u6355\u83b7\u5339\u914d\u7684\u6587\u672c (?=exp) \u5339\u914dexp\u524d\u9762\u7684\u4f4d\u7f6e \\b\\w+(?=ing) \u53ef\u4ee5\u5339\u914dI'm dancing\u4e2d\u7684danc (?<=exp) \u5339\u914dexp\u540e\u9762\u7684\u4f4d\u7f6e (?<=\\bdanc)\\w+\\b \u53ef\u4ee5\u5339\u914dI love dancing and reading\u4e2d\u7684\u7b2c\u4e00\u4e2aing (?!exp) \u5339\u914d\u540e\u9762\u4e0d\u662fexp\u7684\u4f4d\u7f6e (?<!exp) \u5339\u914d\u524d\u9762\u4e0d\u662fexp\u7684\u4f4d\u7f6e *? \u91cd\u590d\u4efb\u610f\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d a.*b a.*?b \u5c06\u6b63\u5219\u8868\u8fbe\u5f0f\u5e94\u7528\u4e8eaabab\uff0c\u524d\u8005\u4f1a\u5339\u914d\u6574\u4e2a\u5b57\u7b26\u4e32aabab\uff0c\u540e\u8005\u4f1a\u5339\u914daab\u548cab\u4e24\u4e2a\u5b57\u7b26\u4e32 +? \u91cd\u590d1\u6b21\u6216\u591a\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d ?? \u91cd\u590d0\u6b21\u62161\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d {M,N}? \u91cd\u590dM\u5230N\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d {M,}? \u91cd\u590dM\u6b21\u4ee5\u4e0a\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d \u8bf4\u660e\uff1a \u5982\u679c\u9700\u8981\u5339\u914d\u7684\u5b57\u7b26\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u7684\u7279\u6b8a\u5b57\u7b26\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\\\u8fdb\u884c\u8f6c\u4e49\u5904\u7406\uff0c\u4f8b\u5982\u60f3\u5339\u914d\u5c0f\u6570\u70b9\u53ef\u4ee5\u5199\u6210\\.\u5c31\u53ef\u4ee5\u4e86\uff0c\u56e0\u4e3a\u76f4\u63a5\u5199.\u4f1a\u5339\u914d\u4efb\u610f\u5b57\u7b26\uff1b\u540c\u7406\uff0c\u60f3\u5339\u914d\u5706\u62ec\u53f7\u5fc5\u987b\u5199\u6210\\(\u548c\\)\uff0c\u5426\u5219\u5706\u62ec\u53f7\u88ab\u89c6\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u7684\u5206\u7ec4\u3002","title":"\u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u5173\u77e5\u8bc6"},{"location":"new/12%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#python","text":"Python\u63d0\u4f9b\u4e86re\u6a21\u5757\u6765\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u5173\u64cd\u4f5c\uff0c\u4e0b\u9762\u662fre\u6a21\u5757\u4e2d\u7684\u6838\u5fc3\u51fd\u6570\u3002 \u51fd\u6570 \u8bf4\u660e compile(pattern, flags=0) \u7f16\u8bd1\u6b63\u5219\u8868\u8fbe\u5f0f\u8fd4\u56de\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61 match(pattern, string, flags=0) \u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5b57\u7b26\u4e32 \u6210\u529f\u8fd4\u56de\u5339\u914d\u5bf9\u8c61 \u5426\u5219\u8fd4\u56deNone search(pattern, string, flags=0) \u641c\u7d22\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u6a21\u5f0f \u6210\u529f\u8fd4\u56de\u5339\u914d\u5bf9\u8c61 \u5426\u5219\u8fd4\u56deNone split(pattern, string, maxsplit=0, flags=0) \u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u6307\u5b9a\u7684\u6a21\u5f0f\u5206\u9694\u7b26\u62c6\u5206\u5b57\u7b26\u4e32 \u8fd4\u56de\u5217\u8868 sub(pattern, repl, string, count=0, flags=0) \u7528\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u66ff\u6362\u539f\u5b57\u7b26\u4e32\u4e2d\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u7684\u6a21\u5f0f \u53ef\u4ee5\u7528count\u6307\u5b9a\u66ff\u6362\u7684\u6b21\u6570 fullmatch(pattern, string, flags=0) match\u51fd\u6570\u7684\u5b8c\u5168\u5339\u914d\uff08\u4ece\u5b57\u7b26\u4e32\u5f00\u5934\u5230\u7ed3\u5c3e\uff09\u7248\u672c findall(pattern, string, flags=0) \u67e5\u627e\u5b57\u7b26\u4e32\u6240\u6709\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u7684\u6a21\u5f0f \u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u5217\u8868 finditer(pattern, string, flags=0) \u67e5\u627e\u5b57\u7b26\u4e32\u6240\u6709\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u7684\u6a21\u5f0f \u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668 purge() \u6e05\u9664\u9690\u5f0f\u7f16\u8bd1\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u7f13\u5b58 re.I / re.IGNORECASE \u5ffd\u7565\u5927\u5c0f\u5199\u5339\u914d\u6807\u8bb0 re.M / re.MULTILINE \u591a\u884c\u5339\u914d\u6807\u8bb0 \u8bf4\u660e\uff1a \u4e0a\u9762\u63d0\u5230\u7684re\u6a21\u5757\u4e2d\u7684\u8fd9\u4e9b\u51fd\u6570\uff0c\u5b9e\u9645\u5f00\u53d1\u4e2d\u4e5f\u53ef\u4ee5\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61\u7684\u65b9\u6cd5\u66ff\u4ee3\u5bf9\u8fd9\u4e9b\u51fd\u6570\u7684\u4f7f\u7528\uff0c\u5982\u679c\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u9700\u8981\u91cd\u590d\u7684\u4f7f\u7528\uff0c\u90a3\u4e48\u5148\u901a\u8fc7compile\u51fd\u6570\u7f16\u8bd1\u6b63\u5219\u8868\u8fbe\u5f0f\u5e76\u521b\u5efa\u51fa\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61\u65e0\u7591\u662f\u66f4\u4e3a\u660e\u667a\u7684\u9009\u62e9\u3002 \u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u4f8b\u5b50\u6765\u544a\u8bc9\u5927\u5bb6\u5728Python\u4e2d\u5982\u4f55\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u3002","title":"Python\u5bf9\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u652f\u6301"},{"location":"new/12%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#1qq","text":"\"\"\" \u9a8c\u8bc1\u8f93\u5165\u7528\u6237\u540d\u548cQQ\u53f7\u662f\u5426\u6709\u6548\u5e76\u7ed9\u51fa\u5bf9\u5e94\u7684\u63d0\u793a\u4fe1\u606f \u8981\u6c42\uff1a\u7528\u6237\u540d\u5fc5\u987b\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u6216\u4e0b\u5212\u7ebf\u6784\u6210\u4e14\u957f\u5ea6\u57286~20\u4e2a\u5b57\u7b26\u4e4b\u95f4\uff0cQQ\u53f7\u662f5~12\u7684\u6570\u5b57\u4e14\u9996\u4f4d\u4e0d\u80fd\u4e3a0 \"\"\" import re def main(): username = input('\u8bf7\u8f93\u5165\u7528\u6237\u540d: ') qq = input('\u8bf7\u8f93\u5165QQ\u53f7: ') # match\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u5b57\u7b26\u4e32\u6216\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61 # \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u8981\u8ddf\u6b63\u5219\u8868\u8fbe\u5f0f\u505a\u5339\u914d\u7684\u5b57\u7b26\u4e32\u5bf9\u8c61 m1 = re.match(r'^[0-9a-zA-Z_]{6,20}$', username) if not m1: print('\u8bf7\u8f93\u5165\u6709\u6548\u7684\u7528\u6237\u540d.') m2 = re.match(r'^[1-9]\\d{4,11}$', qq) if not m2: print('\u8bf7\u8f93\u5165\u6709\u6548\u7684QQ\u53f7.') if m1 and m2: print('\u4f60\u8f93\u5165\u7684\u4fe1\u606f\u662f\u6709\u6548\u7684!') if __name__ == '__main__': main() \u63d0\u793a \uff1a\u4e0a\u9762\u5728\u4e66\u5199\u6b63\u5219\u8868\u8fbe\u5f0f\u65f6\u4f7f\u7528\u4e86\u201c\u539f\u59cb\u5b57\u7b26\u4e32\u201d\u7684\u5199\u6cd5\uff08\u5728\u5b57\u7b26\u4e32\u524d\u9762\u52a0\u4e0a\u4e86r\uff09\uff0c\u6240\u8c13\u201c\u539f\u59cb\u5b57\u7b26\u4e32\u201d\u5c31\u662f\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u90fd\u662f\u5b83\u539f\u59cb\u7684\u610f\u4e49\uff0c\u8bf4\u5f97\u66f4\u76f4\u63a5\u4e00\u70b9\u5c31\u662f\u5b57\u7b26\u4e32\u4e2d\u6ca1\u6709\u6240\u8c13\u7684\u8f6c\u4e49\u5b57\u7b26\u5566\u3002\u56e0\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u6709\u5f88\u591a\u5143\u5b57\u7b26\u548c\u9700\u8981\u8fdb\u884c\u8f6c\u4e49\u7684\u5730\u65b9\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u539f\u59cb\u5b57\u7b26\u4e32\u5c31\u9700\u8981\u5c06\u53cd\u659c\u6760\u5199\u4f5c\\\\\uff0c\u4f8b\u5982\u8868\u793a\u6570\u5b57\u7684\\d\u5f97\u4e66\u5199\u6210\\\\d\uff0c\u8fd9\u6837\u4e0d\u4ec5\u5199\u8d77\u6765\u4e0d\u65b9\u4fbf\uff0c\u9605\u8bfb\u7684\u65f6\u5019\u4e5f\u4f1a\u5f88\u5403\u529b\u3002","title":"\u4f8b\u5b501\uff1a\u9a8c\u8bc1\u8f93\u5165\u7528\u6237\u540d\u548cQQ\u53f7\u662f\u5426\u6709\u6548\u5e76\u7ed9\u51fa\u5bf9\u5e94\u7684\u63d0\u793a\u4fe1\u606f\u3002"},{"location":"new/12%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#2","text":"\u4e0b\u9762\u8fd9\u5f20\u56fe\u662f\u622a\u6b62\u52302017\u5e74\u5e95\uff0c\u56fd\u5185\u4e09\u5bb6\u8fd0\u8425\u5546\u63a8\u51fa\u7684\u624b\u673a\u53f7\u6bb5\u3002 import re def main(): # \u521b\u5efa\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61 \u4f7f\u7528\u4e86\u524d\u77bb\u548c\u56de\u987e\u6765\u4fdd\u8bc1\u624b\u673a\u53f7\u524d\u540e\u4e0d\u5e94\u8be5\u51fa\u73b0\u6570\u5b57 pattern = re.compile(r'(?<=\\D)1[34578]\\d{9}(?=\\D)') sentence = ''' \u91cd\u8981\u7684\u4e8b\u60c5\u8bf48130123456789\u904d\uff0c\u6211\u7684\u624b\u673a\u53f7\u662f13512346789\u8fd9\u4e2a\u9753\u53f7\uff0c \u4e0d\u662f15600998765\uff0c\u4e5f\u662f110\u6216119\uff0c\u738b\u5927\u9524\u7684\u624b\u673a\u53f7\u624d\u662f15600998765\u3002 ''' # \u67e5\u627e\u6240\u6709\u5339\u914d\u5e76\u4fdd\u5b58\u5230\u4e00\u4e2a\u5217\u8868\u4e2d mylist = re.findall(pattern, sentence) print(mylist) print('--------\u534e\u4e3d\u7684\u5206\u9694\u7ebf--------') # \u901a\u8fc7\u8fed\u4ee3\u5668\u53d6\u51fa\u5339\u914d\u5bf9\u8c61\u5e76\u83b7\u5f97\u5339\u914d\u7684\u5185\u5bb9 for temp in pattern.finditer(sentence): print(temp.group()) print('--------\u534e\u4e3d\u7684\u5206\u9694\u7ebf--------') # \u901a\u8fc7search\u51fd\u6570\u6307\u5b9a\u641c\u7d22\u4f4d\u7f6e\u627e\u51fa\u6240\u6709\u5339\u914d m = pattern.search(sentence) while m: print(m.group()) m = pattern.search(sentence, m.end()) if __name__ == '__main__': main() \u8bf4\u660e \uff1a\u4e0a\u9762\u5339\u914d\u56fd\u5185\u624b\u673a\u53f7\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5e76\u4e0d\u591f\u597d\uff0c\u56e0\u4e3a\u50cf14\u5f00\u5934\u7684\u53f7\u7801\u53ea\u6709145\u6216147\uff0c\u800c\u4e0a\u9762\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5e76\u6ca1\u6709\u8003\u8651\u8fd9\u79cd\u60c5\u51b5\uff0c\u8981\u5339\u914d\u56fd\u5185\u624b\u673a\u53f7\uff0c\u66f4\u597d\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5199\u6cd5\u662f\uff1a (?<=\\D)(1[38]\\d{9}|14[57]\\d{8}|15[0-35-9]\\d{8}|17[678]\\d{8})(?=\\D) \uff0c\u56fd\u5185\u6700\u8fd1\u597d\u50cf\u670919\u548c16\u5f00\u5934\u7684\u624b\u673a\u53f7\u4e86\uff0c\u4f46\u662f\u8fd9\u4e2a\u6682\u65f6\u4e0d\u5728\u6211\u4eec\u8003\u8651\u4e4b\u5217\u3002","title":"\u4f8b\u5b502\uff1a\u4ece\u4e00\u6bb5\u6587\u5b57\u4e2d\u63d0\u53d6\u51fa\u56fd\u5185\u624b\u673a\u53f7\u7801\u3002"},{"location":"new/12%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#3","text":"import re def main(): sentence = '\u4f60\u4e2b\u662f\u50bb\u53c9\u5417? \u6211\u64cd\u4f60\u5927\u7237\u7684. Fuck you.' purified = re.sub('[\u64cd\u808f\u8279]|fuck|shit|\u50bb[\u6bd4\u5c44\u903c\u53c9\u7f3a\u540a\u5c4c]|\u715e\u7b14', '*', sentence, flags=re.IGNORECASE) print(purified) # \u4f60\u4e2b\u662f*\u5417? \u6211*\u4f60\u5927\u7237\u7684. * you. if __name__ == '__main__': main() \u8bf4\u660e \uff1are\u6a21\u5757\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u5173\u51fd\u6570\u4e2d\u90fd\u6709\u4e00\u4e2aflags\u53c2\u6570\uff0c\u5b83\u4ee3\u8868\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5339\u914d\u6807\u8bb0\uff0c\u53ef\u4ee5\u901a\u8fc7\u8be5\u6807\u8bb0\u6765\u6307\u5b9a\u5339\u914d\u65f6\u662f\u5426\u5ffd\u7565\u5927\u5c0f\u5199\u3001\u662f\u5426\u8fdb\u884c\u591a\u884c\u5339\u914d\u3001\u662f\u5426\u663e\u793a\u8c03\u8bd5\u4fe1\u606f\u7b49\u3002\u5982\u679c\u9700\u8981\u4e3aflags\u53c2\u6570\u6307\u5b9a\u591a\u4e2a\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528 \u6309\u4f4d\u6216\u8fd0\u7b97\u7b26 \u8fdb\u884c\u53e0\u52a0\uff0c\u5982 flags=re.I | re.M \u3002","title":"\u4f8b\u5b503\uff1a\u66ff\u6362\u5b57\u7b26\u4e32\u4e2d\u7684\u4e0d\u826f\u5185\u5bb9"},{"location":"new/12%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#4","text":"import re def main(): poem = '\u7a97\u524d\u660e\u6708\u5149\uff0c\u7591\u662f\u5730\u4e0a\u971c\u3002\u4e3e\u5934\u671b\u660e\u6708\uff0c\u4f4e\u5934\u601d\u6545\u4e61\u3002' sentence_list = re.split(r'[\uff0c\u3002, .]', poem) while '' in sentence_list: sentence_list.remove('') print(sentence_list) # ['\u7a97\u524d\u660e\u6708\u5149', '\u7591\u662f\u5730\u4e0a\u971c', '\u4e3e\u5934\u671b\u660e\u6708', '\u4f4e\u5934\u601d\u6545\u4e61'] if __name__ == '__main__': main()","title":"\u4f8b\u5b504\uff1a\u62c6\u5206\u957f\u5b57\u7b26\u4e32"},{"location":"new/12%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#_3","text":"\u5982\u679c\u8981\u4ece\u4e8b\u722c\u866b\u7c7b\u5e94\u7528\u7684\u5f00\u53d1\uff0c\u90a3\u4e48\u6b63\u5219\u8868\u8fbe\u5f0f\u4e00\u5b9a\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u52a9\u624b\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u8fc5\u901f\u7684\u4ece\u7f51\u9875\u4ee3\u7801\u4e2d\u53d1\u73b0\u67d0\u79cd\u6211\u4eec\u6307\u5b9a\u7684\u6a21\u5f0f\u5e76\u63d0\u53d6\u51fa\u6211\u4eec\u9700\u8981\u7684\u4fe1\u606f\uff0c\u5f53\u7136\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u6536\uff0c\u8981\u7f16\u5199\u4e00\u4e2a\u6b63\u786e\u7684\u9002\u5f53\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u80fd\u5e76\u4e0d\u662f\u4e00\u4ef6\u5bb9\u6613\u7684\u4e8b\u60c5\uff08\u5f53\u7136\u6709\u4e9b\u5e38\u7528\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u4ee5\u76f4\u63a5\u5728\u7f51\u4e0a\u627e\u627e\uff09\uff0c\u6240\u4ee5\u5b9e\u9645\u5f00\u53d1\u722c\u866b\u5e94\u7528\u7684\u65f6\u5019\uff0c\u6709\u5f88\u591a\u4eba\u4f1a\u9009\u62e9 Beautiful Soup \u6216 Lxml \u6765\u8fdb\u884c\u5339\u914d\u548c\u4fe1\u606f\u7684\u63d0\u53d6\uff0c\u524d\u8005\u7b80\u5355\u65b9\u4fbf\u4f46\u662f\u6027\u80fd\u8f83\u5dee\uff0c\u540e\u8005\u65e2\u597d\u7528\u6027\u80fd\u4e5f\u597d\uff0c\u4f46\u662f\u5b89\u88c5\u7a0d\u5acc\u9ebb\u70e6\uff0c\u8fd9\u4e9b\u5185\u5bb9\u6211\u4eec\u4f1a\u5728\u540e\u671f\u7684\u722c\u866b\u4e13\u9898\u4e2d\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u3002","title":"\u540e\u8bdd"},{"location":"new/13%E3%80%81%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/","text":"\u8fdb\u7a0b\u548c\u7ebf\u7a0b \u4eca\u5929\u6211\u4eec\u4f7f\u7528\u7684\u8ba1\u7b97\u673a\u65e9\u5df2\u8fdb\u5165\u591aCPU\u6216\u591a\u6838\u65f6\u4ee3\uff0c\u800c\u6211\u4eec\u4f7f\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\u90fd\u662f\u652f\u6301\u201c\u591a\u4efb\u52a1\u201d\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u8fd9\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u7a0b\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4e00\u4e2a\u7a0b\u5e8f\u5206\u89e3\u4e3a\u82e5\u5e72\u4e2a\u76f8\u5bf9\u72ec\u7acb\u7684\u5b50\u4efb\u52a1\uff0c\u8ba9\u591a\u4e2a\u5b50\u4efb\u52a1\u5e76\u53d1\u7684\u6267\u884c\uff0c\u4ece\u800c\u7f29\u77ed\u7a0b\u5e8f\u7684\u6267\u884c\u65f6\u95f4\uff0c\u540c\u65f6\u4e5f\u8ba9\u7528\u6237\u83b7\u5f97\u66f4\u597d\u7684\u4f53\u9a8c\u3002\u56e0\u6b64\u5728\u5f53\u4e0b\u4e0d\u7ba1\u662f\u7528\u4ec0\u4e48\u7f16\u7a0b\u8bed\u8a00\u8fdb\u884c\u5f00\u53d1\uff0c\u5b9e\u73b0\u8ba9\u7a0b\u5e8f\u540c\u65f6\u6267\u884c\u591a\u4e2a\u4efb\u52a1\u4e5f\u5c31\u662f\u5e38\u8bf4\u7684\u201c\u5e76\u53d1\u7f16\u7a0b\u201d\uff0c\u5e94\u8be5\u662f\u7a0b\u5e8f\u5458\u5fc5\u5907\u6280\u80fd\u4e4b\u4e00\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5148\u8ba8\u8bba\u4e24\u4e2a\u6982\u5ff5\uff0c\u4e00\u4e2a\u53eb\u8fdb\u7a0b\uff0c\u4e00\u4e2a\u53eb\u7ebf\u7a0b\u3002 \u6982\u5ff5 \u8fdb\u7a0b\u5c31\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u6267\u884c\u7684\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4ee5\u8fdb\u7a0b\u4e3a\u5355\u4f4d\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u7684\u5730\u5740\u7a7a\u95f4\u3001\u6570\u636e\u6808\u4ee5\u53ca\u5176\u4ed6\u7528\u4e8e\u8ddf\u8e2a\u8fdb\u7a0b\u6267\u884c\u7684\u8f85\u52a9\u6570\u636e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u7ba1\u7406\u6240\u6709\u8fdb\u7a0b\u7684\u6267\u884c\uff0c\u4e3a\u5b83\u4eec\u5408\u7406\u7684\u5206\u914d\u8d44\u6e90\u3002\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7fork\u6216spawn\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u65b0\u7684\u8fdb\u7a0b\u6765\u6267\u884c\u5176\u4ed6\u7684\u4efb\u52a1\uff0c\u4e0d\u8fc7\u65b0\u7684\u8fdb\u7a0b\u4e5f\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u56e0\u6b64\u5fc5\u987b\u901a\u8fc7\u8fdb\u7a0b\u95f4\u901a\u4fe1\u673a\u5236\uff08IPC\uff0cInter-Process Communication\uff09\u6765\u5b9e\u73b0\u6570\u636e\u5171\u4eab\uff0c\u5177\u4f53\u7684\u65b9\u5f0f\u5305\u62ec\u7ba1\u9053\u3001\u4fe1\u53f7\u3001\u5957\u63a5\u5b57\u3001\u5171\u4eab\u5185\u5b58\u533a\u7b49\u3002 \u4e00\u4e2a\u8fdb\u7a0b\u8fd8\u53ef\u4ee5\u62e5\u6709\u591a\u4e2a\u5e76\u53d1\u7684\u6267\u884c\u7ebf\u7d22\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u62e5\u6709\u591a\u4e2a\u53ef\u4ee5\u83b7\u5f97CPU\u8c03\u5ea6\u7684\u6267\u884c\u5355\u5143\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u7ebf\u7a0b\u3002\u7531\u4e8e\u7ebf\u7a0b\u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e0b\uff0c\u5b83\u4eec\u53ef\u4ee5\u5171\u4eab\u76f8\u540c\u7684\u4e0a\u4e0b\u6587\uff0c\u56e0\u6b64\u76f8\u5bf9\u4e8e\u8fdb\u7a0b\u800c\u8a00\uff0c\u7ebf\u7a0b\u95f4\u7684\u4fe1\u606f\u5171\u4eab\u548c\u901a\u4fe1\u66f4\u52a0\u5bb9\u6613\u3002\u5f53\u7136\u5728\u5355\u6838CPU\u7cfb\u7edf\u4e2d\uff0c\u771f\u6b63\u7684\u5e76\u53d1\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a\u5728\u67d0\u4e2a\u65f6\u523b\u80fd\u591f\u83b7\u5f97CPU\u7684\u53ea\u6709\u552f\u4e00\u7684\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u4e86CPU\u7684\u6267\u884c\u65f6\u95f4\u3002\u4f7f\u7528\u591a\u7ebf\u7a0b\u5b9e\u73b0\u5e76\u53d1\u7f16\u7a0b\u4e3a\u7a0b\u5e8f\u5e26\u6765\u7684\u597d\u5904\u662f\u4e0d\u8a00\u800c\u55bb\u7684\uff0c\u6700\u4e3b\u8981\u7684\u4f53\u73b0\u5728\u63d0\u5347\u7a0b\u5e8f\u7684\u6027\u80fd\u548c\u6539\u5584\u7528\u6237\u4f53\u9a8c\uff0c\u4eca\u5929\u6211\u4eec\u4f7f\u7528\u7684\u8f6f\u4ef6\u51e0\u4e4e\u90fd\u7528\u5230\u4e86\u591a\u7ebf\u7a0b\u6280\u672f\uff0c\u8fd9\u4e00\u70b9\u53ef\u4ee5\u5229\u7528\u7cfb\u7edf\u81ea\u5e26\u7684\u8fdb\u7a0b\u76d1\u63a7\u5de5\u5177\uff08\u5982macOS\u4e2d\u7684\u201c\u6d3b\u52a8\u76d1\u89c6\u5668\u201d\u3001Windows\u4e2d\u7684\u201c\u4efb\u52a1\u7ba1\u7406\u5668\u201d\uff09\u6765\u8bc1\u5b9e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u5f53\u7136\u591a\u7ebf\u7a0b\u4e5f\u5e76\u4e0d\u662f\u6ca1\u6709\u574f\u5904\uff0c\u7ad9\u5728\u5176\u4ed6\u8fdb\u7a0b\u7684\u89d2\u5ea6\uff0c\u591a\u7ebf\u7a0b\u7684\u7a0b\u5e8f\u5bf9\u5176\u4ed6\u7a0b\u5e8f\u5e76\u4e0d\u53cb\u597d\uff0c\u56e0\u4e3a\u5b83\u5360\u7528\u4e86\u66f4\u591a\u7684CPU\u6267\u884c\u65f6\u95f4\uff0c\u5bfc\u81f4\u5176\u4ed6\u7a0b\u5e8f\u65e0\u6cd5\u83b7\u5f97\u8db3\u591f\u7684CPU\u6267\u884c\u65f6\u95f4\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u7ad9\u5728\u5f00\u53d1\u8005\u7684\u89d2\u5ea6\uff0c\u7f16\u5199\u548c\u8c03\u8bd5\u591a\u7ebf\u7a0b\u7684\u7a0b\u5e8f\u90fd\u5bf9\u5f00\u53d1\u8005\u6709\u8f83\u9ad8\u7684\u8981\u6c42\uff0c\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\u66f4\u52a0\u56f0\u96be\u3002 Python\u65e2\u652f\u6301\u591a\u8fdb\u7a0b\u53c8\u652f\u6301\u591a\u7ebf\u7a0b\uff0c\u56e0\u6b64\u4f7f\u7528Python\u5b9e\u73b0\u5e76\u53d1\u7f16\u7a0b\u4e3b\u8981\u67093\u79cd\u65b9\u5f0f\uff1a\u591a\u8fdb\u7a0b\u3001\u591a\u7ebf\u7a0b\u3001\u591a\u8fdb\u7a0b+\u591a\u7ebf\u7a0b\u3002 Python\u4e2d\u7684\u591a\u8fdb\u7a0b Unix\u548cLinux\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u63d0\u4f9b\u4e86 fork() \u7cfb\u7edf\u8c03\u7528\u6765\u521b\u5efa\u8fdb\u7a0b\uff0c\u8c03\u7528 fork() \u51fd\u6570\u7684\u662f\u7236\u8fdb\u7a0b\uff0c\u521b\u5efa\u51fa\u7684\u662f\u5b50\u8fdb\u7a0b\uff0c\u5b50\u8fdb\u7a0b\u662f\u7236\u8fdb\u7a0b\u7684\u4e00\u4e2a\u62f7\u8d1d\uff0c\u4f46\u662f\u5b50\u8fdb\u7a0b\u62e5\u6709\u81ea\u5df1\u7684PID\u3002 fork() \u51fd\u6570\u975e\u5e38\u7279\u6b8a\u5b83\u4f1a\u8fd4\u56de\u4e24\u6b21\uff0c\u7236\u8fdb\u7a0b\u4e2d\u53ef\u4ee5\u901a\u8fc7 fork() \u51fd\u6570\u7684\u8fd4\u56de\u503c\u5f97\u5230\u5b50\u8fdb\u7a0b\u7684PID\uff0c\u800c\u5b50\u8fdb\u7a0b\u4e2d\u7684\u8fd4\u56de\u503c\u6c38\u8fdc\u90fd\u662f0\u3002Python\u7684os\u6a21\u5757\u63d0\u4f9b\u4e86 fork() \u51fd\u6570\u3002\u7531\u4e8eWindows\u7cfb\u7edf\u6ca1\u6709 fork() \u8c03\u7528\uff0c\u56e0\u6b64\u8981\u5b9e\u73b0\u8de8\u5e73\u53f0\u7684\u591a\u8fdb\u7a0b\u7f16\u7a0b\uff0c\u53ef\u4ee5\u4f7f\u7528multiprocessing\u6a21\u5757\u7684 Process \u7c7b\u6765\u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u800c\u4e14\u8be5\u6a21\u5757\u8fd8\u63d0\u4f9b\u4e86\u66f4\u9ad8\u7ea7\u7684\u5c01\u88c5\uff0c\u4f8b\u5982\u6279\u91cf\u542f\u52a8\u8fdb\u7a0b\u7684\u8fdb\u7a0b\u6c60\uff08 Pool \uff09\u3001\u7528\u4e8e\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u961f\u5217\uff08 Queue \uff09\u548c\u7ba1\u9053\uff08 Pipe \uff09\u7b49\u3002 \u4e0b\u9762\u7528\u4e00\u4e2a\u4e0b\u8f7d\u6587\u4ef6\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u4f7f\u7528\u591a\u8fdb\u7a0b\u548c\u4e0d\u4f7f\u7528\u591a\u8fdb\u7a0b\u5230\u5e95\u6709\u4ec0\u4e48\u5dee\u522b\uff0c\u5148\u770b\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u3002 from random import randint from time import time, sleep def download_task(filename): print('\u5f00\u59cb\u4e0b\u8f7d%s...' % filename) time_to_download = randint(5, 10) sleep(time_to_download) print('%s\u4e0b\u8f7d\u5b8c\u6210! \u8017\u8d39\u4e86%d\u79d2' % (filename, time_to_download)) def main(): start = time() download_task('Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf') download_task('Peking Hot.avi') end = time() print('\u603b\u5171\u8017\u8d39\u4e86%.2f\u79d2.' % (end - start)) if __name__ == '__main__': main() \u4e0b\u9762\u662f\u8fd0\u884c\u7a0b\u5e8f\u5f97\u5230\u7684\u4e00\u6b21\u8fd0\u884c\u7ed3\u679c\u3002 \u5f00\u59cb\u4e0b\u8f7dPython\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf... Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf\u4e0b\u8f7d\u5b8c\u6210! \u8017\u8d39\u4e866\u79d2 \u5f00\u59cb\u4e0b\u8f7dPeking Hot.avi... Peking Hot.avi\u4e0b\u8f7d\u5b8c\u6210! \u8017\u8d39\u4e867\u79d2 \u603b\u5171\u8017\u8d39\u4e8613.01\u79d2. \u4ece\u4e0a\u9762\u7684\u4f8b\u5b50\u53ef\u4ee5\u770b\u51fa\uff0c\u5982\u679c\u7a0b\u5e8f\u4e2d\u7684\u4ee3\u7801\u53ea\u80fd\u6309\u987a\u5e8f\u4e00\u70b9\u70b9\u7684\u5f80\u4e0b\u6267\u884c\uff0c\u90a3\u4e48\u5373\u4f7f\u6267\u884c\u4e24\u4e2a\u6beb\u4e0d\u76f8\u5173\u7684\u4e0b\u8f7d\u4efb\u52a1\uff0c\u4e5f\u9700\u8981\u5148\u7b49\u5f85\u4e00\u4e2a\u6587\u4ef6\u4e0b\u8f7d\u5b8c\u6210\u540e\u624d\u80fd\u5f00\u59cb\u4e0b\u4e00\u4e2a\u4e0b\u8f7d\u4efb\u52a1\uff0c\u5f88\u663e\u7136\u8fd9\u5e76\u4e0d\u5408\u7406\u4e5f\u6ca1\u6709\u6548\u7387\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u4f7f\u7528\u591a\u8fdb\u7a0b\u7684\u65b9\u5f0f\u5c06\u4e24\u4e2a\u4e0b\u8f7d\u4efb\u52a1\u653e\u5230\u4e0d\u540c\u7684\u8fdb\u7a0b\u4e2d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 from multiprocessing import Process from os import getpid from random import randint from time import time, sleep def download_task(filename): print('\u542f\u52a8\u4e0b\u8f7d\u8fdb\u7a0b\uff0c\u8fdb\u7a0b\u53f7[%d].' % getpid()) print('\u5f00\u59cb\u4e0b\u8f7d%s...' % filename) time_to_download = randint(5, 10) sleep(time_to_download) print('%s\u4e0b\u8f7d\u5b8c\u6210! \u8017\u8d39\u4e86%d\u79d2' % (filename, time_to_download)) def main(): start = time() p1 = Process(target=download_task, args=('Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf', )) p1.start() p2 = Process(target=download_task, args=('Peking Hot.avi', )) p2.start() p1.join() p2.join() end = time() print('\u603b\u5171\u8017\u8d39\u4e86%.2f\u79d2.' % (end - start)) if __name__ == '__main__': main() \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7 Process \u7c7b\u521b\u5efa\u4e86\u8fdb\u7a0b\u5bf9\u8c61\uff0c\u901a\u8fc7 target \u53c2\u6570\u6211\u4eec\u4f20\u5165\u4e00\u4e2a\u51fd\u6570\u6765\u8868\u793a\u8fdb\u7a0b\u542f\u52a8\u540e\u8981\u6267\u884c\u7684\u4ee3\u7801\uff0c\u540e\u9762\u7684 args \u662f\u4e00\u4e2a\u5143\u7ec4\uff0c\u5b83\u4ee3\u8868\u4e86\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u53c2\u6570\u3002 Process \u5bf9\u8c61\u7684 start \u65b9\u6cd5\u7528\u6765\u542f\u52a8\u8fdb\u7a0b\uff0c\u800c join \u65b9\u6cd5\u8868\u793a\u7b49\u5f85\u8fdb\u7a0b\u6267\u884c\u7ed3\u675f\u3002\u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u660e\u663e\u53d1\u73b0\u4e24\u4e2a\u4e0b\u8f7d\u4efb\u52a1\u201c\u540c\u65f6\u201d\u542f\u52a8\u4e86\uff0c\u800c\u4e14\u7a0b\u5e8f\u7684\u6267\u884c\u65f6\u95f4\u5c06\u5927\u5927\u7f29\u77ed\uff0c\u4e0d\u518d\u662f\u4e24\u4e2a\u4efb\u52a1\u7684\u65f6\u95f4\u603b\u548c\u3002\u4e0b\u9762\u662f\u7a0b\u5e8f\u7684\u4e00\u6b21\u6267\u884c\u7ed3\u679c\u3002 \u542f\u52a8\u4e0b\u8f7d\u8fdb\u7a0b\uff0c\u8fdb\u7a0b\u53f7[1530]. \u5f00\u59cb\u4e0b\u8f7dPython\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf... \u542f\u52a8\u4e0b\u8f7d\u8fdb\u7a0b\uff0c\u8fdb\u7a0b\u53f7[1531]. \u5f00\u59cb\u4e0b\u8f7dPeking Hot.avi... Peking Hot.avi\u4e0b\u8f7d\u5b8c\u6210! \u8017\u8d39\u4e867\u79d2 Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf\u4e0b\u8f7d\u5b8c\u6210! \u8017\u8d39\u4e8610\u79d2 \u603b\u5171\u8017\u8d39\u4e8610.01\u79d2. \u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528subprocess\u6a21\u5757\u4e2d\u7684\u7c7b\u548c\u51fd\u6570\u6765\u521b\u5efa\u548c\u542f\u52a8\u5b50\u8fdb\u7a0b\uff0c\u7136\u540e\u901a\u8fc7\u7ba1\u9053\u6765\u548c\u5b50\u8fdb\u7a0b\u901a\u4fe1\uff0c\u8fd9\u4e9b\u5185\u5bb9\u6211\u4eec\u4e0d\u5728\u6b64\u8fdb\u884c\u8bb2\u89e3\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u5df1\u4e86\u89e3\u8fd9\u4e9b\u77e5\u8bc6\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u91cd\u70b9\u653e\u5728\u5982\u4f55\u5b9e\u73b0\u4e24\u4e2a\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\u3002\u6211\u4eec\u542f\u52a8\u4e24\u4e2a\u8fdb\u7a0b\uff0c\u4e00\u4e2a\u8f93\u51faPing\uff0c\u4e00\u4e2a\u8f93\u51faPong\uff0c\u4e24\u4e2a\u8fdb\u7a0b\u8f93\u51fa\u7684Ping\u548cPong\u52a0\u8d77\u6765\u4e00\u517110\u4e2a\u3002\u542c\u8d77\u6765\u5f88\u7b80\u5355\u5427\uff0c\u4f46\u662f\u5982\u679c\u8fd9\u6837\u5199\u53ef\u662f\u9519\u7684\u54e6\u3002 from multiprocessing import Process from time import sleep counter = 0 def sub_task(string): global counter while counter < 10: print(string, end='', flush=True) counter += 1 sleep(0.01) def main(): Process(target=sub_task, args=('Ping', )).start() Process(target=sub_task, args=('Pong', )).start() if __name__ == '__main__': main() \u770b\u8d77\u6765\u6ca1\u6bdb\u75c5\uff0c\u4f46\u662f\u6700\u540e\u7684\u7ed3\u679c\u662fPing\u548cPong\u5404\u8f93\u51fa\u4e8610\u4e2a\uff0cWhy\uff1f\u5f53\u6211\u4eec\u5728\u7a0b\u5e8f\u4e2d\u521b\u5efa\u8fdb\u7a0b\u7684\u65f6\u5019\uff0c\u5b50\u8fdb\u7a0b\u590d\u5236\u4e86\u7236\u8fdb\u7a0b\u53ca\u5176\u6240\u6709\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6bcf\u4e2a\u5b50\u8fdb\u7a0b\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u4e24\u4e2a\u5b50\u8fdb\u7a0b\u4e2d\u5404\u6709\u4e00\u4e2a counter \u53d8\u91cf\uff0c\u6240\u4ee5\u7ed3\u679c\u4e5f\u5c31\u53ef\u60f3\u800c\u77e5\u4e86\u3002\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u6bd4\u8f83\u7b80\u5355\u7684\u529e\u6cd5\u662f\u4f7f\u7528multiprocessing\u6a21\u5757\u4e2d\u7684 Queue \u7c7b\uff0c\u5b83\u662f\u53ef\u4ee5\u88ab\u591a\u4e2a\u8fdb\u7a0b\u5171\u4eab\u7684\u961f\u5217\uff0c\u5e95\u5c42\u662f\u901a\u8fc7\u7ba1\u9053\u548c \u4fe1\u53f7\u91cf\uff08semaphore\uff09 \u673a\u5236\u6765\u5b9e\u73b0\u7684\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u5df1\u5c1d\u8bd5\u4e00\u4e0b\u3002 Python\u4e2d\u7684\u591a\u7ebf\u7a0b \u5728Python\u65e9\u671f\u7684\u7248\u672c\u4e2d\u5c31\u5f15\u5165\u4e86thread\u6a21\u5757\uff08\u73b0\u5728\u540d\u4e3a_thread\uff09\u6765\u5b9e\u73b0\u591a\u7ebf\u7a0b\u7f16\u7a0b\uff0c\u7136\u800c\u8be5\u6a21\u5757\u8fc7\u4e8e\u5e95\u5c42\uff0c\u800c\u4e14\u5f88\u591a\u529f\u80fd\u90fd\u6ca1\u6709\u63d0\u4f9b\uff0c\u56e0\u6b64\u76ee\u524d\u7684\u591a\u7ebf\u7a0b\u5f00\u53d1\u6211\u4eec\u63a8\u8350\u4f7f\u7528threading\u6a21\u5757\uff0c\u8be5\u6a21\u5757\u5bf9\u591a\u7ebf\u7a0b\u7f16\u7a0b\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u9762\u5411\u5bf9\u8c61\u7684\u5c01\u88c5\u3002\u6211\u4eec\u628a\u521a\u624d\u4e0b\u8f7d\u6587\u4ef6\u7684\u4f8b\u5b50\u7528\u591a\u7ebf\u7a0b\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u4e00\u904d\u3002 from random import randint from threading import Thread from time import time, sleep def download(filename): print('\u5f00\u59cb\u4e0b\u8f7d%s...' % filename) time_to_download = randint(5, 10) sleep(time_to_download) print('%s\u4e0b\u8f7d\u5b8c\u6210! \u8017\u8d39\u4e86%d\u79d2' % (filename, time_to_download)) def main(): start = time() t1 = Thread(target=download, args=('Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf',)) t1.start() t2 = Thread(target=download, args=('Peking Hot.avi',)) t2.start() t1.join() t2.join() end = time() print('\u603b\u5171\u8017\u8d39\u4e86%.3f\u79d2' % (end - start)) if __name__ == '__main__': main() \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528threading\u6a21\u5757\u7684 Thread \u7c7b\u6765\u521b\u5efa\u7ebf\u7a0b\uff0c\u4f46\u662f\u6211\u4eec\u4e4b\u524d\u8bb2\u8fc7\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u6982\u5ff5\u53eb\u201c\u7ee7\u627f\u201d\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u5df2\u6709\u7684\u7c7b\u521b\u5efa\u65b0\u7c7b\uff0c\u56e0\u6b64\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7ee7\u627f Thread \u7c7b\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u81ea\u5b9a\u4e49\u7684\u7ebf\u7a0b\u7c7b\uff0c\u7136\u540e\u518d\u521b\u5efa\u7ebf\u7a0b\u5bf9\u8c61\u5e76\u542f\u52a8\u7ebf\u7a0b\u3002\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 from random import randint from threading import Thread from time import time, sleep class DownloadTask(Thread): def __init__(self, filename): super().__init__() self._filename = filename def run(self): print('\u5f00\u59cb\u4e0b\u8f7d%s...' % self._filename) time_to_download = randint(5, 10) sleep(time_to_download) print('%s\u4e0b\u8f7d\u5b8c\u6210! \u8017\u8d39\u4e86%d\u79d2' % (self._filename, time_to_download)) def main(): start = time() t1 = DownloadTask('Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf') t1.start() t2 = DownloadTask('Peking Hot.avi') t2.start() t1.join() t2.join() end = time() print('\u603b\u5171\u8017\u8d39\u4e86%.2f\u79d2.' % (end - start)) if __name__ == '__main__': main() \u56e0\u4e3a\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u5171\u4eab\u8fdb\u7a0b\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u56e0\u6b64\u8981\u5b9e\u73b0\u591a\u4e2a\u7ebf\u7a0b\u95f4\u7684\u901a\u4fe1\u76f8\u5bf9\u7b80\u5355\uff0c\u5927\u5bb6\u80fd\u60f3\u5230\u7684\u6700\u76f4\u63a5\u7684\u529e\u6cd5\u5c31\u662f\u8bbe\u7f6e\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u8fd9\u4e2a\u5168\u5c40\u53d8\u91cf\u5373\u53ef\u3002\u4f46\u662f\u5f53\u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u540c\u4e00\u4e2a\u53d8\u91cf\uff08\u6211\u4eec\u901a\u5e38\u79f0\u4e4b\u4e3a\u201c\u8d44\u6e90\u201d\uff09\u7684\u65f6\u5019\uff0c\u5f88\u6709\u53ef\u80fd\u4ea7\u751f\u4e0d\u53ef\u63a7\u7684\u7ed3\u679c\u4ece\u800c\u5bfc\u81f4\u7a0b\u5e8f\u5931\u6548\u751a\u81f3\u5d29\u6e83\u3002\u5982\u679c\u4e00\u4e2a\u8d44\u6e90\u88ab\u591a\u4e2a\u7ebf\u7a0b\u7ade\u4e89\u4f7f\u7528\uff0c\u90a3\u4e48\u6211\u4eec\u901a\u5e38\u79f0\u4e4b\u4e3a\u201c\u4e34\u754c\u8d44\u6e90\u201d\uff0c\u5bf9\u201c\u4e34\u754c\u8d44\u6e90\u201d\u7684\u8bbf\u95ee\u9700\u8981\u52a0\u4e0a\u4fdd\u62a4\uff0c\u5426\u5219\u8d44\u6e90\u4f1a\u5904\u4e8e\u201c\u6df7\u4e71\u201d\u7684\u72b6\u6001\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86100\u4e2a\u7ebf\u7a0b\u5411\u540c\u4e00\u4e2a\u94f6\u884c\u8d26\u6237\u8f6c\u8d26\uff08\u8f6c\u51651\u5143\u94b1\uff09\u7684\u573a\u666f\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u94f6\u884c\u8d26\u6237\u5c31\u662f\u4e00\u4e2a\u4e34\u754c\u8d44\u6e90\uff0c\u5728\u6ca1\u6709\u4fdd\u62a4\u7684\u60c5\u51b5\u4e0b\u6211\u4eec\u5f88\u6709\u53ef\u80fd\u4f1a\u5f97\u5230\u9519\u8bef\u7684\u7ed3\u679c\u3002 from time import sleep from threading import Thread class Account(object): def __init__(self): self._balance = 0 def deposit(self, money): # \u8ba1\u7b97\u5b58\u6b3e\u540e\u7684\u4f59\u989d new_balance = self._balance + money # \u6a21\u62df\u53d7\u7406\u5b58\u6b3e\u4e1a\u52a1\u9700\u89810.01\u79d2\u7684\u65f6\u95f4 sleep(0.01) # \u4fee\u6539\u8d26\u6237\u4f59\u989d self._balance = new_balance @property def balance(self): return self._balance class AddMoneyThread(Thread): def __init__(self, account, money): super().__init__() self._account = account self._money = money def run(self): self._account.deposit(self._money) def main(): account = Account() threads = [] # \u521b\u5efa100\u4e2a\u5b58\u6b3e\u7684\u7ebf\u7a0b\u5411\u540c\u4e00\u4e2a\u8d26\u6237\u4e2d\u5b58\u94b1 for _ in range(100): t = AddMoneyThread(account, 1) threads.append(t) t.start() # \u7b49\u6240\u6709\u5b58\u6b3e\u7684\u7ebf\u7a0b\u90fd\u6267\u884c\u5b8c\u6bd5 for t in threads: t.join() print('\u8d26\u6237\u4f59\u989d\u4e3a: \uffe5%d\u5143' % account.balance) if __name__ == '__main__': main() \u8fd0\u884c\u4e0a\u9762\u7684\u7a0b\u5e8f\uff0c\u7ed3\u679c\u8ba9\u4eba\u5927\u8dcc\u773c\u955c\uff0c100\u4e2a\u7ebf\u7a0b\u5206\u522b\u5411\u8d26\u6237\u4e2d\u8f6c\u51651\u5143\u94b1\uff0c\u7ed3\u679c\u5c45\u7136\u8fdc\u8fdc\u5c0f\u4e8e100\u5143\u3002\u4e4b\u6240\u4ee5\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u662f\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u5bf9\u94f6\u884c\u8d26\u6237\u8fd9\u4e2a\u201c\u4e34\u754c\u8d44\u6e90\u201d\u52a0\u4ee5\u4fdd\u62a4\uff0c\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u5411\u8d26\u6237\u4e2d\u5b58\u94b1\u65f6\uff0c\u4f1a\u4e00\u8d77\u6267\u884c\u5230 new_balance = self._balance + money \u8fd9\u884c\u4ee3\u7801\uff0c\u591a\u4e2a\u7ebf\u7a0b\u5f97\u5230\u7684\u8d26\u6237\u4f59\u989d\u90fd\u662f\u521d\u59cb\u72b6\u6001\u4e0b\u7684 0 \uff0c\u6240\u4ee5\u90fd\u662f 0 \u4e0a\u9762\u505a\u4e86+1\u7684\u64cd\u4f5c\uff0c\u56e0\u6b64\u5f97\u5230\u4e86\u9519\u8bef\u7684\u7ed3\u679c\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u201c\u9501\u201d\u5c31\u53ef\u4ee5\u6d3e\u4e0a\u7528\u573a\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u201c\u9501\u201d\u6765\u4fdd\u62a4\u201c\u4e34\u754c\u8d44\u6e90\u201d\uff0c\u53ea\u6709\u83b7\u5f97\u201c\u9501\u201d\u7684\u7ebf\u7a0b\u624d\u80fd\u8bbf\u95ee\u201c\u4e34\u754c\u8d44\u6e90\u201d\uff0c\u800c\u5176\u4ed6\u6ca1\u6709\u5f97\u5230\u201c\u9501\u201d\u7684\u7ebf\u7a0b\u53ea\u80fd\u88ab\u963b\u585e\u8d77\u6765\uff0c\u76f4\u5230\u83b7\u5f97\u201c\u9501\u201d\u7684\u7ebf\u7a0b\u91ca\u653e\u4e86\u201c\u9501\u201d\uff0c\u5176\u4ed6\u7ebf\u7a0b\u624d\u6709\u673a\u4f1a\u83b7\u5f97\u201c\u9501\u201d\uff0c\u8fdb\u800c\u8bbf\u95ee\u88ab\u4fdd\u62a4\u7684\u201c\u4e34\u754c\u8d44\u6e90\u201d\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u201c\u9501\u201d\u6765\u4fdd\u62a4\u5bf9\u94f6\u884c\u8d26\u6237\u7684\u64cd\u4f5c\uff0c\u4ece\u800c\u83b7\u5f97\u6b63\u786e\u7684\u7ed3\u679c\u3002 from time import sleep from threading import Thread, Lock class Account(object): def __init__(self): self._balance = 0 self._lock = Lock() def deposit(self, money): # \u5148\u83b7\u53d6\u9501\u624d\u80fd\u6267\u884c\u540e\u7eed\u7684\u4ee3\u7801 self._lock.acquire() try: new_balance = self._balance + money sleep(0.01) self._balance = new_balance finally: # \u5728finally\u4e2d\u6267\u884c\u91ca\u653e\u9501\u7684\u64cd\u4f5c\u4fdd\u8bc1\u6b63\u5e38\u5f02\u5e38\u9501\u90fd\u80fd\u91ca\u653e self._lock.release() @property def balance(self): return self._balance class AddMoneyThread(Thread): def __init__(self, account, money): super().__init__() self._account = account self._money = money def run(self): self._account.deposit(self._money) def main(): account = Account() threads = [] for _ in range(100): t = AddMoneyThread(account, 1) threads.append(t) t.start() for t in threads: t.join() print('\u8d26\u6237\u4f59\u989d\u4e3a: \uffe5%d\u5143' % account.balance) if __name__ == '__main__': main() \u6bd4\u8f83\u9057\u61be\u7684\u4e00\u4ef6\u4e8b\u60c5\u662fPython\u7684\u591a\u7ebf\u7a0b\u5e76\u4e0d\u80fd\u53d1\u6325CPU\u7684\u591a\u6838\u7279\u6027\uff0c\u8fd9\u4e00\u70b9\u53ea\u8981\u542f\u52a8\u51e0\u4e2a\u6267\u884c\u6b7b\u5faa\u73af\u7684\u7ebf\u7a0b\u5c31\u53ef\u4ee5\u5f97\u5230\u8bc1\u5b9e\u4e86\u3002\u4e4b\u6240\u4ee5\u5982\u6b64\uff0c\u662f\u56e0\u4e3aPython\u7684\u89e3\u91ca\u5668\u6709\u4e00\u4e2a\u201c\u5168\u5c40\u89e3\u91ca\u5668\u9501\u201d\uff08GIL\uff09\u7684\u4e1c\u897f\uff0c\u4efb\u4f55\u7ebf\u7a0b\u6267\u884c\u524d\u5fc5\u987b\u5148\u83b7\u5f97GIL\u9501\uff0c\u7136\u540e\u6bcf\u6267\u884c100\u6761\u5b57\u8282\u7801\uff0c\u89e3\u91ca\u5668\u5c31\u81ea\u52a8\u91ca\u653eGIL\u9501\uff0c\u8ba9\u522b\u7684\u7ebf\u7a0b\u6709\u673a\u4f1a\u6267\u884c\uff0c\u8fd9\u662f\u4e00\u4e2a\u5386\u53f2\u9057\u7559\u95ee\u9898\uff0c\u4f46\u662f\u5373\u4fbf\u5982\u6b64\uff0c\u5c31\u5982\u6211\u4eec\u4e4b\u524d\u4e3e\u7684\u4f8b\u5b50\uff0c\u4f7f\u7528\u591a\u7ebf\u7a0b\u5728\u63d0\u5347\u6267\u884c\u6548\u7387\u548c\u6539\u5584\u7528\u6237\u4f53\u9a8c\u65b9\u9762\u4ecd\u7136\u662f\u6709\u79ef\u6781\u610f\u4e49\u7684\u3002 \u591a\u8fdb\u7a0b\u8fd8\u662f\u591a\u7ebf\u7a0b \u65e0\u8bba\u662f\u591a\u8fdb\u7a0b\u8fd8\u662f\u591a\u7ebf\u7a0b\uff0c\u53ea\u8981\u6570\u91cf\u4e00\u591a\uff0c\u6548\u7387\u80af\u5b9a\u4e0a\u4e0d\u53bb\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\u6211\u4eec\u6253\u4e2a\u6bd4\u65b9\uff0c\u5047\u8bbe\u4f60\u4e0d\u5e78\u6b63\u5728\u51c6\u5907\u4e2d\u8003\uff0c\u6bcf\u5929\u665a\u4e0a\u9700\u8981\u505a\u8bed\u6587\u3001\u6570\u5b66\u3001\u82f1\u8bed\u3001\u7269\u7406\u3001\u5316\u5b66\u8fd95\u79d1\u7684\u4f5c\u4e1a\uff0c\u6bcf\u9879\u4f5c\u4e1a\u8017\u65f61\u5c0f\u65f6\u3002\u5982\u679c\u4f60\u5148\u82b11\u5c0f\u65f6\u505a\u8bed\u6587\u4f5c\u4e1a\uff0c\u505a\u5b8c\u4e86\uff0c\u518d\u82b11\u5c0f\u65f6\u505a\u6570\u5b66\u4f5c\u4e1a\uff0c\u8fd9\u6837\uff0c\u4f9d\u6b21\u5168\u90e8\u505a\u5b8c\uff0c\u4e00\u5171\u82b15\u5c0f\u65f6\uff0c\u8fd9\u79cd\u65b9\u5f0f\u79f0\u4e3a\u5355\u4efb\u52a1\u6a21\u578b\u3002\u5982\u679c\u4f60\u6253\u7b97\u5207\u6362\u5230\u591a\u4efb\u52a1\u6a21\u578b\uff0c\u53ef\u4ee5\u5148\u505a1\u5206\u949f\u8bed\u6587\uff0c\u518d\u5207\u6362\u5230\u6570\u5b66\u4f5c\u4e1a\uff0c\u505a1\u5206\u949f\uff0c\u518d\u5207\u6362\u5230\u82f1\u8bed\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u53ea\u8981\u5207\u6362\u901f\u5ea6\u8db3\u591f\u5feb\uff0c\u8fd9\u79cd\u65b9\u5f0f\u5c31\u548c\u5355\u6838CPU\u6267\u884c\u591a\u4efb\u52a1\u662f\u4e00\u6837\u7684\u4e86\uff0c\u4ee5\u65c1\u89c2\u8005\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u4f60\u5c31\u6b63\u5728\u540c\u65f6\u51995\u79d1\u4f5c\u4e1a\u3002 \u4f46\u662f\uff0c\u5207\u6362\u4f5c\u4e1a\u662f\u6709\u4ee3\u4ef7\u7684\uff0c\u6bd4\u5982\u4ece\u8bed\u6587\u5207\u5230\u6570\u5b66\uff0c\u8981\u5148\u6536\u62fe\u684c\u5b50\u4e0a\u7684\u8bed\u6587\u4e66\u672c\u3001\u94a2\u7b14\uff08\u8fd9\u53eb\u4fdd\u5b58\u73b0\u573a\uff09\uff0c\u7136\u540e\uff0c\u6253\u5f00\u6570\u5b66\u8bfe\u672c\u3001\u627e\u51fa\u5706\u89c4\u76f4\u5c3a\uff08\u8fd9\u53eb\u51c6\u5907\u65b0\u73af\u5883\uff09\uff0c\u624d\u80fd\u5f00\u59cb\u505a\u6570\u5b66\u4f5c\u4e1a\u3002\u64cd\u4f5c\u7cfb\u7edf\u5728\u5207\u6362\u8fdb\u7a0b\u6216\u8005\u7ebf\u7a0b\u65f6\u4e5f\u662f\u4e00\u6837\u7684\uff0c\u5b83\u9700\u8981\u5148\u4fdd\u5b58\u5f53\u524d\u6267\u884c\u7684\u73b0\u573a\u73af\u5883\uff08CPU\u5bc4\u5b58\u5668\u72b6\u6001\u3001\u5185\u5b58\u9875\u7b49\uff09\uff0c\u7136\u540e\uff0c\u628a\u65b0\u4efb\u52a1\u7684\u6267\u884c\u73af\u5883\u51c6\u5907\u597d\uff08\u6062\u590d\u4e0a\u6b21\u7684\u5bc4\u5b58\u5668\u72b6\u6001\uff0c\u5207\u6362\u5185\u5b58\u9875\u7b49\uff09\uff0c\u624d\u80fd\u5f00\u59cb\u6267\u884c\u3002\u8fd9\u4e2a\u5207\u6362\u8fc7\u7a0b\u867d\u7136\u5f88\u5feb\uff0c\u4f46\u662f\u4e5f\u9700\u8981\u8017\u8d39\u65f6\u95f4\u3002\u5982\u679c\u6709\u51e0\u5343\u4e2a\u4efb\u52a1\u540c\u65f6\u8fdb\u884c\uff0c\u64cd\u4f5c\u7cfb\u7edf\u53ef\u80fd\u5c31\u4e3b\u8981\u5fd9\u7740\u5207\u6362\u4efb\u52a1\uff0c\u6839\u672c\u6ca1\u6709\u591a\u5c11\u65f6\u95f4\u53bb\u6267\u884c\u4efb\u52a1\u4e86\uff0c\u8fd9\u79cd\u60c5\u51b5\u6700\u5e38\u89c1\u7684\u5c31\u662f\u786c\u76d8\u72c2\u54cd\uff0c\u70b9\u7a97\u53e3\u65e0\u53cd\u5e94\uff0c\u7cfb\u7edf\u5904\u4e8e\u5047\u6b7b\u72b6\u6001\u3002\u6240\u4ee5\uff0c\u591a\u4efb\u52a1\u4e00\u65e6\u591a\u5230\u4e00\u4e2a\u9650\u5ea6\uff0c\u53cd\u800c\u4f1a\u4f7f\u5f97\u7cfb\u7edf\u6027\u80fd\u6025\u5267\u4e0b\u964d\uff0c\u6700\u7ec8\u5bfc\u81f4\u6240\u6709\u4efb\u52a1\u90fd\u505a\u4e0d\u597d\u3002 \u662f\u5426\u91c7\u7528\u591a\u4efb\u52a1\u7684\u7b2c\u4e8c\u4e2a\u8003\u8651\u662f\u4efb\u52a1\u7684\u7c7b\u578b\uff0c\u53ef\u4ee5\u628a\u4efb\u52a1\u5206\u4e3a\u8ba1\u7b97\u5bc6\u96c6\u578b\u548cI/O\u5bc6\u96c6\u578b\u3002\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u7684\u7279\u70b9\u662f\u8981\u8fdb\u884c\u5927\u91cf\u7684\u8ba1\u7b97\uff0c\u6d88\u8017CPU\u8d44\u6e90\uff0c\u6bd4\u5982\u5bf9\u89c6\u9891\u8fdb\u884c\u7f16\u7801\u89e3\u7801\u6216\u8005\u683c\u5f0f\u8f6c\u6362\u7b49\u7b49\uff0c\u8fd9\u79cd\u4efb\u52a1\u5168\u9760CPU\u7684\u8fd0\u7b97\u80fd\u529b\uff0c\u867d\u7136\u4e5f\u53ef\u4ee5\u7528\u591a\u4efb\u52a1\u5b8c\u6210\uff0c\u4f46\u662f\u4efb\u52a1\u8d8a\u591a\uff0c\u82b1\u5728\u4efb\u52a1\u5207\u6362\u7684\u65f6\u95f4\u5c31\u8d8a\u591a\uff0cCPU\u6267\u884c\u4efb\u52a1\u7684\u6548\u7387\u5c31\u8d8a\u4f4e\u3002\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u7531\u4e8e\u4e3b\u8981\u6d88\u8017CPU\u8d44\u6e90\uff0c\u8fd9\u7c7b\u4efb\u52a1\u7528Python\u8fd9\u6837\u7684\u811a\u672c\u8bed\u8a00\u53bb\u6267\u884c\u6548\u7387\u901a\u5e38\u5f88\u4f4e\uff0c\u6700\u80fd\u80dc\u4efb\u8fd9\u7c7b\u4efb\u52a1\u7684\u662fC\u8bed\u8a00\uff0c\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u4e86Python\u4e2d\u6709\u5d4c\u5165C/C++\u4ee3\u7801\u7684\u673a\u5236\u3002 \u9664\u4e86\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u5176\u4ed6\u7684\u6d89\u53ca\u5230\u7f51\u7edc\u3001\u5b58\u50a8\u4ecb\u8d28I/O\u7684\u4efb\u52a1\u90fd\u53ef\u4ee5\u89c6\u4e3aI/O\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u8fd9\u7c7b\u4efb\u52a1\u7684\u7279\u70b9\u662fCPU\u6d88\u8017\u5f88\u5c11\uff0c\u4efb\u52a1\u7684\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u7b49\u5f85I/O\u64cd\u4f5c\u5b8c\u6210\uff08\u56e0\u4e3aI/O\u7684\u901f\u5ea6\u8fdc\u8fdc\u4f4e\u4e8eCPU\u548c\u5185\u5b58\u7684\u901f\u5ea6\uff09\u3002\u5bf9\u4e8eI/O\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u5982\u679c\u542f\u52a8\u591a\u4efb\u52a1\uff0c\u5c31\u53ef\u4ee5\u51cf\u5c11I/O\u7b49\u5f85\u65f6\u95f4\u4ece\u800c\u8ba9CPU\u9ad8\u6548\u7387\u7684\u8fd0\u8f6c\u3002\u6709\u4e00\u5927\u7c7b\u7684\u4efb\u52a1\u90fd\u5c5e\u4e8eI/O\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u8fd9\u5176\u4e2d\u5305\u62ec\u4e86\u6211\u4eec\u5f88\u5feb\u4f1a\u6d89\u53ca\u5230\u7684\u7f51\u7edc\u5e94\u7528\u548cWeb\u5e94\u7528\u3002 \u8bf4\u660e\uff1a \u4e0a\u9762\u7684\u5185\u5bb9\u548c\u4f8b\u5b50\u6765\u81ea\u4e8e \u5ed6\u96ea\u5cf0\u5b98\u65b9\u7f51\u7ad9\u7684\u300aPython\u6559\u7a0b\u300b \uff0c\u56e0\u4e3a\u5bf9\u4f5c\u8005\u6587\u4e2d\u7684\u67d0\u4e9b\u89c2\u70b9\u6301\u6709\u4e0d\u540c\u7684\u770b\u6cd5\uff0c\u5bf9\u539f\u6587\u7684\u6587\u5b57\u63cf\u8ff0\u505a\u4e86\u9002\u5f53\u7684\u8c03\u6574\u3002 \u5355\u7ebf\u7a0b+\u5f02\u6b65I/O \u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u5bf9I/O\u64cd\u4f5c\u7684\u6539\u8fdb\u4e2d\u6700\u4e3a\u91cd\u8981\u7684\u5c31\u662f\u652f\u6301\u5f02\u6b65I/O\u3002\u5982\u679c\u5145\u5206\u5229\u7528\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u5f02\u6b65I/O\u652f\u6301\uff0c\u5c31\u53ef\u4ee5\u7528\u5355\u8fdb\u7a0b\u5355\u7ebf\u7a0b\u6a21\u578b\u6765\u6267\u884c\u591a\u4efb\u52a1\uff0c\u8fd9\u79cd\u5168\u65b0\u7684\u6a21\u578b\u79f0\u4e3a\u4e8b\u4ef6\u9a71\u52a8\u6a21\u578b\u3002Nginx\u5c31\u662f\u652f\u6301\u5f02\u6b65I/O\u7684Web\u670d\u52a1\u5668\uff0c\u5b83\u5728\u5355\u6838CPU\u4e0a\u91c7\u7528\u5355\u8fdb\u7a0b\u6a21\u578b\u5c31\u53ef\u4ee5\u9ad8\u6548\u5730\u652f\u6301\u591a\u4efb\u52a1\u3002\u5728\u591a\u6838CPU\u4e0a\uff0c\u53ef\u4ee5\u8fd0\u884c\u591a\u4e2a\u8fdb\u7a0b\uff08\u6570\u91cf\u4e0eCPU\u6838\u5fc3\u6570\u76f8\u540c\uff09\uff0c\u5145\u5206\u5229\u7528\u591a\u6838CPU\u3002\u7528Node.js\u5f00\u53d1\u7684\u670d\u52a1\u5668\u7aef\u7a0b\u5e8f\u4e5f\u4f7f\u7528\u4e86\u8fd9\u79cd\u5de5\u4f5c\u6a21\u5f0f\uff0c\u8fd9\u4e5f\u662f\u5f53\u4e0b\u5b9e\u73b0\u591a\u4efb\u52a1\u7f16\u7a0b\u7684\u4e00\u79cd\u8d8b\u52bf\u3002 \u5728Python\u8bed\u8a00\u4e2d\uff0c\u5355\u7ebf\u7a0b+\u5f02\u6b65I/O\u7684\u7f16\u7a0b\u6a21\u578b\u79f0\u4e3a\u534f\u7a0b\uff0c\u6709\u4e86\u534f\u7a0b\u7684\u652f\u6301\uff0c\u5c31\u53ef\u4ee5\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\u7f16\u5199\u9ad8\u6548\u7684\u591a\u4efb\u52a1\u7a0b\u5e8f\u3002\u534f\u7a0b\u6700\u5927\u7684\u4f18\u52bf\u5c31\u662f\u6781\u9ad8\u7684\u6267\u884c\u6548\u7387\uff0c\u56e0\u4e3a\u5b50\u7a0b\u5e8f\u5207\u6362\u4e0d\u662f\u7ebf\u7a0b\u5207\u6362\uff0c\u800c\u662f\u7531\u7a0b\u5e8f\u81ea\u8eab\u63a7\u5236\uff0c\u56e0\u6b64\uff0c\u6ca1\u6709\u7ebf\u7a0b\u5207\u6362\u7684\u5f00\u9500\u3002\u534f\u7a0b\u7684\u7b2c\u4e8c\u4e2a\u4f18\u52bf\u5c31\u662f\u4e0d\u9700\u8981\u591a\u7ebf\u7a0b\u7684\u9501\u673a\u5236\uff0c\u56e0\u4e3a\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u4e5f\u4e0d\u5b58\u5728\u540c\u65f6\u5199\u53d8\u91cf\u51b2\u7a81\uff0c\u5728\u534f\u7a0b\u4e2d\u63a7\u5236\u5171\u4eab\u8d44\u6e90\u4e0d\u7528\u52a0\u9501\uff0c\u53ea\u9700\u8981\u5224\u65ad\u72b6\u6001\u5c31\u597d\u4e86\uff0c\u6240\u4ee5\u6267\u884c\u6548\u7387\u6bd4\u591a\u7ebf\u7a0b\u9ad8\u5f88\u591a\u3002\u5982\u679c\u60f3\u8981\u5145\u5206\u5229\u7528CPU\u7684\u591a\u6838\u7279\u6027\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u591a\u8fdb\u7a0b+\u534f\u7a0b\uff0c\u65e2\u5145\u5206\u5229\u7528\u591a\u6838\uff0c\u53c8\u5145\u5206\u53d1\u6325\u534f\u7a0b\u7684\u9ad8\u6548\u7387\uff0c\u53ef\u83b7\u5f97\u6781\u9ad8\u7684\u6027\u80fd\u3002\u5173\u4e8e\u8fd9\u65b9\u9762\u7684\u5185\u5bb9\uff0c\u6211\u7a0d\u540e\u4f1a\u505a\u4e00\u4e2a\u4e13\u9898\u6765\u8fdb\u884c\u8bb2\u89e3\u3002 \u5e94\u7528\u6848\u4f8b \u4f8b\u5b501\uff1a\u5c06\u8017\u65f6\u95f4\u7684\u4efb\u52a1\u653e\u5230\u7ebf\u7a0b\u4e2d\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u7528\u6237\u4f53\u9a8c\u3002 \u5982\u4e0b\u6240\u793a\u7684\u754c\u9762\u4e2d\uff0c\u6709\u201c\u4e0b\u8f7d\u201d\u548c\u201c\u5173\u4e8e\u201d\u4e24\u4e2a\u6309\u94ae\uff0c\u7528\u4f11\u7720\u7684\u65b9\u5f0f\u6a21\u62df\u70b9\u51fb\u201c\u4e0b\u8f7d\u201d\u6309\u94ae\u4f1a\u8054\u7f51\u4e0b\u8f7d\u6587\u4ef6\u9700\u8981\u8017\u8d3910\u79d2\u7684\u65f6\u95f4\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u201c\u591a\u7ebf\u7a0b\u201d\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u5f53\u70b9\u51fb\u201c\u4e0b\u8f7d\u201d\u6309\u94ae\u540e\u6574\u4e2a\u7a0b\u5e8f\u7684\u5176\u4ed6\u90e8\u5206\u90fd\u88ab\u8fd9\u4e2a\u8017\u65f6\u95f4\u7684\u4efb\u52a1\u963b\u585e\u800c\u65e0\u6cd5\u6267\u884c\u4e86\uff0c\u8fd9\u663e\u7136\u662f\u975e\u5e38\u7cdf\u7cd5\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import time import tkinter import tkinter.messagebox def download(): # \u6a21\u62df\u4e0b\u8f7d\u4efb\u52a1\u9700\u8981\u82b1\u8d3910\u79d2\u949f\u65f6\u95f4 time.sleep(10) tkinter.messagebox.showinfo('\u63d0\u793a', '\u4e0b\u8f7d\u5b8c\u6210!') def show_about(): tkinter.messagebox.showinfo('\u5173\u4e8e', '\u4f5c\u8005: \u9a86\u660a(v1.0)') def main(): top = tkinter.Tk() top.title('\u5355\u7ebf\u7a0b') top.geometry('200x150') top.wm_attributes('-topmost', True) panel = tkinter.Frame(top) button1 = tkinter.Button(panel, text='\u4e0b\u8f7d', command=download) button1.pack(side='left') button2 = tkinter.Button(panel, text='\u5173\u4e8e', command=show_about) button2.pack(side='right') panel.pack(side='bottom') tkinter.mainloop() if __name__ == '__main__': main() \u5982\u679c\u4f7f\u7528\u591a\u7ebf\u7a0b\u5c06\u8017\u65f6\u95f4\u7684\u4efb\u52a1\u653e\u5230\u4e00\u4e2a\u72ec\u7acb\u7684\u7ebf\u7a0b\u4e2d\u6267\u884c\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u56e0\u4e3a\u6267\u884c\u8017\u65f6\u95f4\u7684\u4efb\u52a1\u800c\u963b\u585e\u4e86\u4e3b\u7ebf\u7a0b\uff0c\u4fee\u6539\u540e\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import time import tkinter import tkinter.messagebox from threading import Thread def main(): class DownloadTaskHandler(Thread): def run(self): time.sleep(10) tkinter.messagebox.showinfo('\u63d0\u793a', '\u4e0b\u8f7d\u5b8c\u6210!') # \u542f\u7528\u4e0b\u8f7d\u6309\u94ae button1.config(state=tkinter.NORMAL) def download(): # \u7981\u7528\u4e0b\u8f7d\u6309\u94ae button1.config(state=tkinter.DISABLED) # \u901a\u8fc7daemon\u53c2\u6570\u5c06\u7ebf\u7a0b\u8bbe\u7f6e\u4e3a\u5b88\u62a4\u7ebf\u7a0b(\u4e3b\u7a0b\u5e8f\u9000\u51fa\u5c31\u4e0d\u518d\u4fdd\u7559\u6267\u884c) # \u5728\u7ebf\u7a0b\u4e2d\u5904\u7406\u8017\u65f6\u95f4\u7684\u4e0b\u8f7d\u4efb\u52a1 DownloadTaskHandler(daemon=True).start() def show_about(): tkinter.messagebox.showinfo('\u5173\u4e8e', '\u4f5c\u8005: \u9a86\u660a(v1.0)') top = tkinter.Tk() top.title('\u5355\u7ebf\u7a0b') top.geometry('200x150') top.wm_attributes('-topmost', 1) panel = tkinter.Frame(top) button1 = tkinter.Button(panel, text='\u4e0b\u8f7d', command=download) button1.pack(side='left') button2 = tkinter.Button(panel, text='\u5173\u4e8e', command=show_about) button2.pack(side='right') panel.pack(side='bottom') tkinter.mainloop() if __name__ == '__main__': main() \u4f8b\u5b502\uff1a\u4f7f\u7528\u591a\u8fdb\u7a0b\u5bf9\u590d\u6742\u4efb\u52a1\u8fdb\u884c\u201c\u5206\u800c\u6cbb\u4e4b\u201d\u3002 \u6211\u4eec\u6765\u5b8c\u62101~100000000\u6c42\u548c\u7684\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u8fd9\u4e2a\u95ee\u9898\u672c\u8eab\u975e\u5e38\u7b80\u5355\uff0c\u6709\u70b9\u5faa\u73af\u7684\u77e5\u8bc6\u5c31\u80fd\u89e3\u51b3\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 from time import time def main(): total = 0 number_list = [x for x in range(1, 100000001)] start = time() for number in number_list: total += number print(total) end = time() print('Execution time: %.3fs' % (end - start)) if __name__ == '__main__': main() \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u6545\u610f\u5148\u53bb\u521b\u5efa\u4e86\u4e00\u4e2a\u5217\u8868\u5bb9\u5668\u7136\u540e\u586b\u5165\u4e86100000000\u4e2a\u6570\uff0c\u8fd9\u4e00\u6b65\u5176\u5b9e\u662f\u6bd4\u8f83\u8017\u65f6\u95f4\u7684\uff0c\u6240\u4ee5\u4e3a\u4e86\u516c\u5e73\u8d77\u89c1\uff0c\u5f53\u6211\u4eec\u5c06\u8fd9\u4e2a\u4efb\u52a1\u5206\u89e3\u52308\u4e2a\u8fdb\u7a0b\u4e2d\u53bb\u6267\u884c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u6682\u65f6\u4e5f\u4e0d\u8003\u8651\u5217\u8868\u5207\u7247\u64cd\u4f5c\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u53ea\u662f\u628a\u505a\u8fd0\u7b97\u548c\u5408\u5e76\u8fd0\u7b97\u7ed3\u679c\u7684\u65f6\u95f4\u7edf\u8ba1\u51fa\u6765\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 from multiprocessing import Process, Queue from random import randint from time import time def task_handler(curr_list, result_queue): total = 0 for number in curr_list: total += number result_queue.put(total) def main(): processes = [] number_list = [x for x in range(1, 100000001)] result_queue = Queue() index = 0 # \u542f\u52a88\u4e2a\u8fdb\u7a0b\u5c06\u6570\u636e\u5207\u7247\u540e\u8fdb\u884c\u8fd0\u7b97 for _ in range(8): p = Process(target=task_handler, args=(number_list[index:index + 12500000], result_queue)) index += 12500000 processes.append(p) p.start() # \u5f00\u59cb\u8bb0\u5f55\u6240\u6709\u8fdb\u7a0b\u6267\u884c\u5b8c\u6210\u82b1\u8d39\u7684\u65f6\u95f4 start = time() for p in processes: p.join() # \u5408\u5e76\u6267\u884c\u7ed3\u679c total = 0 while not result_queue.empty(): total += result_queue.get() print(total) end = time() print('Execution time: ', (end - start), 's', sep='') if __name__ == '__main__': main() \u6bd4\u8f83\u4e24\u6bb5\u4ee3\u7801\u7684\u6267\u884c\u7ed3\u679c\uff08\u5728\u6211\u76ee\u524d\u4f7f\u7528\u7684MacBook\u4e0a\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u9700\u8981\u5927\u69826\u79d2\u5de6\u53f3\u7684\u65f6\u95f4\uff0c\u800c\u4e0b\u9762\u7684\u4ee3\u7801\u53ea\u9700\u8981\u4e0d\u52301\u79d2\u7684\u65f6\u95f4\uff0c\u518d\u5f3a\u8c03\u4e00\u6b21\u6211\u4eec\u53ea\u662f\u6bd4\u8f83\u4e86\u8fd0\u7b97\u7684\u65f6\u95f4\uff0c\u4e0d\u8003\u8651\u5217\u8868\u521b\u5efa\u53ca\u5207\u7247\u64cd\u4f5c\u82b1\u8d39\u7684\u65f6\u95f4\uff09\uff0c\u4f7f\u7528\u591a\u8fdb\u7a0b\u540e\u7531\u4e8e\u83b7\u5f97\u4e86\u66f4\u591a\u7684CPU\u6267\u884c\u65f6\u95f4\u4ee5\u53ca\u66f4\u597d\u7684\u5229\u7528\u4e86CPU\u7684\u591a\u6838\u7279\u6027\uff0c\u660e\u663e\u7684\u51cf\u5c11\u4e86\u7a0b\u5e8f\u7684\u6267\u884c\u65f6\u95f4\uff0c\u800c\u4e14\u8ba1\u7b97\u91cf\u8d8a\u5927\u6548\u679c\u8d8a\u660e\u663e\u3002\u5f53\u7136\uff0c\u5982\u679c\u613f\u610f\u8fd8\u53ef\u4ee5\u5c06\u591a\u4e2a\u8fdb\u7a0b\u90e8\u7f72\u5728\u4e0d\u540c\u7684\u8ba1\u7b97\u673a\u4e0a\uff0c\u505a\u6210\u5206\u5e03\u5f0f\u8fdb\u7a0b\uff0c\u5177\u4f53\u7684\u505a\u6cd5\u5c31\u662f\u901a\u8fc7multiprocessing.managers\u6a21\u5757\u4e2d\u63d0\u4f9b\u7684\u7ba1\u7406\u5668\u5c06 Queue \u5bf9\u8c61\u901a\u8fc7\u7f51\u7edc\u5171\u4eab\u51fa\u6765\uff08\u6ce8\u518c\u5230\u7f51\u7edc\u4e0a\u8ba9\u5176\u4ed6\u8ba1\u7b97\u673a\u53ef\u4ee5\u8bbf\u95ee\uff09\uff0c\u8fd9\u90e8\u5206\u5185\u5bb9\u4e5f\u7559\u5230\u722c\u866b\u7684\u4e13\u9898\u518d\u8fdb\u884c\u8bb2\u89e3\u3002","title":"\u7b2c\u5341\u4e09\u5929"},{"location":"new/13%E3%80%81%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_1","text":"\u4eca\u5929\u6211\u4eec\u4f7f\u7528\u7684\u8ba1\u7b97\u673a\u65e9\u5df2\u8fdb\u5165\u591aCPU\u6216\u591a\u6838\u65f6\u4ee3\uff0c\u800c\u6211\u4eec\u4f7f\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\u90fd\u662f\u652f\u6301\u201c\u591a\u4efb\u52a1\u201d\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u8fd9\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u7a0b\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4e00\u4e2a\u7a0b\u5e8f\u5206\u89e3\u4e3a\u82e5\u5e72\u4e2a\u76f8\u5bf9\u72ec\u7acb\u7684\u5b50\u4efb\u52a1\uff0c\u8ba9\u591a\u4e2a\u5b50\u4efb\u52a1\u5e76\u53d1\u7684\u6267\u884c\uff0c\u4ece\u800c\u7f29\u77ed\u7a0b\u5e8f\u7684\u6267\u884c\u65f6\u95f4\uff0c\u540c\u65f6\u4e5f\u8ba9\u7528\u6237\u83b7\u5f97\u66f4\u597d\u7684\u4f53\u9a8c\u3002\u56e0\u6b64\u5728\u5f53\u4e0b\u4e0d\u7ba1\u662f\u7528\u4ec0\u4e48\u7f16\u7a0b\u8bed\u8a00\u8fdb\u884c\u5f00\u53d1\uff0c\u5b9e\u73b0\u8ba9\u7a0b\u5e8f\u540c\u65f6\u6267\u884c\u591a\u4e2a\u4efb\u52a1\u4e5f\u5c31\u662f\u5e38\u8bf4\u7684\u201c\u5e76\u53d1\u7f16\u7a0b\u201d\uff0c\u5e94\u8be5\u662f\u7a0b\u5e8f\u5458\u5fc5\u5907\u6280\u80fd\u4e4b\u4e00\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5148\u8ba8\u8bba\u4e24\u4e2a\u6982\u5ff5\uff0c\u4e00\u4e2a\u53eb\u8fdb\u7a0b\uff0c\u4e00\u4e2a\u53eb\u7ebf\u7a0b\u3002","title":"\u8fdb\u7a0b\u548c\u7ebf\u7a0b"},{"location":"new/13%E3%80%81%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_2","text":"\u8fdb\u7a0b\u5c31\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u6267\u884c\u7684\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4ee5\u8fdb\u7a0b\u4e3a\u5355\u4f4d\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u7684\u5730\u5740\u7a7a\u95f4\u3001\u6570\u636e\u6808\u4ee5\u53ca\u5176\u4ed6\u7528\u4e8e\u8ddf\u8e2a\u8fdb\u7a0b\u6267\u884c\u7684\u8f85\u52a9\u6570\u636e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u7ba1\u7406\u6240\u6709\u8fdb\u7a0b\u7684\u6267\u884c\uff0c\u4e3a\u5b83\u4eec\u5408\u7406\u7684\u5206\u914d\u8d44\u6e90\u3002\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7fork\u6216spawn\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u65b0\u7684\u8fdb\u7a0b\u6765\u6267\u884c\u5176\u4ed6\u7684\u4efb\u52a1\uff0c\u4e0d\u8fc7\u65b0\u7684\u8fdb\u7a0b\u4e5f\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u56e0\u6b64\u5fc5\u987b\u901a\u8fc7\u8fdb\u7a0b\u95f4\u901a\u4fe1\u673a\u5236\uff08IPC\uff0cInter-Process Communication\uff09\u6765\u5b9e\u73b0\u6570\u636e\u5171\u4eab\uff0c\u5177\u4f53\u7684\u65b9\u5f0f\u5305\u62ec\u7ba1\u9053\u3001\u4fe1\u53f7\u3001\u5957\u63a5\u5b57\u3001\u5171\u4eab\u5185\u5b58\u533a\u7b49\u3002 \u4e00\u4e2a\u8fdb\u7a0b\u8fd8\u53ef\u4ee5\u62e5\u6709\u591a\u4e2a\u5e76\u53d1\u7684\u6267\u884c\u7ebf\u7d22\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u62e5\u6709\u591a\u4e2a\u53ef\u4ee5\u83b7\u5f97CPU\u8c03\u5ea6\u7684\u6267\u884c\u5355\u5143\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u7ebf\u7a0b\u3002\u7531\u4e8e\u7ebf\u7a0b\u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e0b\uff0c\u5b83\u4eec\u53ef\u4ee5\u5171\u4eab\u76f8\u540c\u7684\u4e0a\u4e0b\u6587\uff0c\u56e0\u6b64\u76f8\u5bf9\u4e8e\u8fdb\u7a0b\u800c\u8a00\uff0c\u7ebf\u7a0b\u95f4\u7684\u4fe1\u606f\u5171\u4eab\u548c\u901a\u4fe1\u66f4\u52a0\u5bb9\u6613\u3002\u5f53\u7136\u5728\u5355\u6838CPU\u7cfb\u7edf\u4e2d\uff0c\u771f\u6b63\u7684\u5e76\u53d1\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a\u5728\u67d0\u4e2a\u65f6\u523b\u80fd\u591f\u83b7\u5f97CPU\u7684\u53ea\u6709\u552f\u4e00\u7684\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u4e86CPU\u7684\u6267\u884c\u65f6\u95f4\u3002\u4f7f\u7528\u591a\u7ebf\u7a0b\u5b9e\u73b0\u5e76\u53d1\u7f16\u7a0b\u4e3a\u7a0b\u5e8f\u5e26\u6765\u7684\u597d\u5904\u662f\u4e0d\u8a00\u800c\u55bb\u7684\uff0c\u6700\u4e3b\u8981\u7684\u4f53\u73b0\u5728\u63d0\u5347\u7a0b\u5e8f\u7684\u6027\u80fd\u548c\u6539\u5584\u7528\u6237\u4f53\u9a8c\uff0c\u4eca\u5929\u6211\u4eec\u4f7f\u7528\u7684\u8f6f\u4ef6\u51e0\u4e4e\u90fd\u7528\u5230\u4e86\u591a\u7ebf\u7a0b\u6280\u672f\uff0c\u8fd9\u4e00\u70b9\u53ef\u4ee5\u5229\u7528\u7cfb\u7edf\u81ea\u5e26\u7684\u8fdb\u7a0b\u76d1\u63a7\u5de5\u5177\uff08\u5982macOS\u4e2d\u7684\u201c\u6d3b\u52a8\u76d1\u89c6\u5668\u201d\u3001Windows\u4e2d\u7684\u201c\u4efb\u52a1\u7ba1\u7406\u5668\u201d\uff09\u6765\u8bc1\u5b9e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u5f53\u7136\u591a\u7ebf\u7a0b\u4e5f\u5e76\u4e0d\u662f\u6ca1\u6709\u574f\u5904\uff0c\u7ad9\u5728\u5176\u4ed6\u8fdb\u7a0b\u7684\u89d2\u5ea6\uff0c\u591a\u7ebf\u7a0b\u7684\u7a0b\u5e8f\u5bf9\u5176\u4ed6\u7a0b\u5e8f\u5e76\u4e0d\u53cb\u597d\uff0c\u56e0\u4e3a\u5b83\u5360\u7528\u4e86\u66f4\u591a\u7684CPU\u6267\u884c\u65f6\u95f4\uff0c\u5bfc\u81f4\u5176\u4ed6\u7a0b\u5e8f\u65e0\u6cd5\u83b7\u5f97\u8db3\u591f\u7684CPU\u6267\u884c\u65f6\u95f4\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u7ad9\u5728\u5f00\u53d1\u8005\u7684\u89d2\u5ea6\uff0c\u7f16\u5199\u548c\u8c03\u8bd5\u591a\u7ebf\u7a0b\u7684\u7a0b\u5e8f\u90fd\u5bf9\u5f00\u53d1\u8005\u6709\u8f83\u9ad8\u7684\u8981\u6c42\uff0c\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\u66f4\u52a0\u56f0\u96be\u3002 Python\u65e2\u652f\u6301\u591a\u8fdb\u7a0b\u53c8\u652f\u6301\u591a\u7ebf\u7a0b\uff0c\u56e0\u6b64\u4f7f\u7528Python\u5b9e\u73b0\u5e76\u53d1\u7f16\u7a0b\u4e3b\u8981\u67093\u79cd\u65b9\u5f0f\uff1a\u591a\u8fdb\u7a0b\u3001\u591a\u7ebf\u7a0b\u3001\u591a\u8fdb\u7a0b+\u591a\u7ebf\u7a0b\u3002","title":"\u6982\u5ff5"},{"location":"new/13%E3%80%81%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#python","text":"Unix\u548cLinux\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u63d0\u4f9b\u4e86 fork() \u7cfb\u7edf\u8c03\u7528\u6765\u521b\u5efa\u8fdb\u7a0b\uff0c\u8c03\u7528 fork() \u51fd\u6570\u7684\u662f\u7236\u8fdb\u7a0b\uff0c\u521b\u5efa\u51fa\u7684\u662f\u5b50\u8fdb\u7a0b\uff0c\u5b50\u8fdb\u7a0b\u662f\u7236\u8fdb\u7a0b\u7684\u4e00\u4e2a\u62f7\u8d1d\uff0c\u4f46\u662f\u5b50\u8fdb\u7a0b\u62e5\u6709\u81ea\u5df1\u7684PID\u3002 fork() \u51fd\u6570\u975e\u5e38\u7279\u6b8a\u5b83\u4f1a\u8fd4\u56de\u4e24\u6b21\uff0c\u7236\u8fdb\u7a0b\u4e2d\u53ef\u4ee5\u901a\u8fc7 fork() \u51fd\u6570\u7684\u8fd4\u56de\u503c\u5f97\u5230\u5b50\u8fdb\u7a0b\u7684PID\uff0c\u800c\u5b50\u8fdb\u7a0b\u4e2d\u7684\u8fd4\u56de\u503c\u6c38\u8fdc\u90fd\u662f0\u3002Python\u7684os\u6a21\u5757\u63d0\u4f9b\u4e86 fork() \u51fd\u6570\u3002\u7531\u4e8eWindows\u7cfb\u7edf\u6ca1\u6709 fork() \u8c03\u7528\uff0c\u56e0\u6b64\u8981\u5b9e\u73b0\u8de8\u5e73\u53f0\u7684\u591a\u8fdb\u7a0b\u7f16\u7a0b\uff0c\u53ef\u4ee5\u4f7f\u7528multiprocessing\u6a21\u5757\u7684 Process \u7c7b\u6765\u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u800c\u4e14\u8be5\u6a21\u5757\u8fd8\u63d0\u4f9b\u4e86\u66f4\u9ad8\u7ea7\u7684\u5c01\u88c5\uff0c\u4f8b\u5982\u6279\u91cf\u542f\u52a8\u8fdb\u7a0b\u7684\u8fdb\u7a0b\u6c60\uff08 Pool \uff09\u3001\u7528\u4e8e\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u961f\u5217\uff08 Queue \uff09\u548c\u7ba1\u9053\uff08 Pipe \uff09\u7b49\u3002 \u4e0b\u9762\u7528\u4e00\u4e2a\u4e0b\u8f7d\u6587\u4ef6\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u4f7f\u7528\u591a\u8fdb\u7a0b\u548c\u4e0d\u4f7f\u7528\u591a\u8fdb\u7a0b\u5230\u5e95\u6709\u4ec0\u4e48\u5dee\u522b\uff0c\u5148\u770b\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u3002 from random import randint from time import time, sleep def download_task(filename): print('\u5f00\u59cb\u4e0b\u8f7d%s...' % filename) time_to_download = randint(5, 10) sleep(time_to_download) print('%s\u4e0b\u8f7d\u5b8c\u6210! \u8017\u8d39\u4e86%d\u79d2' % (filename, time_to_download)) def main(): start = time() download_task('Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf') download_task('Peking Hot.avi') end = time() print('\u603b\u5171\u8017\u8d39\u4e86%.2f\u79d2.' % (end - start)) if __name__ == '__main__': main() \u4e0b\u9762\u662f\u8fd0\u884c\u7a0b\u5e8f\u5f97\u5230\u7684\u4e00\u6b21\u8fd0\u884c\u7ed3\u679c\u3002 \u5f00\u59cb\u4e0b\u8f7dPython\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf... Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf\u4e0b\u8f7d\u5b8c\u6210! \u8017\u8d39\u4e866\u79d2 \u5f00\u59cb\u4e0b\u8f7dPeking Hot.avi... Peking Hot.avi\u4e0b\u8f7d\u5b8c\u6210! \u8017\u8d39\u4e867\u79d2 \u603b\u5171\u8017\u8d39\u4e8613.01\u79d2. \u4ece\u4e0a\u9762\u7684\u4f8b\u5b50\u53ef\u4ee5\u770b\u51fa\uff0c\u5982\u679c\u7a0b\u5e8f\u4e2d\u7684\u4ee3\u7801\u53ea\u80fd\u6309\u987a\u5e8f\u4e00\u70b9\u70b9\u7684\u5f80\u4e0b\u6267\u884c\uff0c\u90a3\u4e48\u5373\u4f7f\u6267\u884c\u4e24\u4e2a\u6beb\u4e0d\u76f8\u5173\u7684\u4e0b\u8f7d\u4efb\u52a1\uff0c\u4e5f\u9700\u8981\u5148\u7b49\u5f85\u4e00\u4e2a\u6587\u4ef6\u4e0b\u8f7d\u5b8c\u6210\u540e\u624d\u80fd\u5f00\u59cb\u4e0b\u4e00\u4e2a\u4e0b\u8f7d\u4efb\u52a1\uff0c\u5f88\u663e\u7136\u8fd9\u5e76\u4e0d\u5408\u7406\u4e5f\u6ca1\u6709\u6548\u7387\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u4f7f\u7528\u591a\u8fdb\u7a0b\u7684\u65b9\u5f0f\u5c06\u4e24\u4e2a\u4e0b\u8f7d\u4efb\u52a1\u653e\u5230\u4e0d\u540c\u7684\u8fdb\u7a0b\u4e2d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 from multiprocessing import Process from os import getpid from random import randint from time import time, sleep def download_task(filename): print('\u542f\u52a8\u4e0b\u8f7d\u8fdb\u7a0b\uff0c\u8fdb\u7a0b\u53f7[%d].' % getpid()) print('\u5f00\u59cb\u4e0b\u8f7d%s...' % filename) time_to_download = randint(5, 10) sleep(time_to_download) print('%s\u4e0b\u8f7d\u5b8c\u6210! \u8017\u8d39\u4e86%d\u79d2' % (filename, time_to_download)) def main(): start = time() p1 = Process(target=download_task, args=('Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf', )) p1.start() p2 = Process(target=download_task, args=('Peking Hot.avi', )) p2.start() p1.join() p2.join() end = time() print('\u603b\u5171\u8017\u8d39\u4e86%.2f\u79d2.' % (end - start)) if __name__ == '__main__': main() \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7 Process \u7c7b\u521b\u5efa\u4e86\u8fdb\u7a0b\u5bf9\u8c61\uff0c\u901a\u8fc7 target \u53c2\u6570\u6211\u4eec\u4f20\u5165\u4e00\u4e2a\u51fd\u6570\u6765\u8868\u793a\u8fdb\u7a0b\u542f\u52a8\u540e\u8981\u6267\u884c\u7684\u4ee3\u7801\uff0c\u540e\u9762\u7684 args \u662f\u4e00\u4e2a\u5143\u7ec4\uff0c\u5b83\u4ee3\u8868\u4e86\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u53c2\u6570\u3002 Process \u5bf9\u8c61\u7684 start \u65b9\u6cd5\u7528\u6765\u542f\u52a8\u8fdb\u7a0b\uff0c\u800c join \u65b9\u6cd5\u8868\u793a\u7b49\u5f85\u8fdb\u7a0b\u6267\u884c\u7ed3\u675f\u3002\u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u660e\u663e\u53d1\u73b0\u4e24\u4e2a\u4e0b\u8f7d\u4efb\u52a1\u201c\u540c\u65f6\u201d\u542f\u52a8\u4e86\uff0c\u800c\u4e14\u7a0b\u5e8f\u7684\u6267\u884c\u65f6\u95f4\u5c06\u5927\u5927\u7f29\u77ed\uff0c\u4e0d\u518d\u662f\u4e24\u4e2a\u4efb\u52a1\u7684\u65f6\u95f4\u603b\u548c\u3002\u4e0b\u9762\u662f\u7a0b\u5e8f\u7684\u4e00\u6b21\u6267\u884c\u7ed3\u679c\u3002 \u542f\u52a8\u4e0b\u8f7d\u8fdb\u7a0b\uff0c\u8fdb\u7a0b\u53f7[1530]. \u5f00\u59cb\u4e0b\u8f7dPython\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf... \u542f\u52a8\u4e0b\u8f7d\u8fdb\u7a0b\uff0c\u8fdb\u7a0b\u53f7[1531]. \u5f00\u59cb\u4e0b\u8f7dPeking Hot.avi... Peking Hot.avi\u4e0b\u8f7d\u5b8c\u6210! \u8017\u8d39\u4e867\u79d2 Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf\u4e0b\u8f7d\u5b8c\u6210! \u8017\u8d39\u4e8610\u79d2 \u603b\u5171\u8017\u8d39\u4e8610.01\u79d2. \u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528subprocess\u6a21\u5757\u4e2d\u7684\u7c7b\u548c\u51fd\u6570\u6765\u521b\u5efa\u548c\u542f\u52a8\u5b50\u8fdb\u7a0b\uff0c\u7136\u540e\u901a\u8fc7\u7ba1\u9053\u6765\u548c\u5b50\u8fdb\u7a0b\u901a\u4fe1\uff0c\u8fd9\u4e9b\u5185\u5bb9\u6211\u4eec\u4e0d\u5728\u6b64\u8fdb\u884c\u8bb2\u89e3\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u5df1\u4e86\u89e3\u8fd9\u4e9b\u77e5\u8bc6\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u91cd\u70b9\u653e\u5728\u5982\u4f55\u5b9e\u73b0\u4e24\u4e2a\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\u3002\u6211\u4eec\u542f\u52a8\u4e24\u4e2a\u8fdb\u7a0b\uff0c\u4e00\u4e2a\u8f93\u51faPing\uff0c\u4e00\u4e2a\u8f93\u51faPong\uff0c\u4e24\u4e2a\u8fdb\u7a0b\u8f93\u51fa\u7684Ping\u548cPong\u52a0\u8d77\u6765\u4e00\u517110\u4e2a\u3002\u542c\u8d77\u6765\u5f88\u7b80\u5355\u5427\uff0c\u4f46\u662f\u5982\u679c\u8fd9\u6837\u5199\u53ef\u662f\u9519\u7684\u54e6\u3002 from multiprocessing import Process from time import sleep counter = 0 def sub_task(string): global counter while counter < 10: print(string, end='', flush=True) counter += 1 sleep(0.01) def main(): Process(target=sub_task, args=('Ping', )).start() Process(target=sub_task, args=('Pong', )).start() if __name__ == '__main__': main() \u770b\u8d77\u6765\u6ca1\u6bdb\u75c5\uff0c\u4f46\u662f\u6700\u540e\u7684\u7ed3\u679c\u662fPing\u548cPong\u5404\u8f93\u51fa\u4e8610\u4e2a\uff0cWhy\uff1f\u5f53\u6211\u4eec\u5728\u7a0b\u5e8f\u4e2d\u521b\u5efa\u8fdb\u7a0b\u7684\u65f6\u5019\uff0c\u5b50\u8fdb\u7a0b\u590d\u5236\u4e86\u7236\u8fdb\u7a0b\u53ca\u5176\u6240\u6709\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6bcf\u4e2a\u5b50\u8fdb\u7a0b\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u4e24\u4e2a\u5b50\u8fdb\u7a0b\u4e2d\u5404\u6709\u4e00\u4e2a counter \u53d8\u91cf\uff0c\u6240\u4ee5\u7ed3\u679c\u4e5f\u5c31\u53ef\u60f3\u800c\u77e5\u4e86\u3002\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u6bd4\u8f83\u7b80\u5355\u7684\u529e\u6cd5\u662f\u4f7f\u7528multiprocessing\u6a21\u5757\u4e2d\u7684 Queue \u7c7b\uff0c\u5b83\u662f\u53ef\u4ee5\u88ab\u591a\u4e2a\u8fdb\u7a0b\u5171\u4eab\u7684\u961f\u5217\uff0c\u5e95\u5c42\u662f\u901a\u8fc7\u7ba1\u9053\u548c \u4fe1\u53f7\u91cf\uff08semaphore\uff09 \u673a\u5236\u6765\u5b9e\u73b0\u7684\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u5df1\u5c1d\u8bd5\u4e00\u4e0b\u3002","title":"Python\u4e2d\u7684\u591a\u8fdb\u7a0b"},{"location":"new/13%E3%80%81%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#python_1","text":"\u5728Python\u65e9\u671f\u7684\u7248\u672c\u4e2d\u5c31\u5f15\u5165\u4e86thread\u6a21\u5757\uff08\u73b0\u5728\u540d\u4e3a_thread\uff09\u6765\u5b9e\u73b0\u591a\u7ebf\u7a0b\u7f16\u7a0b\uff0c\u7136\u800c\u8be5\u6a21\u5757\u8fc7\u4e8e\u5e95\u5c42\uff0c\u800c\u4e14\u5f88\u591a\u529f\u80fd\u90fd\u6ca1\u6709\u63d0\u4f9b\uff0c\u56e0\u6b64\u76ee\u524d\u7684\u591a\u7ebf\u7a0b\u5f00\u53d1\u6211\u4eec\u63a8\u8350\u4f7f\u7528threading\u6a21\u5757\uff0c\u8be5\u6a21\u5757\u5bf9\u591a\u7ebf\u7a0b\u7f16\u7a0b\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u9762\u5411\u5bf9\u8c61\u7684\u5c01\u88c5\u3002\u6211\u4eec\u628a\u521a\u624d\u4e0b\u8f7d\u6587\u4ef6\u7684\u4f8b\u5b50\u7528\u591a\u7ebf\u7a0b\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u4e00\u904d\u3002 from random import randint from threading import Thread from time import time, sleep def download(filename): print('\u5f00\u59cb\u4e0b\u8f7d%s...' % filename) time_to_download = randint(5, 10) sleep(time_to_download) print('%s\u4e0b\u8f7d\u5b8c\u6210! \u8017\u8d39\u4e86%d\u79d2' % (filename, time_to_download)) def main(): start = time() t1 = Thread(target=download, args=('Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf',)) t1.start() t2 = Thread(target=download, args=('Peking Hot.avi',)) t2.start() t1.join() t2.join() end = time() print('\u603b\u5171\u8017\u8d39\u4e86%.3f\u79d2' % (end - start)) if __name__ == '__main__': main() \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528threading\u6a21\u5757\u7684 Thread \u7c7b\u6765\u521b\u5efa\u7ebf\u7a0b\uff0c\u4f46\u662f\u6211\u4eec\u4e4b\u524d\u8bb2\u8fc7\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u6982\u5ff5\u53eb\u201c\u7ee7\u627f\u201d\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u5df2\u6709\u7684\u7c7b\u521b\u5efa\u65b0\u7c7b\uff0c\u56e0\u6b64\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7ee7\u627f Thread \u7c7b\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u81ea\u5b9a\u4e49\u7684\u7ebf\u7a0b\u7c7b\uff0c\u7136\u540e\u518d\u521b\u5efa\u7ebf\u7a0b\u5bf9\u8c61\u5e76\u542f\u52a8\u7ebf\u7a0b\u3002\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 from random import randint from threading import Thread from time import time, sleep class DownloadTask(Thread): def __init__(self, filename): super().__init__() self._filename = filename def run(self): print('\u5f00\u59cb\u4e0b\u8f7d%s...' % self._filename) time_to_download = randint(5, 10) sleep(time_to_download) print('%s\u4e0b\u8f7d\u5b8c\u6210! \u8017\u8d39\u4e86%d\u79d2' % (self._filename, time_to_download)) def main(): start = time() t1 = DownloadTask('Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf') t1.start() t2 = DownloadTask('Peking Hot.avi') t2.start() t1.join() t2.join() end = time() print('\u603b\u5171\u8017\u8d39\u4e86%.2f\u79d2.' % (end - start)) if __name__ == '__main__': main() \u56e0\u4e3a\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u5171\u4eab\u8fdb\u7a0b\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u56e0\u6b64\u8981\u5b9e\u73b0\u591a\u4e2a\u7ebf\u7a0b\u95f4\u7684\u901a\u4fe1\u76f8\u5bf9\u7b80\u5355\uff0c\u5927\u5bb6\u80fd\u60f3\u5230\u7684\u6700\u76f4\u63a5\u7684\u529e\u6cd5\u5c31\u662f\u8bbe\u7f6e\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u8fd9\u4e2a\u5168\u5c40\u53d8\u91cf\u5373\u53ef\u3002\u4f46\u662f\u5f53\u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u540c\u4e00\u4e2a\u53d8\u91cf\uff08\u6211\u4eec\u901a\u5e38\u79f0\u4e4b\u4e3a\u201c\u8d44\u6e90\u201d\uff09\u7684\u65f6\u5019\uff0c\u5f88\u6709\u53ef\u80fd\u4ea7\u751f\u4e0d\u53ef\u63a7\u7684\u7ed3\u679c\u4ece\u800c\u5bfc\u81f4\u7a0b\u5e8f\u5931\u6548\u751a\u81f3\u5d29\u6e83\u3002\u5982\u679c\u4e00\u4e2a\u8d44\u6e90\u88ab\u591a\u4e2a\u7ebf\u7a0b\u7ade\u4e89\u4f7f\u7528\uff0c\u90a3\u4e48\u6211\u4eec\u901a\u5e38\u79f0\u4e4b\u4e3a\u201c\u4e34\u754c\u8d44\u6e90\u201d\uff0c\u5bf9\u201c\u4e34\u754c\u8d44\u6e90\u201d\u7684\u8bbf\u95ee\u9700\u8981\u52a0\u4e0a\u4fdd\u62a4\uff0c\u5426\u5219\u8d44\u6e90\u4f1a\u5904\u4e8e\u201c\u6df7\u4e71\u201d\u7684\u72b6\u6001\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86100\u4e2a\u7ebf\u7a0b\u5411\u540c\u4e00\u4e2a\u94f6\u884c\u8d26\u6237\u8f6c\u8d26\uff08\u8f6c\u51651\u5143\u94b1\uff09\u7684\u573a\u666f\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u94f6\u884c\u8d26\u6237\u5c31\u662f\u4e00\u4e2a\u4e34\u754c\u8d44\u6e90\uff0c\u5728\u6ca1\u6709\u4fdd\u62a4\u7684\u60c5\u51b5\u4e0b\u6211\u4eec\u5f88\u6709\u53ef\u80fd\u4f1a\u5f97\u5230\u9519\u8bef\u7684\u7ed3\u679c\u3002 from time import sleep from threading import Thread class Account(object): def __init__(self): self._balance = 0 def deposit(self, money): # \u8ba1\u7b97\u5b58\u6b3e\u540e\u7684\u4f59\u989d new_balance = self._balance + money # \u6a21\u62df\u53d7\u7406\u5b58\u6b3e\u4e1a\u52a1\u9700\u89810.01\u79d2\u7684\u65f6\u95f4 sleep(0.01) # \u4fee\u6539\u8d26\u6237\u4f59\u989d self._balance = new_balance @property def balance(self): return self._balance class AddMoneyThread(Thread): def __init__(self, account, money): super().__init__() self._account = account self._money = money def run(self): self._account.deposit(self._money) def main(): account = Account() threads = [] # \u521b\u5efa100\u4e2a\u5b58\u6b3e\u7684\u7ebf\u7a0b\u5411\u540c\u4e00\u4e2a\u8d26\u6237\u4e2d\u5b58\u94b1 for _ in range(100): t = AddMoneyThread(account, 1) threads.append(t) t.start() # \u7b49\u6240\u6709\u5b58\u6b3e\u7684\u7ebf\u7a0b\u90fd\u6267\u884c\u5b8c\u6bd5 for t in threads: t.join() print('\u8d26\u6237\u4f59\u989d\u4e3a: \uffe5%d\u5143' % account.balance) if __name__ == '__main__': main() \u8fd0\u884c\u4e0a\u9762\u7684\u7a0b\u5e8f\uff0c\u7ed3\u679c\u8ba9\u4eba\u5927\u8dcc\u773c\u955c\uff0c100\u4e2a\u7ebf\u7a0b\u5206\u522b\u5411\u8d26\u6237\u4e2d\u8f6c\u51651\u5143\u94b1\uff0c\u7ed3\u679c\u5c45\u7136\u8fdc\u8fdc\u5c0f\u4e8e100\u5143\u3002\u4e4b\u6240\u4ee5\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u662f\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u5bf9\u94f6\u884c\u8d26\u6237\u8fd9\u4e2a\u201c\u4e34\u754c\u8d44\u6e90\u201d\u52a0\u4ee5\u4fdd\u62a4\uff0c\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u5411\u8d26\u6237\u4e2d\u5b58\u94b1\u65f6\uff0c\u4f1a\u4e00\u8d77\u6267\u884c\u5230 new_balance = self._balance + money \u8fd9\u884c\u4ee3\u7801\uff0c\u591a\u4e2a\u7ebf\u7a0b\u5f97\u5230\u7684\u8d26\u6237\u4f59\u989d\u90fd\u662f\u521d\u59cb\u72b6\u6001\u4e0b\u7684 0 \uff0c\u6240\u4ee5\u90fd\u662f 0 \u4e0a\u9762\u505a\u4e86+1\u7684\u64cd\u4f5c\uff0c\u56e0\u6b64\u5f97\u5230\u4e86\u9519\u8bef\u7684\u7ed3\u679c\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u201c\u9501\u201d\u5c31\u53ef\u4ee5\u6d3e\u4e0a\u7528\u573a\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u201c\u9501\u201d\u6765\u4fdd\u62a4\u201c\u4e34\u754c\u8d44\u6e90\u201d\uff0c\u53ea\u6709\u83b7\u5f97\u201c\u9501\u201d\u7684\u7ebf\u7a0b\u624d\u80fd\u8bbf\u95ee\u201c\u4e34\u754c\u8d44\u6e90\u201d\uff0c\u800c\u5176\u4ed6\u6ca1\u6709\u5f97\u5230\u201c\u9501\u201d\u7684\u7ebf\u7a0b\u53ea\u80fd\u88ab\u963b\u585e\u8d77\u6765\uff0c\u76f4\u5230\u83b7\u5f97\u201c\u9501\u201d\u7684\u7ebf\u7a0b\u91ca\u653e\u4e86\u201c\u9501\u201d\uff0c\u5176\u4ed6\u7ebf\u7a0b\u624d\u6709\u673a\u4f1a\u83b7\u5f97\u201c\u9501\u201d\uff0c\u8fdb\u800c\u8bbf\u95ee\u88ab\u4fdd\u62a4\u7684\u201c\u4e34\u754c\u8d44\u6e90\u201d\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u201c\u9501\u201d\u6765\u4fdd\u62a4\u5bf9\u94f6\u884c\u8d26\u6237\u7684\u64cd\u4f5c\uff0c\u4ece\u800c\u83b7\u5f97\u6b63\u786e\u7684\u7ed3\u679c\u3002 from time import sleep from threading import Thread, Lock class Account(object): def __init__(self): self._balance = 0 self._lock = Lock() def deposit(self, money): # \u5148\u83b7\u53d6\u9501\u624d\u80fd\u6267\u884c\u540e\u7eed\u7684\u4ee3\u7801 self._lock.acquire() try: new_balance = self._balance + money sleep(0.01) self._balance = new_balance finally: # \u5728finally\u4e2d\u6267\u884c\u91ca\u653e\u9501\u7684\u64cd\u4f5c\u4fdd\u8bc1\u6b63\u5e38\u5f02\u5e38\u9501\u90fd\u80fd\u91ca\u653e self._lock.release() @property def balance(self): return self._balance class AddMoneyThread(Thread): def __init__(self, account, money): super().__init__() self._account = account self._money = money def run(self): self._account.deposit(self._money) def main(): account = Account() threads = [] for _ in range(100): t = AddMoneyThread(account, 1) threads.append(t) t.start() for t in threads: t.join() print('\u8d26\u6237\u4f59\u989d\u4e3a: \uffe5%d\u5143' % account.balance) if __name__ == '__main__': main() \u6bd4\u8f83\u9057\u61be\u7684\u4e00\u4ef6\u4e8b\u60c5\u662fPython\u7684\u591a\u7ebf\u7a0b\u5e76\u4e0d\u80fd\u53d1\u6325CPU\u7684\u591a\u6838\u7279\u6027\uff0c\u8fd9\u4e00\u70b9\u53ea\u8981\u542f\u52a8\u51e0\u4e2a\u6267\u884c\u6b7b\u5faa\u73af\u7684\u7ebf\u7a0b\u5c31\u53ef\u4ee5\u5f97\u5230\u8bc1\u5b9e\u4e86\u3002\u4e4b\u6240\u4ee5\u5982\u6b64\uff0c\u662f\u56e0\u4e3aPython\u7684\u89e3\u91ca\u5668\u6709\u4e00\u4e2a\u201c\u5168\u5c40\u89e3\u91ca\u5668\u9501\u201d\uff08GIL\uff09\u7684\u4e1c\u897f\uff0c\u4efb\u4f55\u7ebf\u7a0b\u6267\u884c\u524d\u5fc5\u987b\u5148\u83b7\u5f97GIL\u9501\uff0c\u7136\u540e\u6bcf\u6267\u884c100\u6761\u5b57\u8282\u7801\uff0c\u89e3\u91ca\u5668\u5c31\u81ea\u52a8\u91ca\u653eGIL\u9501\uff0c\u8ba9\u522b\u7684\u7ebf\u7a0b\u6709\u673a\u4f1a\u6267\u884c\uff0c\u8fd9\u662f\u4e00\u4e2a\u5386\u53f2\u9057\u7559\u95ee\u9898\uff0c\u4f46\u662f\u5373\u4fbf\u5982\u6b64\uff0c\u5c31\u5982\u6211\u4eec\u4e4b\u524d\u4e3e\u7684\u4f8b\u5b50\uff0c\u4f7f\u7528\u591a\u7ebf\u7a0b\u5728\u63d0\u5347\u6267\u884c\u6548\u7387\u548c\u6539\u5584\u7528\u6237\u4f53\u9a8c\u65b9\u9762\u4ecd\u7136\u662f\u6709\u79ef\u6781\u610f\u4e49\u7684\u3002","title":"Python\u4e2d\u7684\u591a\u7ebf\u7a0b"},{"location":"new/13%E3%80%81%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_3","text":"\u65e0\u8bba\u662f\u591a\u8fdb\u7a0b\u8fd8\u662f\u591a\u7ebf\u7a0b\uff0c\u53ea\u8981\u6570\u91cf\u4e00\u591a\uff0c\u6548\u7387\u80af\u5b9a\u4e0a\u4e0d\u53bb\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\u6211\u4eec\u6253\u4e2a\u6bd4\u65b9\uff0c\u5047\u8bbe\u4f60\u4e0d\u5e78\u6b63\u5728\u51c6\u5907\u4e2d\u8003\uff0c\u6bcf\u5929\u665a\u4e0a\u9700\u8981\u505a\u8bed\u6587\u3001\u6570\u5b66\u3001\u82f1\u8bed\u3001\u7269\u7406\u3001\u5316\u5b66\u8fd95\u79d1\u7684\u4f5c\u4e1a\uff0c\u6bcf\u9879\u4f5c\u4e1a\u8017\u65f61\u5c0f\u65f6\u3002\u5982\u679c\u4f60\u5148\u82b11\u5c0f\u65f6\u505a\u8bed\u6587\u4f5c\u4e1a\uff0c\u505a\u5b8c\u4e86\uff0c\u518d\u82b11\u5c0f\u65f6\u505a\u6570\u5b66\u4f5c\u4e1a\uff0c\u8fd9\u6837\uff0c\u4f9d\u6b21\u5168\u90e8\u505a\u5b8c\uff0c\u4e00\u5171\u82b15\u5c0f\u65f6\uff0c\u8fd9\u79cd\u65b9\u5f0f\u79f0\u4e3a\u5355\u4efb\u52a1\u6a21\u578b\u3002\u5982\u679c\u4f60\u6253\u7b97\u5207\u6362\u5230\u591a\u4efb\u52a1\u6a21\u578b\uff0c\u53ef\u4ee5\u5148\u505a1\u5206\u949f\u8bed\u6587\uff0c\u518d\u5207\u6362\u5230\u6570\u5b66\u4f5c\u4e1a\uff0c\u505a1\u5206\u949f\uff0c\u518d\u5207\u6362\u5230\u82f1\u8bed\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u53ea\u8981\u5207\u6362\u901f\u5ea6\u8db3\u591f\u5feb\uff0c\u8fd9\u79cd\u65b9\u5f0f\u5c31\u548c\u5355\u6838CPU\u6267\u884c\u591a\u4efb\u52a1\u662f\u4e00\u6837\u7684\u4e86\uff0c\u4ee5\u65c1\u89c2\u8005\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u4f60\u5c31\u6b63\u5728\u540c\u65f6\u51995\u79d1\u4f5c\u4e1a\u3002 \u4f46\u662f\uff0c\u5207\u6362\u4f5c\u4e1a\u662f\u6709\u4ee3\u4ef7\u7684\uff0c\u6bd4\u5982\u4ece\u8bed\u6587\u5207\u5230\u6570\u5b66\uff0c\u8981\u5148\u6536\u62fe\u684c\u5b50\u4e0a\u7684\u8bed\u6587\u4e66\u672c\u3001\u94a2\u7b14\uff08\u8fd9\u53eb\u4fdd\u5b58\u73b0\u573a\uff09\uff0c\u7136\u540e\uff0c\u6253\u5f00\u6570\u5b66\u8bfe\u672c\u3001\u627e\u51fa\u5706\u89c4\u76f4\u5c3a\uff08\u8fd9\u53eb\u51c6\u5907\u65b0\u73af\u5883\uff09\uff0c\u624d\u80fd\u5f00\u59cb\u505a\u6570\u5b66\u4f5c\u4e1a\u3002\u64cd\u4f5c\u7cfb\u7edf\u5728\u5207\u6362\u8fdb\u7a0b\u6216\u8005\u7ebf\u7a0b\u65f6\u4e5f\u662f\u4e00\u6837\u7684\uff0c\u5b83\u9700\u8981\u5148\u4fdd\u5b58\u5f53\u524d\u6267\u884c\u7684\u73b0\u573a\u73af\u5883\uff08CPU\u5bc4\u5b58\u5668\u72b6\u6001\u3001\u5185\u5b58\u9875\u7b49\uff09\uff0c\u7136\u540e\uff0c\u628a\u65b0\u4efb\u52a1\u7684\u6267\u884c\u73af\u5883\u51c6\u5907\u597d\uff08\u6062\u590d\u4e0a\u6b21\u7684\u5bc4\u5b58\u5668\u72b6\u6001\uff0c\u5207\u6362\u5185\u5b58\u9875\u7b49\uff09\uff0c\u624d\u80fd\u5f00\u59cb\u6267\u884c\u3002\u8fd9\u4e2a\u5207\u6362\u8fc7\u7a0b\u867d\u7136\u5f88\u5feb\uff0c\u4f46\u662f\u4e5f\u9700\u8981\u8017\u8d39\u65f6\u95f4\u3002\u5982\u679c\u6709\u51e0\u5343\u4e2a\u4efb\u52a1\u540c\u65f6\u8fdb\u884c\uff0c\u64cd\u4f5c\u7cfb\u7edf\u53ef\u80fd\u5c31\u4e3b\u8981\u5fd9\u7740\u5207\u6362\u4efb\u52a1\uff0c\u6839\u672c\u6ca1\u6709\u591a\u5c11\u65f6\u95f4\u53bb\u6267\u884c\u4efb\u52a1\u4e86\uff0c\u8fd9\u79cd\u60c5\u51b5\u6700\u5e38\u89c1\u7684\u5c31\u662f\u786c\u76d8\u72c2\u54cd\uff0c\u70b9\u7a97\u53e3\u65e0\u53cd\u5e94\uff0c\u7cfb\u7edf\u5904\u4e8e\u5047\u6b7b\u72b6\u6001\u3002\u6240\u4ee5\uff0c\u591a\u4efb\u52a1\u4e00\u65e6\u591a\u5230\u4e00\u4e2a\u9650\u5ea6\uff0c\u53cd\u800c\u4f1a\u4f7f\u5f97\u7cfb\u7edf\u6027\u80fd\u6025\u5267\u4e0b\u964d\uff0c\u6700\u7ec8\u5bfc\u81f4\u6240\u6709\u4efb\u52a1\u90fd\u505a\u4e0d\u597d\u3002 \u662f\u5426\u91c7\u7528\u591a\u4efb\u52a1\u7684\u7b2c\u4e8c\u4e2a\u8003\u8651\u662f\u4efb\u52a1\u7684\u7c7b\u578b\uff0c\u53ef\u4ee5\u628a\u4efb\u52a1\u5206\u4e3a\u8ba1\u7b97\u5bc6\u96c6\u578b\u548cI/O\u5bc6\u96c6\u578b\u3002\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u7684\u7279\u70b9\u662f\u8981\u8fdb\u884c\u5927\u91cf\u7684\u8ba1\u7b97\uff0c\u6d88\u8017CPU\u8d44\u6e90\uff0c\u6bd4\u5982\u5bf9\u89c6\u9891\u8fdb\u884c\u7f16\u7801\u89e3\u7801\u6216\u8005\u683c\u5f0f\u8f6c\u6362\u7b49\u7b49\uff0c\u8fd9\u79cd\u4efb\u52a1\u5168\u9760CPU\u7684\u8fd0\u7b97\u80fd\u529b\uff0c\u867d\u7136\u4e5f\u53ef\u4ee5\u7528\u591a\u4efb\u52a1\u5b8c\u6210\uff0c\u4f46\u662f\u4efb\u52a1\u8d8a\u591a\uff0c\u82b1\u5728\u4efb\u52a1\u5207\u6362\u7684\u65f6\u95f4\u5c31\u8d8a\u591a\uff0cCPU\u6267\u884c\u4efb\u52a1\u7684\u6548\u7387\u5c31\u8d8a\u4f4e\u3002\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u7531\u4e8e\u4e3b\u8981\u6d88\u8017CPU\u8d44\u6e90\uff0c\u8fd9\u7c7b\u4efb\u52a1\u7528Python\u8fd9\u6837\u7684\u811a\u672c\u8bed\u8a00\u53bb\u6267\u884c\u6548\u7387\u901a\u5e38\u5f88\u4f4e\uff0c\u6700\u80fd\u80dc\u4efb\u8fd9\u7c7b\u4efb\u52a1\u7684\u662fC\u8bed\u8a00\uff0c\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u4e86Python\u4e2d\u6709\u5d4c\u5165C/C++\u4ee3\u7801\u7684\u673a\u5236\u3002 \u9664\u4e86\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u5176\u4ed6\u7684\u6d89\u53ca\u5230\u7f51\u7edc\u3001\u5b58\u50a8\u4ecb\u8d28I/O\u7684\u4efb\u52a1\u90fd\u53ef\u4ee5\u89c6\u4e3aI/O\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u8fd9\u7c7b\u4efb\u52a1\u7684\u7279\u70b9\u662fCPU\u6d88\u8017\u5f88\u5c11\uff0c\u4efb\u52a1\u7684\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u7b49\u5f85I/O\u64cd\u4f5c\u5b8c\u6210\uff08\u56e0\u4e3aI/O\u7684\u901f\u5ea6\u8fdc\u8fdc\u4f4e\u4e8eCPU\u548c\u5185\u5b58\u7684\u901f\u5ea6\uff09\u3002\u5bf9\u4e8eI/O\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u5982\u679c\u542f\u52a8\u591a\u4efb\u52a1\uff0c\u5c31\u53ef\u4ee5\u51cf\u5c11I/O\u7b49\u5f85\u65f6\u95f4\u4ece\u800c\u8ba9CPU\u9ad8\u6548\u7387\u7684\u8fd0\u8f6c\u3002\u6709\u4e00\u5927\u7c7b\u7684\u4efb\u52a1\u90fd\u5c5e\u4e8eI/O\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u8fd9\u5176\u4e2d\u5305\u62ec\u4e86\u6211\u4eec\u5f88\u5feb\u4f1a\u6d89\u53ca\u5230\u7684\u7f51\u7edc\u5e94\u7528\u548cWeb\u5e94\u7528\u3002 \u8bf4\u660e\uff1a \u4e0a\u9762\u7684\u5185\u5bb9\u548c\u4f8b\u5b50\u6765\u81ea\u4e8e \u5ed6\u96ea\u5cf0\u5b98\u65b9\u7f51\u7ad9\u7684\u300aPython\u6559\u7a0b\u300b \uff0c\u56e0\u4e3a\u5bf9\u4f5c\u8005\u6587\u4e2d\u7684\u67d0\u4e9b\u89c2\u70b9\u6301\u6709\u4e0d\u540c\u7684\u770b\u6cd5\uff0c\u5bf9\u539f\u6587\u7684\u6587\u5b57\u63cf\u8ff0\u505a\u4e86\u9002\u5f53\u7684\u8c03\u6574\u3002","title":"\u591a\u8fdb\u7a0b\u8fd8\u662f\u591a\u7ebf\u7a0b"},{"location":"new/13%E3%80%81%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#io","text":"\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u5bf9I/O\u64cd\u4f5c\u7684\u6539\u8fdb\u4e2d\u6700\u4e3a\u91cd\u8981\u7684\u5c31\u662f\u652f\u6301\u5f02\u6b65I/O\u3002\u5982\u679c\u5145\u5206\u5229\u7528\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u5f02\u6b65I/O\u652f\u6301\uff0c\u5c31\u53ef\u4ee5\u7528\u5355\u8fdb\u7a0b\u5355\u7ebf\u7a0b\u6a21\u578b\u6765\u6267\u884c\u591a\u4efb\u52a1\uff0c\u8fd9\u79cd\u5168\u65b0\u7684\u6a21\u578b\u79f0\u4e3a\u4e8b\u4ef6\u9a71\u52a8\u6a21\u578b\u3002Nginx\u5c31\u662f\u652f\u6301\u5f02\u6b65I/O\u7684Web\u670d\u52a1\u5668\uff0c\u5b83\u5728\u5355\u6838CPU\u4e0a\u91c7\u7528\u5355\u8fdb\u7a0b\u6a21\u578b\u5c31\u53ef\u4ee5\u9ad8\u6548\u5730\u652f\u6301\u591a\u4efb\u52a1\u3002\u5728\u591a\u6838CPU\u4e0a\uff0c\u53ef\u4ee5\u8fd0\u884c\u591a\u4e2a\u8fdb\u7a0b\uff08\u6570\u91cf\u4e0eCPU\u6838\u5fc3\u6570\u76f8\u540c\uff09\uff0c\u5145\u5206\u5229\u7528\u591a\u6838CPU\u3002\u7528Node.js\u5f00\u53d1\u7684\u670d\u52a1\u5668\u7aef\u7a0b\u5e8f\u4e5f\u4f7f\u7528\u4e86\u8fd9\u79cd\u5de5\u4f5c\u6a21\u5f0f\uff0c\u8fd9\u4e5f\u662f\u5f53\u4e0b\u5b9e\u73b0\u591a\u4efb\u52a1\u7f16\u7a0b\u7684\u4e00\u79cd\u8d8b\u52bf\u3002 \u5728Python\u8bed\u8a00\u4e2d\uff0c\u5355\u7ebf\u7a0b+\u5f02\u6b65I/O\u7684\u7f16\u7a0b\u6a21\u578b\u79f0\u4e3a\u534f\u7a0b\uff0c\u6709\u4e86\u534f\u7a0b\u7684\u652f\u6301\uff0c\u5c31\u53ef\u4ee5\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\u7f16\u5199\u9ad8\u6548\u7684\u591a\u4efb\u52a1\u7a0b\u5e8f\u3002\u534f\u7a0b\u6700\u5927\u7684\u4f18\u52bf\u5c31\u662f\u6781\u9ad8\u7684\u6267\u884c\u6548\u7387\uff0c\u56e0\u4e3a\u5b50\u7a0b\u5e8f\u5207\u6362\u4e0d\u662f\u7ebf\u7a0b\u5207\u6362\uff0c\u800c\u662f\u7531\u7a0b\u5e8f\u81ea\u8eab\u63a7\u5236\uff0c\u56e0\u6b64\uff0c\u6ca1\u6709\u7ebf\u7a0b\u5207\u6362\u7684\u5f00\u9500\u3002\u534f\u7a0b\u7684\u7b2c\u4e8c\u4e2a\u4f18\u52bf\u5c31\u662f\u4e0d\u9700\u8981\u591a\u7ebf\u7a0b\u7684\u9501\u673a\u5236\uff0c\u56e0\u4e3a\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u4e5f\u4e0d\u5b58\u5728\u540c\u65f6\u5199\u53d8\u91cf\u51b2\u7a81\uff0c\u5728\u534f\u7a0b\u4e2d\u63a7\u5236\u5171\u4eab\u8d44\u6e90\u4e0d\u7528\u52a0\u9501\uff0c\u53ea\u9700\u8981\u5224\u65ad\u72b6\u6001\u5c31\u597d\u4e86\uff0c\u6240\u4ee5\u6267\u884c\u6548\u7387\u6bd4\u591a\u7ebf\u7a0b\u9ad8\u5f88\u591a\u3002\u5982\u679c\u60f3\u8981\u5145\u5206\u5229\u7528CPU\u7684\u591a\u6838\u7279\u6027\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u591a\u8fdb\u7a0b+\u534f\u7a0b\uff0c\u65e2\u5145\u5206\u5229\u7528\u591a\u6838\uff0c\u53c8\u5145\u5206\u53d1\u6325\u534f\u7a0b\u7684\u9ad8\u6548\u7387\uff0c\u53ef\u83b7\u5f97\u6781\u9ad8\u7684\u6027\u80fd\u3002\u5173\u4e8e\u8fd9\u65b9\u9762\u7684\u5185\u5bb9\uff0c\u6211\u7a0d\u540e\u4f1a\u505a\u4e00\u4e2a\u4e13\u9898\u6765\u8fdb\u884c\u8bb2\u89e3\u3002","title":"\u5355\u7ebf\u7a0b+\u5f02\u6b65I/O"},{"location":"new/13%E3%80%81%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_4","text":"","title":"\u5e94\u7528\u6848\u4f8b"},{"location":"new/13%E3%80%81%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#1","text":"\u5982\u4e0b\u6240\u793a\u7684\u754c\u9762\u4e2d\uff0c\u6709\u201c\u4e0b\u8f7d\u201d\u548c\u201c\u5173\u4e8e\u201d\u4e24\u4e2a\u6309\u94ae\uff0c\u7528\u4f11\u7720\u7684\u65b9\u5f0f\u6a21\u62df\u70b9\u51fb\u201c\u4e0b\u8f7d\u201d\u6309\u94ae\u4f1a\u8054\u7f51\u4e0b\u8f7d\u6587\u4ef6\u9700\u8981\u8017\u8d3910\u79d2\u7684\u65f6\u95f4\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u201c\u591a\u7ebf\u7a0b\u201d\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u5f53\u70b9\u51fb\u201c\u4e0b\u8f7d\u201d\u6309\u94ae\u540e\u6574\u4e2a\u7a0b\u5e8f\u7684\u5176\u4ed6\u90e8\u5206\u90fd\u88ab\u8fd9\u4e2a\u8017\u65f6\u95f4\u7684\u4efb\u52a1\u963b\u585e\u800c\u65e0\u6cd5\u6267\u884c\u4e86\uff0c\u8fd9\u663e\u7136\u662f\u975e\u5e38\u7cdf\u7cd5\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import time import tkinter import tkinter.messagebox def download(): # \u6a21\u62df\u4e0b\u8f7d\u4efb\u52a1\u9700\u8981\u82b1\u8d3910\u79d2\u949f\u65f6\u95f4 time.sleep(10) tkinter.messagebox.showinfo('\u63d0\u793a', '\u4e0b\u8f7d\u5b8c\u6210!') def show_about(): tkinter.messagebox.showinfo('\u5173\u4e8e', '\u4f5c\u8005: \u9a86\u660a(v1.0)') def main(): top = tkinter.Tk() top.title('\u5355\u7ebf\u7a0b') top.geometry('200x150') top.wm_attributes('-topmost', True) panel = tkinter.Frame(top) button1 = tkinter.Button(panel, text='\u4e0b\u8f7d', command=download) button1.pack(side='left') button2 = tkinter.Button(panel, text='\u5173\u4e8e', command=show_about) button2.pack(side='right') panel.pack(side='bottom') tkinter.mainloop() if __name__ == '__main__': main() \u5982\u679c\u4f7f\u7528\u591a\u7ebf\u7a0b\u5c06\u8017\u65f6\u95f4\u7684\u4efb\u52a1\u653e\u5230\u4e00\u4e2a\u72ec\u7acb\u7684\u7ebf\u7a0b\u4e2d\u6267\u884c\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u56e0\u4e3a\u6267\u884c\u8017\u65f6\u95f4\u7684\u4efb\u52a1\u800c\u963b\u585e\u4e86\u4e3b\u7ebf\u7a0b\uff0c\u4fee\u6539\u540e\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import time import tkinter import tkinter.messagebox from threading import Thread def main(): class DownloadTaskHandler(Thread): def run(self): time.sleep(10) tkinter.messagebox.showinfo('\u63d0\u793a', '\u4e0b\u8f7d\u5b8c\u6210!') # \u542f\u7528\u4e0b\u8f7d\u6309\u94ae button1.config(state=tkinter.NORMAL) def download(): # \u7981\u7528\u4e0b\u8f7d\u6309\u94ae button1.config(state=tkinter.DISABLED) # \u901a\u8fc7daemon\u53c2\u6570\u5c06\u7ebf\u7a0b\u8bbe\u7f6e\u4e3a\u5b88\u62a4\u7ebf\u7a0b(\u4e3b\u7a0b\u5e8f\u9000\u51fa\u5c31\u4e0d\u518d\u4fdd\u7559\u6267\u884c) # \u5728\u7ebf\u7a0b\u4e2d\u5904\u7406\u8017\u65f6\u95f4\u7684\u4e0b\u8f7d\u4efb\u52a1 DownloadTaskHandler(daemon=True).start() def show_about(): tkinter.messagebox.showinfo('\u5173\u4e8e', '\u4f5c\u8005: \u9a86\u660a(v1.0)') top = tkinter.Tk() top.title('\u5355\u7ebf\u7a0b') top.geometry('200x150') top.wm_attributes('-topmost', 1) panel = tkinter.Frame(top) button1 = tkinter.Button(panel, text='\u4e0b\u8f7d', command=download) button1.pack(side='left') button2 = tkinter.Button(panel, text='\u5173\u4e8e', command=show_about) button2.pack(side='right') panel.pack(side='bottom') tkinter.mainloop() if __name__ == '__main__': main()","title":"\u4f8b\u5b501\uff1a\u5c06\u8017\u65f6\u95f4\u7684\u4efb\u52a1\u653e\u5230\u7ebf\u7a0b\u4e2d\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u7528\u6237\u4f53\u9a8c\u3002"},{"location":"new/13%E3%80%81%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#2","text":"\u6211\u4eec\u6765\u5b8c\u62101~100000000\u6c42\u548c\u7684\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u8fd9\u4e2a\u95ee\u9898\u672c\u8eab\u975e\u5e38\u7b80\u5355\uff0c\u6709\u70b9\u5faa\u73af\u7684\u77e5\u8bc6\u5c31\u80fd\u89e3\u51b3\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 from time import time def main(): total = 0 number_list = [x for x in range(1, 100000001)] start = time() for number in number_list: total += number print(total) end = time() print('Execution time: %.3fs' % (end - start)) if __name__ == '__main__': main() \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u6545\u610f\u5148\u53bb\u521b\u5efa\u4e86\u4e00\u4e2a\u5217\u8868\u5bb9\u5668\u7136\u540e\u586b\u5165\u4e86100000000\u4e2a\u6570\uff0c\u8fd9\u4e00\u6b65\u5176\u5b9e\u662f\u6bd4\u8f83\u8017\u65f6\u95f4\u7684\uff0c\u6240\u4ee5\u4e3a\u4e86\u516c\u5e73\u8d77\u89c1\uff0c\u5f53\u6211\u4eec\u5c06\u8fd9\u4e2a\u4efb\u52a1\u5206\u89e3\u52308\u4e2a\u8fdb\u7a0b\u4e2d\u53bb\u6267\u884c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u6682\u65f6\u4e5f\u4e0d\u8003\u8651\u5217\u8868\u5207\u7247\u64cd\u4f5c\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u53ea\u662f\u628a\u505a\u8fd0\u7b97\u548c\u5408\u5e76\u8fd0\u7b97\u7ed3\u679c\u7684\u65f6\u95f4\u7edf\u8ba1\u51fa\u6765\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 from multiprocessing import Process, Queue from random import randint from time import time def task_handler(curr_list, result_queue): total = 0 for number in curr_list: total += number result_queue.put(total) def main(): processes = [] number_list = [x for x in range(1, 100000001)] result_queue = Queue() index = 0 # \u542f\u52a88\u4e2a\u8fdb\u7a0b\u5c06\u6570\u636e\u5207\u7247\u540e\u8fdb\u884c\u8fd0\u7b97 for _ in range(8): p = Process(target=task_handler, args=(number_list[index:index + 12500000], result_queue)) index += 12500000 processes.append(p) p.start() # \u5f00\u59cb\u8bb0\u5f55\u6240\u6709\u8fdb\u7a0b\u6267\u884c\u5b8c\u6210\u82b1\u8d39\u7684\u65f6\u95f4 start = time() for p in processes: p.join() # \u5408\u5e76\u6267\u884c\u7ed3\u679c total = 0 while not result_queue.empty(): total += result_queue.get() print(total) end = time() print('Execution time: ', (end - start), 's', sep='') if __name__ == '__main__': main() \u6bd4\u8f83\u4e24\u6bb5\u4ee3\u7801\u7684\u6267\u884c\u7ed3\u679c\uff08\u5728\u6211\u76ee\u524d\u4f7f\u7528\u7684MacBook\u4e0a\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u9700\u8981\u5927\u69826\u79d2\u5de6\u53f3\u7684\u65f6\u95f4\uff0c\u800c\u4e0b\u9762\u7684\u4ee3\u7801\u53ea\u9700\u8981\u4e0d\u52301\u79d2\u7684\u65f6\u95f4\uff0c\u518d\u5f3a\u8c03\u4e00\u6b21\u6211\u4eec\u53ea\u662f\u6bd4\u8f83\u4e86\u8fd0\u7b97\u7684\u65f6\u95f4\uff0c\u4e0d\u8003\u8651\u5217\u8868\u521b\u5efa\u53ca\u5207\u7247\u64cd\u4f5c\u82b1\u8d39\u7684\u65f6\u95f4\uff09\uff0c\u4f7f\u7528\u591a\u8fdb\u7a0b\u540e\u7531\u4e8e\u83b7\u5f97\u4e86\u66f4\u591a\u7684CPU\u6267\u884c\u65f6\u95f4\u4ee5\u53ca\u66f4\u597d\u7684\u5229\u7528\u4e86CPU\u7684\u591a\u6838\u7279\u6027\uff0c\u660e\u663e\u7684\u51cf\u5c11\u4e86\u7a0b\u5e8f\u7684\u6267\u884c\u65f6\u95f4\uff0c\u800c\u4e14\u8ba1\u7b97\u91cf\u8d8a\u5927\u6548\u679c\u8d8a\u660e\u663e\u3002\u5f53\u7136\uff0c\u5982\u679c\u613f\u610f\u8fd8\u53ef\u4ee5\u5c06\u591a\u4e2a\u8fdb\u7a0b\u90e8\u7f72\u5728\u4e0d\u540c\u7684\u8ba1\u7b97\u673a\u4e0a\uff0c\u505a\u6210\u5206\u5e03\u5f0f\u8fdb\u7a0b\uff0c\u5177\u4f53\u7684\u505a\u6cd5\u5c31\u662f\u901a\u8fc7multiprocessing.managers\u6a21\u5757\u4e2d\u63d0\u4f9b\u7684\u7ba1\u7406\u5668\u5c06 Queue \u5bf9\u8c61\u901a\u8fc7\u7f51\u7edc\u5171\u4eab\u51fa\u6765\uff08\u6ce8\u518c\u5230\u7f51\u7edc\u4e0a\u8ba9\u5176\u4ed6\u8ba1\u7b97\u673a\u53ef\u4ee5\u8bbf\u95ee\uff09\uff0c\u8fd9\u90e8\u5206\u5185\u5bb9\u4e5f\u7559\u5230\u722c\u866b\u7684\u4e13\u9898\u518d\u8fdb\u884c\u8bb2\u89e3\u3002","title":"\u4f8b\u5b502\uff1a\u4f7f\u7528\u591a\u8fdb\u7a0b\u5bf9\u590d\u6742\u4efb\u52a1\u8fdb\u884c\u201c\u5206\u800c\u6cbb\u4e4b\u201d\u3002"},{"location":"new/14-A%E3%80%81%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/","text":"\u7f51\u7edc\u7f16\u7a0b\u5165\u95e8 \u8ba1\u7b97\u673a\u7f51\u7edc\u57fa\u7840 \u8ba1\u7b97\u673a\u7f51\u7edc\u662f\u72ec\u7acb\u81ea\u4e3b\u7684\u8ba1\u7b97\u673a\u4e92\u8054\u800c\u6210\u7684\u7cfb\u7edf\u7684\u603b\u79f0\uff0c\u7ec4\u5efa\u8ba1\u7b97\u673a\u7f51\u7edc\u6700\u4e3b\u8981\u7684\u76ee\u7684\u662f\u5b9e\u73b0\u591a\u53f0\u8ba1\u7b97\u673a\u4e4b\u95f4\u7684\u901a\u4fe1\u548c\u8d44\u6e90\u5171\u4eab\u3002\u4eca\u5929\u8ba1\u7b97\u673a\u7f51\u7edc\u4e2d\u7684\u8bbe\u5907\u548c\u8ba1\u7b97\u673a\u7f51\u7edc\u7684\u7528\u6237\u5df2\u7ecf\u591a\u5f97\u4e0d\u53ef\u8ba1\u6570\uff0c\u800c\u8ba1\u7b97\u673a\u7f51\u7edc\u4e5f\u53ef\u4ee5\u79f0\u5f97\u4e0a\u662f\u4e00\u4e2a\u201c\u590d\u6742\u5de8\u7cfb\u7edf\u201d\uff0c\u5bf9\u4e8e\u8fd9\u6837\u7684\u7cfb\u7edf\uff0c\u6211\u4eec\u4e0d\u53ef\u80fd\u7528\u4e00\u4e24\u7bc7\u6587\u7ae0\u628a\u5b83\u8bb2\u6e05\u695a\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u9605\u8bfbAndrew S.Tanenbaum\u8001\u5e08\u7684\u7ecf\u5178\u4e4b\u4f5c\u300a\u8ba1\u7b97\u673a\u7f51\u7edc\u300b\u6216Kurose\u548cRoss\u8001\u5e08\u5408\u8457\u7684\u300a\u8ba1\u7b97\u673a\u7f51\u7edc:\u81ea\u9876\u5411\u4e0b\u65b9\u6cd5\u300b\u6765\u4e86\u89e3\u8ba1\u7b97\u673a\u7f51\u7edc\u7684\u76f8\u5173\u77e5\u8bc6\u3002 \u8ba1\u7b97\u673a\u7f51\u7edc\u53d1\u5c55\u53f2 1960s - \u7f8e\u56fd\u56fd\u9632\u90e8ARPANET\u9879\u76ee\u95ee\u4e16\uff0c\u5960\u5b9a\u4e86\u5206\u7ec4\u4ea4\u6362\u7f51\u7edc\u7684\u57fa\u7840\u3002 1980s - \u56fd\u9645\u6807\u51c6\u5316\u7ec4\u7ec7\uff08ISO\uff09\u53d1\u5e03OSI/RM\uff0c\u5960\u5b9a\u4e86\u7f51\u7edc\u6280\u672f\u6807\u51c6\u5316\u7684\u57fa\u7840\u3002 1990s - \u82f1\u56fd\u4eba \u8482\u59c6\u00b7\u4f2f\u7eb3\u65af-\u674e \u53d1\u660e\u4e86\u56fe\u5f62\u5316\u7684\u6d4f\u89c8\u5668\uff0c\u6d4f\u89c8\u5668\u7684\u7b80\u5355\u6613\u7528\u6027\u4f7f\u5f97\u8ba1\u7b97\u673a\u7f51\u7edc\u8fc5\u901f\u88ab\u666e\u53ca\u3002 \u5728\u6ca1\u6709\u6d4f\u89c8\u5668\u7684\u5e74\u4ee3\uff0c\u4e0a\u7f51\u662f\u8fd9\u6837\u7684\u3002 \u6709\u4e86\u6d4f\u89c8\u5668\u4ee5\u540e\uff0c\u4e0a\u7f51\u662f\u8fd9\u6837\u7684\u3002 TCP/IP\u6a21\u578b \u5b9e\u73b0\u7f51\u7edc\u901a\u4fe1\u7684\u57fa\u7840\u662f\u7f51\u7edc\u901a\u4fe1\u534f\u8bae\uff0c\u8fd9\u4e9b\u534f\u8bae\u901a\u5e38\u662f\u7531 \u4e92\u8054\u7f51\u5de5\u7a0b\u4efb\u52a1\u7ec4 \uff08IETF\uff09\u5236\u5b9a\u7684\u3002\u6240\u8c13\u201c\u534f\u8bae\u201d\u5c31\u662f\u901a\u4fe1\u8ba1\u7b97\u673a\u53cc\u65b9\u5fc5\u987b\u5171\u540c\u9075\u4ece\u7684\u4e00\u7ec4\u7ea6\u5b9a\uff0c\u4f8b\u5982\u600e\u6837\u5efa\u7acb\u8fde\u63a5\u3001\u600e\u6837\u4e92\u76f8\u8bc6\u522b\u7b49\uff0c\u7f51\u7edc\u534f\u8bae\u7684\u4e09\u8981\u7d20\u662f\uff1a\u8bed\u6cd5\u3001\u8bed\u4e49\u548c\u65f6\u5e8f\u3002\u6784\u6210\u6211\u4eec\u4eca\u5929\u4f7f\u7528\u7684Internet\u7684\u57fa\u7840\u7684\u662fTCP/IP\u534f\u8bae\u65cf\uff0c\u6240\u8c13\u534f\u8bae\u65cf\u5c31\u662f\u4e00\u7cfb\u5217\u7684\u534f\u8bae\u53ca\u5176\u6784\u6210\u7684\u901a\u4fe1\u6a21\u578b\uff0c\u6211\u4eec\u901a\u5e38\u4e5f\u628a\u8fd9\u5957\u4e1c\u897f\u79f0\u4e3aTCP/IP\u6a21\u578b\u3002\u4e0e\u56fd\u9645\u6807\u51c6\u5316\u7ec4\u7ec7\u53d1\u5e03\u7684OSI/RM\u8fd9\u4e2a\u4e03\u5c42\u6a21\u578b\u4e0d\u540c\uff0cTCP/IP\u662f\u4e00\u4e2a\u56db\u5c42\u6a21\u578b\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8be5\u6a21\u578b\u5c06\u6211\u4eec\u4f7f\u7528\u7684\u7f51\u7edc\u4ece\u903b\u8f91\u4e0a\u5206\u89e3\u4e3a\u56db\u4e2a\u5c42\u6b21\uff0c\u81ea\u5e95\u5411\u4e0a\u4f9d\u6b21\u662f\uff1a\u7f51\u7edc\u63a5\u53e3\u5c42\u3001\u7f51\u7edc\u5c42\u3001\u4f20\u8f93\u5c42\u548c\u5e94\u7528\u5c42\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 IP\u901a\u5e38\u88ab\u7ffb\u8bd1\u4e3a\u7f51\u9645\u534f\u8bae\uff0c\u5b83\u670d\u52a1\u4e8e\u7f51\u7edc\u5c42\uff0c\u4e3b\u8981\u5b9e\u73b0\u4e86\u5bfb\u5740\u548c\u8def\u7531\u7684\u529f\u80fd\u3002\u63a5\u5165\u7f51\u7edc\u7684\u6bcf\u4e00\u53f0\u4e3b\u673a\u90fd\u9700\u8981\u6709\u81ea\u5df1\u7684IP\u5730\u5740\uff0cIP\u5730\u5740\u5c31\u662f\u4e3b\u673a\u5728\u8ba1\u7b97\u673a\u7f51\u7edc\u4e0a\u7684\u8eab\u4efd\u6807\u8bc6\u3002\u5f53\u7136\u7531\u4e8eIPv4\u5730\u5740\u7684\u532e\u4e4f\uff0c\u6211\u4eec\u5e73\u5e38\u5728\u5bb6\u91cc\u3001\u529e\u516c\u5ba4\u4ee5\u53ca\u5176\u4ed6\u53ef\u4ee5\u63a5\u5165\u7f51\u7edc\u7684\u516c\u5171\u533a\u57df\u4e0a\u7f51\u65f6\u83b7\u5f97\u7684IP\u5730\u5740\u5e76\u4e0d\u662f\u5168\u7403\u552f\u4e00\u7684IP\u5730\u5740\uff0c\u800c\u662f\u4e00\u4e2a \u5c40\u57df\u7f51\uff08LAN\uff09 \u4e2d\u7684\u5185\u90e8IP\u5730\u5740\uff0c\u901a\u8fc7 \u7f51\u7edc\u5730\u5740\u8f6c\u6362\uff08NAT\uff09\u670d\u52a1 \u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u7f51\u7edc\u7684\u8bbf\u95ee\u3002\u8ba1\u7b97\u673a\u7f51\u7edc\u4e0a\u6709\u5927\u91cf\u7684\u88ab\u6211\u4eec\u79f0\u4e3a\u201c \u8def\u7531\u5668 \u201d\u7684\u7f51\u7edc\u4e2d\u7ee7\u8bbe\u5907\uff0c\u5b83\u4eec\u4f1a\u5b58\u50a8\u8f6c\u53d1\u6211\u4eec\u53d1\u9001\u5230\u7f51\u7edc\u4e0a\u7684\u6570\u636e\u5206\u7ec4\uff0c\u8ba9\u4ece\u6e90\u5934\u53d1\u51fa\u7684\u6570\u636e\u6700\u7ec8\u80fd\u591f\u627e\u5230\u4f20\u9001\u5230\u76ee\u7684\u5730\u901a\u8def\uff0c\u8fd9\u9879\u529f\u80fd\u5c31\u662f\u6240\u8c13\u7684\u8def\u7531\u3002 TCP\u5168\u79f0\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff0c\u5b83\u662f\u57fa\u4e8eIP\u63d0\u4f9b\u7684\u5bfb\u5740\u548c\u8def\u7531\u670d\u52a1\u800c\u5efa\u7acb\u8d77\u6765\u7684\u8d1f\u8d23\u5b9e\u73b0\u7aef\u5230\u7aef\u53ef\u9760\u4f20\u8f93\u7684\u534f\u8bae\uff0c\u4e4b\u6240\u4ee5\u5c06TCP\u79f0\u4e3a\u53ef\u9760\u7684\u4f20\u8f93\u534f\u8bae\u662f\u56e0\u4e3aTCP\u5411\u8c03\u7528\u8005\u627f\u8bfa\u4e86\u4e09\u4ef6\u4e8b\u60c5\uff1a \u6570\u636e\u4e0d\u4f20\u4e22\u4e0d\u4f20\u9519\uff08\u5229\u7528\u63e1\u624b\u3001\u6821\u9a8c\u548c\u91cd\u4f20\u673a\u5236\u53ef\u4ee5\u5b9e\u73b0\uff09\u3002 \u6d41\u91cf\u63a7\u5236\uff08\u901a\u8fc7\u6ed1\u52a8\u7a97\u53e3\u5339\u914d\u6570\u636e\u53d1\u9001\u8005\u548c\u63a5\u6536\u8005\u4e4b\u95f4\u7684\u4f20\u8f93\u901f\u5ea6\uff09\u3002 \u62e5\u585e\u63a7\u5236\uff08\u901a\u8fc7RTT\u65f6\u95f4\u4ee5\u53ca\u5bf9\u6ed1\u52a8\u7a97\u53e3\u7684\u63a7\u5236\u7f13\u89e3\u7f51\u7edc\u62e5\u5835\uff09\u3002 \u7f51\u7edc\u5e94\u7528\u6a21\u5f0f C/S\u6a21\u5f0f\u548cB/S\u6a21\u5f0f\u3002\u8fd9\u91cc\u7684C\u6307\u7684\u662fClient\uff08\u5ba2\u6237\u7aef\uff09\uff0c\u901a\u5e38\u662f\u4e00\u4e2a\u9700\u8981\u5b89\u88c5\u5230\u67d0\u4e2a\u5bbf\u4e3b\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\uff1b\u800cB\u6307\u7684\u662fBrowser\uff08\u6d4f\u89c8\u5668\uff09\uff0c\u5b83\u51e0\u4e4e\u662f\u6240\u6709\u56fe\u5f62\u5316\u64cd\u4f5c\u7cfb\u7edf\u90fd\u9ed8\u8ba4\u5b89\u88c5\u4e86\u7684\u4e00\u4e2a\u5e94\u7528\u8f6f\u4ef6\uff1b\u901a\u8fc7C\u6216B\u90fd\u53ef\u4ee5\u5b9e\u73b0\u5bf9S\uff08\u670d\u52a1\u5668\uff09\u7684\u8bbf\u95ee\u3002\u5173\u4e8e\u4e8c\u8005\u7684\u6bd4\u8f83\u548c\u8ba8\u8bba\u5728\u7f51\u7edc\u4e0a\u6709\u4e00\u5927\u5806\u7684\u6587\u7ae0\uff0c\u5728\u6b64\u6211\u4eec\u5c31\u4e0d\u518d\u6d6a\u8d39\u7b14\u58a8\u4e86\u3002 \u53bb\u4e2d\u5fc3\u5316\u7684\u7f51\u7edc\u5e94\u7528\u6a21\u5f0f\u3002\u4e0d\u7ba1\u662fB/S\u8fd8\u662fC/S\u90fd\u9700\u8981\u670d\u52a1\u5668\u7684\u5b58\u5728\uff0c\u670d\u52a1\u5668\u5c31\u662f\u6574\u4e2a\u5e94\u7528\u6a21\u5f0f\u7684\u4e2d\u5fc3\uff0c\u800c\u53bb\u4e2d\u5fc3\u5316\u7684\u7f51\u7edc\u5e94\u7528\u901a\u5e38\u6ca1\u6709\u56fa\u5b9a\u7684\u670d\u52a1\u5668\u6216\u8005\u56fa\u5b9a\u7684\u5ba2\u6237\u7aef\uff0c\u6240\u6709\u5e94\u7528\u7684\u4f7f\u7528\u8005\u65e2\u53ef\u4ee5\u4f5c\u4e3a\u8d44\u6e90\u7684\u63d0\u4f9b\u8005\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u8d44\u6e90\u7684\u8bbf\u95ee\u8005\u3002 \u57fa\u4e8eHTTP\u534f\u8bae\u7684\u7f51\u7edc\u8d44\u6e90\u8bbf\u95ee HTTP\uff08\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff09 HTTP\u662f\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff08Hyper-Text Transfer Proctol\uff09\u7684\u7b80\u79f0\uff0c\u7ef4\u57fa\u767e\u79d1\u4e0a\u5bf9HTTP\u7684\u89e3\u91ca\u662f\uff1a\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\u662f\u4e00\u79cd\u7528\u4e8e\u5206\u5e03\u5f0f\u3001\u534f\u4f5c\u5f0f\u548c\u8d85\u5a92\u4f53\u4fe1\u606f\u7cfb\u7edf\u7684\u5e94\u7528\u5c42\u534f\u8bae\uff0c\u5b83\u662f \u4e07\u7ef4\u7f51 \u6570\u636e\u901a\u4fe1\u7684\u57fa\u7840\uff0c\u8bbe\u8ba1HTTP\u6700\u521d\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u63d0\u4f9b\u4e00\u79cd\u53d1\u5e03\u548c\u63a5\u6536 HTML \u9875\u9762\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7HTTP\u6216\u8005 HTTPS \uff08\u8d85\u6587\u672c\u4f20\u8f93\u5b89\u5168\u534f\u8bae\uff09\u8bf7\u6c42\u7684\u8d44\u6e90\u7531URI\uff08 \u7edf\u4e00\u8d44\u6e90\u6807\u8bc6\u7b26 \uff09\u6765\u6807\u8bc6\u3002\u5173\u4e8eHTTP\u7684\u66f4\u591a\u5185\u5bb9\uff0c\u6211\u4eec\u63a8\u8350\u9605\u8bfb\u962e\u4e00\u5cf0\u8001\u5e08\u7684 \u300aHTTP \u534f\u8bae\u5165\u95e8\u300b \uff0c\u7b80\u5355\u7684\u8bf4\uff0c\u901a\u8fc7HTTP\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u7f51\u7edc\u4e0a\u7684\uff08\u57fa\u4e8e\u5b57\u7b26\u7684\uff09\u8d44\u6e90\uff0c\u5f00\u53d1\u4e2d\u7ecf\u5e38\u4f1a\u7528\u5230\u7684\u7f51\u7edcAPI\uff08\u6709\u7684\u5730\u65b9\u4e5f\u79f0\u4e4b\u4e3a\u7f51\u7edc\u6570\u636e\u63a5\u53e3\uff09\u5c31\u662f\u57fa\u4e8eHTTP\u6765\u5b9e\u73b0\u6570\u636e\u4f20\u8f93\u7684\u3002 JSON\u683c\u5f0f JSON \uff08 J ava S cript O bject N otation\uff09\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u6570\u636e\u4ea4\u6362\u8bed\u8a00\uff0c\u8be5\u8bed\u8a00\u4ee5\u6613\u4e8e\u8ba9\u4eba\u9605\u8bfb\u7684\u6587\u5b57\uff08\u7eaf\u6587\u672c\uff09\u4e3a\u57fa\u7840\uff0c\u7528\u6765\u4f20\u8f93\u7531\u5c5e\u6027\u503c\u6216\u8005\u5e8f\u5217\u6027\u7684\u503c\u7ec4\u6210\u7684\u6570\u636e\u5bf9\u8c61\u3002\u5c3d\u7ba1JSON\u662f\u6700\u521d\u53ea\u662fJavascript\u4e2d\u4e00\u79cd\u521b\u5efa\u5bf9\u8c61\u7684\u5b57\u9762\u91cf\u8bed\u6cd5\uff0c\u4f46\u5b83\u5728\u5f53\u4e0b\u66f4\u662f\u4e00\u79cd\u72ec\u7acb\u4e8e\u8bed\u8a00\u7684\u6570\u636e\u683c\u5f0f\uff0c\u5f88\u591a\u7f16\u7a0b\u8bed\u8a00\u90fd\u652f\u6301JSON\u683c\u5f0f\u6570\u636e\u7684\u751f\u6210\u548c\u89e3\u6790\uff0cPython\u5185\u7f6e\u7684json\u6a21\u5757\u4e5f\u63d0\u4f9b\u4e86\u8fd9\u65b9\u9762\u7684\u529f\u80fd\u3002\u7531\u4e8eJSON\u662f\u7eaf\u6587\u672c\uff0c\u5b83\u548c XML \u4e00\u6837\u90fd\u9002\u7528\u4e8e\u5f02\u6784\u7cfb\u7edf\u4e4b\u95f4\u7684\u6570\u636e\u4ea4\u6362\uff0c\u800c\u76f8\u8f83\u4e8eXML\uff0cJSON\u663e\u5f97\u66f4\u52a0\u7684\u8f7b\u4fbf\u548c\u4f18\u96c5\u3002\u4e0b\u9762\u662f\u8868\u8fbe\u540c\u6837\u4fe1\u606f\u7684XML\u548cJSON\uff0c\u800cJSON\u7684\u4f18\u52bf\u662f\u76f8\u5f53\u76f4\u89c2\u7684\u3002 XML\u7684\u4f8b\u5b50\uff1a <?xml version=\"1.0\" encoding=\"UTF-8\"?> <message> <from>Alice</from> <to>Bob</to> <content>Will you marry me?</content> </message> JSON\u7684\u4f8b\u5b50\uff1a { 'from': 'Alice', 'to': 'Bob', 'content': 'Will you marry me?' } requests\u5e93 requests\u662f\u4e00\u4e2a\u57fa\u4e8eHTTP\u534f\u8bae\u6765\u4f7f\u7528\u7f51\u7edc\u7684\u7b2c\u4e09\u5e93\uff0c\u5176 \u5b98\u65b9\u7f51\u7ad9 \u6709\u8fd9\u6837\u7684\u4e00\u53e5\u4ecb\u7ecd\u5b83\u7684\u8bdd\uff1a\u201cRequests\u662f\u552f\u4e00\u7684\u4e00\u4e2a \u975e\u8f6c\u57fa\u56e0 \u7684Python HTTP\u5e93\uff0c\u4eba\u7c7b\u53ef\u4ee5\u5b89\u5168\u4eab\u7528\u3002\u201d\u7b80\u5355\u7684\u8bf4\uff0c\u4f7f\u7528requests\u5e93\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u7684\u4f7f\u7528HTTP\uff0c\u907f\u514d\u5b89\u5168\u7f3a\u9677\u3001\u5197\u4f59\u4ee3\u7801\u4ee5\u53ca\u201c\u91cd\u590d\u53d1\u660e\u8f6e\u5b50\u201d\uff08\u884c\u4e1a\u9ed1\u8bdd\uff0c\u901a\u5e38\u7528\u5728\u8f6f\u4ef6\u5de5\u7a0b\u9886\u57df\u8868\u793a\u91cd\u65b0\u521b\u9020\u4e00\u4e2a\u5df2\u6709\u7684\u6216\u662f\u65e9\u5df2\u88ab\u4f18\u5316\u904e\u7684\u57fa\u672c\u65b9\u6cd5\uff09\u3002\u524d\u9762\u7684\u6587\u7ae0\u4e2d\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u8fc7\u8fd9\u4e2a\u5e93\uff0c\u4e0b\u9762\u6211\u4eec\u8fd8\u662f\u901a\u8fc7requests\u6765\u5b9e\u73b0\u4e00\u4e2a\u8bbf\u95ee\u7f51\u7edc\u6570\u636e\u63a5\u53e3\u5e76\u4ece\u4e2d\u83b7\u53d6\u7f8e\u5973\u56fe\u7247\u4e0b\u8f7d\u94fe\u63a5\u7136\u540e\u4e0b\u8f7d\u7f8e\u5973\u56fe\u7247\u5230\u672c\u5730\u7684\u4f8b\u5b50\u7a0b\u5e8f\uff0c\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u4e86 \u5929\u884c\u6570\u636e \u63d0\u4f9b\u7684\u7f51\u7edcAPI\u3002 \u6211\u4eec\u53ef\u4ee5\u5148\u901a\u8fc7pip\u5b89\u88c5requests\u53ca\u5176\u4f9d\u8d56\u5e93\u3002 pip install requests \u5982\u679c\u4f7f\u7528PyCharm\u4f5c\u4e3a\u5f00\u53d1\u5de5\u5177\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728\u4ee3\u7801\u4e2d\u4e66\u5199 import requests \uff0c\u7136\u540e\u901a\u8fc7\u4ee3\u7801\u4fee\u590d\u529f\u80fd\u6765\u81ea\u52a8\u4e0b\u8f7d\u5b89\u88c5requests\u3002 from time import time from threading import Thread import requests # \u7ee7\u627fThread\u7c7b\u521b\u5efa\u81ea\u5b9a\u4e49\u7684\u7ebf\u7a0b\u7c7b class DownloadHanlder(Thread): def __init__(self, url): super().__init__() self.url = url def run(self): filename = self.url[self.url.rfind('/') + 1:] resp = requests.get(self.url) with open('/Users/Hao/' + filename, 'wb') as f: f.write(resp.content) def main(): # \u901a\u8fc7requests\u6a21\u5757\u7684get\u51fd\u6570\u83b7\u53d6\u7f51\u7edc\u8d44\u6e90 # \u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86\u5929\u884c\u6570\u636e\u63a5\u53e3\u63d0\u4f9b\u7684\u7f51\u7edcAPI # \u8981\u4f7f\u7528\u8be5\u6570\u636e\u63a5\u53e3\u9700\u8981\u5728\u5929\u884c\u6570\u636e\u7684\u7f51\u7ad9\u4e0a\u6ce8\u518c # \u7136\u540e\u7528\u81ea\u5df1\u7684Key\u66ff\u6362\u6389\u4e0b\u9762\u4ee3\u7801\u7684\u4e2dAPIKey\u5373\u53ef resp = requests.get( 'http://api.tianapi.com/meinv/?key=APIKey&num=10') # \u5c06\u670d\u52a1\u5668\u8fd4\u56de\u7684JSON\u683c\u5f0f\u7684\u6570\u636e\u89e3\u6790\u4e3a\u5b57\u5178 data_model = resp.json() for mm_dict in data_model['newslist']: url = mm_dict['picUrl'] # \u901a\u8fc7\u591a\u7ebf\u7a0b\u7684\u65b9\u5f0f\u5b9e\u73b0\u56fe\u7247\u4e0b\u8f7d DownloadHanlder(url).start() if __name__ == '__main__': main() \u57fa\u4e8e\u4f20\u8f93\u5c42\u534f\u8bae\u7684\u5957\u63a5\u5b57\u7f16\u7a0b \u5957\u63a5\u5b57\u8fd9\u4e2a\u8bcd\u5bf9\u5f88\u591a\u4e0d\u4e86\u89e3\u7f51\u7edc\u7f16\u7a0b\u7684\u4eba\u6765\u8bf4\u663e\u5f97\u975e\u5e38\u6666\u6da9\u548c\u964c\u751f\uff0c\u5176\u5b9e\u8bf4\u5f97\u901a\u4fd7\u70b9\uff0c\u5957\u63a5\u5b57\u5c31\u662f\u4e00\u5957\u7528 C\u8bed\u8a00 \u5199\u6210\u7684\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u5e93\uff0c\u4e3b\u8981\u7528\u4e8e\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u901a\u4fe1\u548c\u7f51\u7edc\u7f16\u7a0b\uff0c\u5728\u7f51\u7edc\u5e94\u7528\u5f00\u53d1\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002\u5728Python\u4e2d\u4e5f\u53ef\u4ee5\u57fa\u4e8e\u5957\u63a5\u5b57\u6765\u4f7f\u7528\u4f20\u8f93\u5c42\u63d0\u4f9b\u7684\u4f20\u8f93\u670d\u52a1\uff0c\u5e76\u57fa\u4e8e\u6b64\u5f00\u53d1\u81ea\u5df1\u7684\u7f51\u7edc\u5e94\u7528\u3002\u5b9e\u9645\u5f00\u53d1\u4e2d\u4f7f\u7528\u7684\u5957\u63a5\u5b57\u53ef\u4ee5\u5206\u4e3a\u4e09\u7c7b\uff1a\u6d41\u5957\u63a5\u5b57\uff08TCP\u5957\u63a5\u5b57\uff09\u3001\u6570\u636e\u62a5\u5957\u63a5\u5b57\u548c\u539f\u59cb\u5957\u63a5\u5b57\u3002 TCP\u5957\u63a5\u5b57 \u6240\u8c13TCP\u5957\u63a5\u5b57\u5c31\u662f\u4f7f\u7528TCP\u534f\u8bae\u63d0\u4f9b\u7684\u4f20\u8f93\u670d\u52a1\u6765\u5b9e\u73b0\u7f51\u7edc\u901a\u4fe1\u7684\u7f16\u7a0b\u63a5\u53e3\u3002\u5728Python\u4e2d\u53ef\u4ee5\u901a\u8fc7\u521b\u5efasocket\u5bf9\u8c61\u5e76\u6307\u5b9atype\u5c5e\u6027\u4e3aSOCK_STREAM\u6765\u4f7f\u7528TCP\u5957\u63a5\u5b57\u3002\u7531\u4e8e\u4e00\u53f0\u4e3b\u673a\u53ef\u80fd\u62e5\u6709\u591a\u4e2aIP\u5730\u5740\uff0c\u800c\u4e14\u5f88\u6709\u53ef\u80fd\u4f1a\u914d\u7f6e\u591a\u4e2a\u4e0d\u540c\u7684\u670d\u52a1\uff0c\u6240\u4ee5\u4f5c\u4e3a\u670d\u52a1\u5668\u7aef\u7684\u7a0b\u5e8f\uff0c\u9700\u8981\u5728\u521b\u5efa\u5957\u63a5\u5b57\u5bf9\u8c61\u540e\u5c06\u5176\u7ed1\u5b9a\u5230\u6307\u5b9a\u7684IP\u5730\u5740\u548c\u7aef\u53e3\u4e0a\u3002\u8fd9\u91cc\u7684\u7aef\u53e3\u5e76\u4e0d\u662f\u7269\u7406\u8bbe\u5907\u800c\u662f\u5bf9IP\u5730\u5740\u7684\u6269\u5c55\uff0c\u7528\u4e8e\u533a\u5206\u4e0d\u540c\u7684\u670d\u52a1\uff0c\u4f8b\u5982\u6211\u4eec\u901a\u5e38\u5c06HTTP\u670d\u52a1\u8ddf80\u7aef\u53e3\u7ed1\u5b9a\uff0c\u800cMySQL\u6570\u636e\u5e93\u670d\u52a1\u9ed8\u8ba4\u7ed1\u5b9a\u57283306\u7aef\u53e3\uff0c\u8fd9\u6837\u5f53\u670d\u52a1\u5668\u6536\u5230\u7528\u6237\u8bf7\u6c42\u65f6\u5c31\u53ef\u4ee5\u6839\u636e\u7aef\u53e3\u53f7\u6765\u786e\u5b9a\u5230\u5e95\u7528\u6237\u8bf7\u6c42\u7684\u662fHTTP\u670d\u52a1\u5668\u8fd8\u662f\u6570\u636e\u5e93\u670d\u52a1\u5668\u63d0\u4f9b\u7684\u670d\u52a1\u3002\u7aef\u53e3\u7684\u53d6\u503c\u8303\u56f4\u662f0~65535\uff0c\u800c1024\u4ee5\u4e0b\u7684\u7aef\u53e3\u6211\u4eec\u901a\u5e38\u79f0\u4e4b\u4e3a\u201c\u8457\u540d\u7aef\u53e3\u201d\uff08\u7559\u7ed9\u50cfFTP\u3001HTTP\u3001SMTP\u7b49\u201c\u8457\u540d\u670d\u52a1\u201d\u4f7f\u7528\u7684\u7aef\u53e3\uff0c\u6709\u7684\u5730\u65b9\u4e5f\u79f0\u4e4b\u4e3a\u201c\u5468\u77e5\u7aef\u53e3\u201d\uff09\uff0c\u81ea\u5b9a\u4e49\u7684\u670d\u52a1\u901a\u5e38\u4e0d\u4f7f\u7528\u8fd9\u4e9b\u7aef\u53e3\uff0c\u9664\u975e\u81ea\u5b9a\u4e49\u7684\u662fHTTP\u6216FTP\u8fd9\u6837\u7684\u8457\u540d\u670d\u52a1\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\u4e86\u4e00\u4e2a\u63d0\u4f9b\u65f6\u95f4\u65e5\u671f\u7684\u670d\u52a1\u5668\u3002 from socket import socket, SOCK_STREAM, AF_INET from datetime import datetime def main(): # 1.\u521b\u5efa\u5957\u63a5\u5b57\u5bf9\u8c61\u5e76\u6307\u5b9a\u4f7f\u7528\u54ea\u79cd\u4f20\u8f93\u670d\u52a1 # family=AF_INET - IPv4\u5730\u5740 # family=AF_INET6 - IPv6\u5730\u5740 # type=SOCK_STREAM - TCP\u5957\u63a5\u5b57 # type=SOCK_DGRAM - UDP\u5957\u63a5\u5b57 # type=SOCK_RAW - \u539f\u59cb\u5957\u63a5\u5b57 server = socket(family=AF_INET, type=SOCK_STREAM) # 2.\u7ed1\u5b9aIP\u5730\u5740\u548c\u7aef\u53e3(\u7aef\u53e3\u7528\u4e8e\u533a\u5206\u4e0d\u540c\u7684\u670d\u52a1) # \u540c\u4e00\u65f6\u95f4\u5728\u540c\u4e00\u4e2a\u7aef\u53e3\u4e0a\u53ea\u80fd\u7ed1\u5b9a\u4e00\u4e2a\u670d\u52a1\u5426\u5219\u62a5\u9519 server.bind(('192.168.1.2', 6789)) # 3.\u5f00\u542f\u76d1\u542c - \u76d1\u542c\u5ba2\u6237\u7aef\u8fde\u63a5\u5230\u670d\u52a1\u5668 # \u53c2\u6570512\u53ef\u4ee5\u7406\u89e3\u4e3a\u8fde\u63a5\u961f\u5217\u7684\u5927\u5c0f server.listen(512) print('\u670d\u52a1\u5668\u542f\u52a8\u5f00\u59cb\u76d1\u542c...') while True: # 4.\u901a\u8fc7\u5faa\u73af\u63a5\u6536\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u5e76\u4f5c\u51fa\u76f8\u5e94\u7684\u5904\u7406(\u63d0\u4f9b\u670d\u52a1) # accept\u65b9\u6cd5\u662f\u4e00\u4e2a\u963b\u585e\u65b9\u6cd5\u5982\u679c\u6ca1\u6709\u5ba2\u6237\u7aef\u8fde\u63a5\u5230\u670d\u52a1\u5668\u4ee3\u7801\u4e0d\u4f1a\u5411\u4e0b\u6267\u884c # accept\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4\u5176\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u5ba2\u6237\u7aef\u5bf9\u8c61 # \u7b2c\u4e8c\u4e2a\u5143\u7d20\u662f\u8fde\u63a5\u5230\u670d\u52a1\u5668\u7684\u5ba2\u6237\u7aef\u7684\u5730\u5740(\u7531IP\u548c\u7aef\u53e3\u4e24\u90e8\u5206\u6784\u6210) client, addr = server.accept() print(str(addr) + '\u8fde\u63a5\u5230\u4e86\u670d\u52a1\u5668.') # 5.\u53d1\u9001\u6570\u636e client.send(str(datetime.now()).encode('utf-8')) # 6.\u65ad\u5f00\u8fde\u63a5 client.close() if __name__ == '__main__': main() \u8fd0\u884c\u670d\u52a1\u5668\u7a0b\u5e8f\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Windows\u7cfb\u7edf\u7684telnet\u6765\u8bbf\u95ee\u8be5\u670d\u52a1\u5668\uff0c\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002 telnet 192.168.1.2 6789 \u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7Python\u7684\u7a0b\u5e8f\u6765\u5b9e\u73b0TCP\u5ba2\u6237\u7aef\u7684\u529f\u80fd\uff0c\u76f8\u8f83\u4e8e\u5b9e\u73b0\u670d\u52a1\u5668\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u5ba2\u6237\u7aef\u7a0b\u5e8f\u5c31\u7b80\u5355\u591a\u4e86\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 from socket import socket def main(): # 1.\u521b\u5efa\u5957\u63a5\u5b57\u5bf9\u8c61\u9ed8\u8ba4\u4f7f\u7528IPv4\u548cTCP\u534f\u8bae client = socket() # 2.\u8fde\u63a5\u5230\u670d\u52a1\u5668(\u9700\u8981\u6307\u5b9aIP\u5730\u5740\u548c\u7aef\u53e3) client.connect(('192.168.1.2', 6789)) # 3.\u4ece\u670d\u52a1\u5668\u63a5\u6536\u6570\u636e print(client.recv(1024).decode('utf-8')) client.close() if __name__ == '__main__': main() \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e0a\u9762\u7684\u670d\u52a1\u5668\u5e76\u6ca1\u6709\u4f7f\u7528\u591a\u7ebf\u7a0b\u6216\u8005\u5f02\u6b65I/O\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u5f53\u670d\u52a1\u5668\u4e0e\u4e00\u4e2a\u5ba2\u6237\u7aef\u5904\u4e8e\u901a\u4fe1\u72b6\u6001\u65f6\uff0c\u5176\u4ed6\u7684\u5ba2\u6237\u7aef\u53ea\u80fd\u6392\u961f\u7b49\u5f85\u3002\u5f88\u663e\u7136\uff0c\u8fd9\u6837\u7684\u670d\u52a1\u5668\u5e76\u4e0d\u80fd\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\uff0c\u6211\u4eec\u9700\u8981\u7684\u670d\u52a1\u5668\u662f\u80fd\u591f\u540c\u65f6\u63a5\u7eb3\u548c\u5904\u7406\u591a\u4e2a\u7528\u6237\u8bf7\u6c42\u7684\u3002\u4e0b\u9762\u6211\u4eec\u6765\u8bbe\u8ba1\u4e00\u4e2a\u4f7f\u7528\u591a\u7ebf\u7a0b\u6280\u672f\u5904\u7406\u591a\u4e2a\u7528\u6237\u8bf7\u6c42\u7684\u670d\u52a1\u5668\uff0c\u8be5\u670d\u52a1\u5668\u4f1a\u5411\u8fde\u63a5\u5230\u670d\u52a1\u5668\u7684\u5ba2\u6237\u7aef\u53d1\u9001\u4e00\u5f20\u56fe\u7247\u3002 \u670d\u52a1\u5668\u7aef\u4ee3\u7801\uff1a from socket import socket, SOCK_STREAM, AF_INET from base64 import b64encode from json import dumps from threading import Thread def main(): # \u81ea\u5b9a\u4e49\u7ebf\u7a0b\u7c7b class FileTransferHandler(Thread): def __init__(self, cclient): super().__init__() self.cclient = cclient def run(self): my_dict = {} my_dict['filename'] = 'guido.jpg' # JSON\u662f\u7eaf\u6587\u672c\u4e0d\u80fd\u643a\u5e26\u4e8c\u8fdb\u5236\u6570\u636e # \u6240\u4ee5\u56fe\u7247\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u8981\u5904\u7406\u6210base64\u7f16\u7801 my_dict['filedata'] = data # \u901a\u8fc7dumps\u51fd\u6570\u5c06\u5b57\u5178\u5904\u7406\u6210JSON\u5b57\u7b26\u4e32 json_str = dumps(my_dict) # \u53d1\u9001JSON\u5b57\u7b26\u4e32 self.cclient.send(json_str.encode('utf-8')) self.cclient.close() # 1.\u521b\u5efa\u5957\u63a5\u5b57\u5bf9\u8c61\u5e76\u6307\u5b9a\u4f7f\u7528\u54ea\u79cd\u4f20\u8f93\u670d\u52a1 server = socket() # 2.\u7ed1\u5b9aIP\u5730\u5740\u548c\u7aef\u53e3(\u533a\u5206\u4e0d\u540c\u7684\u670d\u52a1) server.bind(('192.168.1.2', 5566)) # 3.\u5f00\u542f\u76d1\u542c - \u76d1\u542c\u5ba2\u6237\u7aef\u8fde\u63a5\u5230\u670d\u52a1\u5668 server.listen(512) print('\u670d\u52a1\u5668\u542f\u52a8\u5f00\u59cb\u76d1\u542c...') with open('guido.jpg', 'rb') as f: # \u5c06\u4e8c\u8fdb\u5236\u6570\u636e\u5904\u7406\u6210base64\u518d\u89e3\u7801\u6210\u5b57\u7b26\u4e32 data = b64encode(f.read()).decode('utf-8') while True: client, addr = server.accept() # \u542f\u52a8\u4e00\u4e2a\u7ebf\u7a0b\u6765\u5904\u7406\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42 FileTransferHandler(client).start() if __name__ == '__main__': main() \u5ba2\u6237\u7aef\u4ee3\u7801\uff1a from socket import socket from json import loads from base64 import b64decode def main(): client = socket() client.connect(('192.168.1.2', 5566)) # \u5b9a\u4e49\u4e00\u4e2a\u4fdd\u5b58\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u5bf9\u8c61 in_data = bytes() # \u7531\u4e8e\u4e0d\u77e5\u9053\u670d\u52a1\u5668\u53d1\u9001\u7684\u6570\u636e\u6709\u591a\u5927\u6bcf\u6b21\u63a5\u65361024\u5b57\u8282 data = client.recv(1024) while data: # \u5c06\u6536\u5230\u7684\u6570\u636e\u62fc\u63a5\u8d77\u6765 in_data += data data = client.recv(1024) # \u5c06\u6536\u5230\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u89e3\u7801\u6210JSON\u5b57\u7b26\u4e32\u5e76\u8f6c\u6362\u6210\u5b57\u5178 # loads\u51fd\u6570\u7684\u4f5c\u7528\u5c31\u662f\u5c06JSON\u5b57\u7b26\u4e32\u8f6c\u6210\u5b57\u5178\u5bf9\u8c61 my_dict = loads(in_data.decode('utf-8')) filename = my_dict['filename'] filedata = my_dict['filedata'].encode('utf-8') with open('/Users/Hao/' + filename, 'wb') as f: # \u5c06base64\u683c\u5f0f\u7684\u6570\u636e\u89e3\u7801\u6210\u4e8c\u8fdb\u5236\u6570\u636e\u5e76\u5199\u5165\u6587\u4ef6 f.write(b64decode(filedata)) print('\u56fe\u7247\u5df2\u4fdd\u5b58.') if __name__ == '__main__': main() \u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86JSON\u4f5c\u4e3a\u6570\u636e\u4f20\u8f93\u7684\u683c\u5f0f\uff08\u901a\u8fc7JSON\u683c\u5f0f\u5bf9\u4f20\u8f93\u7684\u6570\u636e\u8fdb\u884c\u4e86\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u7684\u64cd\u4f5c\uff09\uff0c\u4f46\u662fJSON\u5e76\u4e0d\u80fd\u643a\u5e26\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u56e0\u6b64\u5bf9\u56fe\u7247\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u8fdb\u884c\u4e86Base64\u7f16\u7801\u7684\u5904\u7406\u3002Base64\u662f\u4e00\u79cd\u752864\u4e2a\u5b57\u7b26\u8868\u793a\u6240\u6709\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u7f16\u7801\u65b9\u5f0f\uff0c\u901a\u8fc7\u5c06\u4e8c\u8fdb\u5236\u6570\u636e\u6bcf6\u4f4d\u4e00\u7ec4\u7684\u65b9\u5f0f\u91cd\u65b0\u7ec4\u7ec7\uff0c\u521a\u597d\u53ef\u4ee5\u4f7f\u75280~9\u7684\u6570\u5b57\u3001\u5927\u5c0f\u5199\u5b57\u6bcd\u4ee5\u53ca\u201c+\u201d\u548c\u201c/\u201d\u603b\u517164\u4e2a\u5b57\u7b26\u8868\u793a\u4ece 000000 \u5230 111111 \u768464\u79cd\u72b6\u6001\u3002 \u7ef4\u57fa\u767e\u79d1 \u4e0a\u6709\u5173\u4e8eBase64\u7f16\u7801\u7684\u8be6\u7ec6\u8bb2\u89e3\uff0c\u4e0d\u719f\u6089Base64\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u9605\u8bfb\u3002 \u8bf4\u660e \uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u4e3b\u8981\u4e3a\u4e86\u8bb2\u89e3\u7f51\u7edc\u7f16\u7a0b\u7684\u76f8\u5173\u5185\u5bb9\u56e0\u6b64\u5e76\u6ca1\u6709\u5bf9\u5f02\u5e38\u72b6\u51b5\u8fdb\u884c\u5904\u7406\uff0c\u8bf7\u8bfb\u8005\u81ea\u884c\u6dfb\u52a0\u5f02\u5e38\u5904\u7406\u4ee3\u7801\u6765\u589e\u5f3a\u7a0b\u5e8f\u7684\u5065\u58ee\u6027\u3002 UDP\u5957\u63a5\u5b57 \u4f20\u8f93\u5c42\u9664\u4e86\u6709\u53ef\u9760\u7684\u4f20\u8f93\u534f\u8baeTCP\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u79cd\u975e\u5e38\u8f7b\u4fbf\u7684\u4f20\u8f93\u534f\u8bae\u53eb\u505a\u7528\u6237\u6570\u636e\u62a5\u534f\u8bae\uff0c\u7b80\u79f0UDP\u3002TCP\u548cUDP\u90fd\u662f\u63d0\u4f9b\u7aef\u5230\u7aef\u4f20\u8f93\u670d\u52a1\u7684\u534f\u8bae\uff0c\u4e8c\u8005\u7684\u5dee\u522b\u5c31\u5982\u540c\u6253\u7535\u8bdd\u548c\u53d1\u77ed\u4fe1\u7684\u533a\u522b\uff0c\u540e\u8005\u4e0d\u5bf9\u4f20\u8f93\u7684\u53ef\u9760\u6027\u548c\u53ef\u8fbe\u6027\u505a\u51fa\u4efb\u4f55\u627f\u8bfa\u4ece\u800c\u907f\u514d\u4e86TCP\u4e2d\u63e1\u624b\u548c\u91cd\u4f20\u7684\u5f00\u9500\uff0c\u6240\u4ee5\u5728\u5f3a\u8c03\u6027\u80fd\u548c\u800c\u4e0d\u662f\u6570\u636e\u5b8c\u6574\u6027\u7684\u573a\u666f\u4e2d\uff08\u4f8b\u5982\u4f20\u8f93\u7f51\u7edc\u97f3\u89c6\u9891\u6570\u636e\uff09\uff0cUDP\u53ef\u80fd\u662f\u66f4\u597d\u7684\u9009\u62e9\u3002\u53ef\u80fd\u5927\u5bb6\u4f1a\u6ce8\u610f\u5230\u4e00\u4e2a\u73b0\u8c61\uff0c\u5c31\u662f\u5728\u89c2\u770b\u7f51\u7edc\u89c6\u9891\u65f6\uff0c\u6709\u65f6\u4f1a\u51fa\u73b0\u5361\u987f\uff0c\u6709\u65f6\u4f1a\u51fa\u73b0\u82b1\u5c4f\uff0c\u8fd9\u65e0\u975e\u5c31\u662f\u90e8\u5206\u6570\u636e\u4f20\u4e22\u6216\u4f20\u9519\u9020\u6210\u7684\u3002\u5728Python\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528UDP\u5957\u63a5\u5b57\u6765\u521b\u5efa\u7f51\u7edc\u5e94\u7528\uff0c\u5bf9\u6b64\u6211\u4eec\u4e0d\u8fdb\u884c\u8d58\u8ff0\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002","title":"\u7b2c\u5341\u56db\u5929"},{"location":"new/14-A%E3%80%81%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/#_1","text":"","title":"\u7f51\u7edc\u7f16\u7a0b\u5165\u95e8"},{"location":"new/14-A%E3%80%81%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/#_2","text":"\u8ba1\u7b97\u673a\u7f51\u7edc\u662f\u72ec\u7acb\u81ea\u4e3b\u7684\u8ba1\u7b97\u673a\u4e92\u8054\u800c\u6210\u7684\u7cfb\u7edf\u7684\u603b\u79f0\uff0c\u7ec4\u5efa\u8ba1\u7b97\u673a\u7f51\u7edc\u6700\u4e3b\u8981\u7684\u76ee\u7684\u662f\u5b9e\u73b0\u591a\u53f0\u8ba1\u7b97\u673a\u4e4b\u95f4\u7684\u901a\u4fe1\u548c\u8d44\u6e90\u5171\u4eab\u3002\u4eca\u5929\u8ba1\u7b97\u673a\u7f51\u7edc\u4e2d\u7684\u8bbe\u5907\u548c\u8ba1\u7b97\u673a\u7f51\u7edc\u7684\u7528\u6237\u5df2\u7ecf\u591a\u5f97\u4e0d\u53ef\u8ba1\u6570\uff0c\u800c\u8ba1\u7b97\u673a\u7f51\u7edc\u4e5f\u53ef\u4ee5\u79f0\u5f97\u4e0a\u662f\u4e00\u4e2a\u201c\u590d\u6742\u5de8\u7cfb\u7edf\u201d\uff0c\u5bf9\u4e8e\u8fd9\u6837\u7684\u7cfb\u7edf\uff0c\u6211\u4eec\u4e0d\u53ef\u80fd\u7528\u4e00\u4e24\u7bc7\u6587\u7ae0\u628a\u5b83\u8bb2\u6e05\u695a\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u9605\u8bfbAndrew S.Tanenbaum\u8001\u5e08\u7684\u7ecf\u5178\u4e4b\u4f5c\u300a\u8ba1\u7b97\u673a\u7f51\u7edc\u300b\u6216Kurose\u548cRoss\u8001\u5e08\u5408\u8457\u7684\u300a\u8ba1\u7b97\u673a\u7f51\u7edc:\u81ea\u9876\u5411\u4e0b\u65b9\u6cd5\u300b\u6765\u4e86\u89e3\u8ba1\u7b97\u673a\u7f51\u7edc\u7684\u76f8\u5173\u77e5\u8bc6\u3002","title":"\u8ba1\u7b97\u673a\u7f51\u7edc\u57fa\u7840"},{"location":"new/14-A%E3%80%81%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/#_3","text":"1960s - \u7f8e\u56fd\u56fd\u9632\u90e8ARPANET\u9879\u76ee\u95ee\u4e16\uff0c\u5960\u5b9a\u4e86\u5206\u7ec4\u4ea4\u6362\u7f51\u7edc\u7684\u57fa\u7840\u3002 1980s - \u56fd\u9645\u6807\u51c6\u5316\u7ec4\u7ec7\uff08ISO\uff09\u53d1\u5e03OSI/RM\uff0c\u5960\u5b9a\u4e86\u7f51\u7edc\u6280\u672f\u6807\u51c6\u5316\u7684\u57fa\u7840\u3002 1990s - \u82f1\u56fd\u4eba \u8482\u59c6\u00b7\u4f2f\u7eb3\u65af-\u674e \u53d1\u660e\u4e86\u56fe\u5f62\u5316\u7684\u6d4f\u89c8\u5668\uff0c\u6d4f\u89c8\u5668\u7684\u7b80\u5355\u6613\u7528\u6027\u4f7f\u5f97\u8ba1\u7b97\u673a\u7f51\u7edc\u8fc5\u901f\u88ab\u666e\u53ca\u3002 \u5728\u6ca1\u6709\u6d4f\u89c8\u5668\u7684\u5e74\u4ee3\uff0c\u4e0a\u7f51\u662f\u8fd9\u6837\u7684\u3002 \u6709\u4e86\u6d4f\u89c8\u5668\u4ee5\u540e\uff0c\u4e0a\u7f51\u662f\u8fd9\u6837\u7684\u3002","title":"\u8ba1\u7b97\u673a\u7f51\u7edc\u53d1\u5c55\u53f2"},{"location":"new/14-A%E3%80%81%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/#tcpip","text":"\u5b9e\u73b0\u7f51\u7edc\u901a\u4fe1\u7684\u57fa\u7840\u662f\u7f51\u7edc\u901a\u4fe1\u534f\u8bae\uff0c\u8fd9\u4e9b\u534f\u8bae\u901a\u5e38\u662f\u7531 \u4e92\u8054\u7f51\u5de5\u7a0b\u4efb\u52a1\u7ec4 \uff08IETF\uff09\u5236\u5b9a\u7684\u3002\u6240\u8c13\u201c\u534f\u8bae\u201d\u5c31\u662f\u901a\u4fe1\u8ba1\u7b97\u673a\u53cc\u65b9\u5fc5\u987b\u5171\u540c\u9075\u4ece\u7684\u4e00\u7ec4\u7ea6\u5b9a\uff0c\u4f8b\u5982\u600e\u6837\u5efa\u7acb\u8fde\u63a5\u3001\u600e\u6837\u4e92\u76f8\u8bc6\u522b\u7b49\uff0c\u7f51\u7edc\u534f\u8bae\u7684\u4e09\u8981\u7d20\u662f\uff1a\u8bed\u6cd5\u3001\u8bed\u4e49\u548c\u65f6\u5e8f\u3002\u6784\u6210\u6211\u4eec\u4eca\u5929\u4f7f\u7528\u7684Internet\u7684\u57fa\u7840\u7684\u662fTCP/IP\u534f\u8bae\u65cf\uff0c\u6240\u8c13\u534f\u8bae\u65cf\u5c31\u662f\u4e00\u7cfb\u5217\u7684\u534f\u8bae\u53ca\u5176\u6784\u6210\u7684\u901a\u4fe1\u6a21\u578b\uff0c\u6211\u4eec\u901a\u5e38\u4e5f\u628a\u8fd9\u5957\u4e1c\u897f\u79f0\u4e3aTCP/IP\u6a21\u578b\u3002\u4e0e\u56fd\u9645\u6807\u51c6\u5316\u7ec4\u7ec7\u53d1\u5e03\u7684OSI/RM\u8fd9\u4e2a\u4e03\u5c42\u6a21\u578b\u4e0d\u540c\uff0cTCP/IP\u662f\u4e00\u4e2a\u56db\u5c42\u6a21\u578b\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8be5\u6a21\u578b\u5c06\u6211\u4eec\u4f7f\u7528\u7684\u7f51\u7edc\u4ece\u903b\u8f91\u4e0a\u5206\u89e3\u4e3a\u56db\u4e2a\u5c42\u6b21\uff0c\u81ea\u5e95\u5411\u4e0a\u4f9d\u6b21\u662f\uff1a\u7f51\u7edc\u63a5\u53e3\u5c42\u3001\u7f51\u7edc\u5c42\u3001\u4f20\u8f93\u5c42\u548c\u5e94\u7528\u5c42\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 IP\u901a\u5e38\u88ab\u7ffb\u8bd1\u4e3a\u7f51\u9645\u534f\u8bae\uff0c\u5b83\u670d\u52a1\u4e8e\u7f51\u7edc\u5c42\uff0c\u4e3b\u8981\u5b9e\u73b0\u4e86\u5bfb\u5740\u548c\u8def\u7531\u7684\u529f\u80fd\u3002\u63a5\u5165\u7f51\u7edc\u7684\u6bcf\u4e00\u53f0\u4e3b\u673a\u90fd\u9700\u8981\u6709\u81ea\u5df1\u7684IP\u5730\u5740\uff0cIP\u5730\u5740\u5c31\u662f\u4e3b\u673a\u5728\u8ba1\u7b97\u673a\u7f51\u7edc\u4e0a\u7684\u8eab\u4efd\u6807\u8bc6\u3002\u5f53\u7136\u7531\u4e8eIPv4\u5730\u5740\u7684\u532e\u4e4f\uff0c\u6211\u4eec\u5e73\u5e38\u5728\u5bb6\u91cc\u3001\u529e\u516c\u5ba4\u4ee5\u53ca\u5176\u4ed6\u53ef\u4ee5\u63a5\u5165\u7f51\u7edc\u7684\u516c\u5171\u533a\u57df\u4e0a\u7f51\u65f6\u83b7\u5f97\u7684IP\u5730\u5740\u5e76\u4e0d\u662f\u5168\u7403\u552f\u4e00\u7684IP\u5730\u5740\uff0c\u800c\u662f\u4e00\u4e2a \u5c40\u57df\u7f51\uff08LAN\uff09 \u4e2d\u7684\u5185\u90e8IP\u5730\u5740\uff0c\u901a\u8fc7 \u7f51\u7edc\u5730\u5740\u8f6c\u6362\uff08NAT\uff09\u670d\u52a1 \u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u7f51\u7edc\u7684\u8bbf\u95ee\u3002\u8ba1\u7b97\u673a\u7f51\u7edc\u4e0a\u6709\u5927\u91cf\u7684\u88ab\u6211\u4eec\u79f0\u4e3a\u201c \u8def\u7531\u5668 \u201d\u7684\u7f51\u7edc\u4e2d\u7ee7\u8bbe\u5907\uff0c\u5b83\u4eec\u4f1a\u5b58\u50a8\u8f6c\u53d1\u6211\u4eec\u53d1\u9001\u5230\u7f51\u7edc\u4e0a\u7684\u6570\u636e\u5206\u7ec4\uff0c\u8ba9\u4ece\u6e90\u5934\u53d1\u51fa\u7684\u6570\u636e\u6700\u7ec8\u80fd\u591f\u627e\u5230\u4f20\u9001\u5230\u76ee\u7684\u5730\u901a\u8def\uff0c\u8fd9\u9879\u529f\u80fd\u5c31\u662f\u6240\u8c13\u7684\u8def\u7531\u3002 TCP\u5168\u79f0\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff0c\u5b83\u662f\u57fa\u4e8eIP\u63d0\u4f9b\u7684\u5bfb\u5740\u548c\u8def\u7531\u670d\u52a1\u800c\u5efa\u7acb\u8d77\u6765\u7684\u8d1f\u8d23\u5b9e\u73b0\u7aef\u5230\u7aef\u53ef\u9760\u4f20\u8f93\u7684\u534f\u8bae\uff0c\u4e4b\u6240\u4ee5\u5c06TCP\u79f0\u4e3a\u53ef\u9760\u7684\u4f20\u8f93\u534f\u8bae\u662f\u56e0\u4e3aTCP\u5411\u8c03\u7528\u8005\u627f\u8bfa\u4e86\u4e09\u4ef6\u4e8b\u60c5\uff1a \u6570\u636e\u4e0d\u4f20\u4e22\u4e0d\u4f20\u9519\uff08\u5229\u7528\u63e1\u624b\u3001\u6821\u9a8c\u548c\u91cd\u4f20\u673a\u5236\u53ef\u4ee5\u5b9e\u73b0\uff09\u3002 \u6d41\u91cf\u63a7\u5236\uff08\u901a\u8fc7\u6ed1\u52a8\u7a97\u53e3\u5339\u914d\u6570\u636e\u53d1\u9001\u8005\u548c\u63a5\u6536\u8005\u4e4b\u95f4\u7684\u4f20\u8f93\u901f\u5ea6\uff09\u3002 \u62e5\u585e\u63a7\u5236\uff08\u901a\u8fc7RTT\u65f6\u95f4\u4ee5\u53ca\u5bf9\u6ed1\u52a8\u7a97\u53e3\u7684\u63a7\u5236\u7f13\u89e3\u7f51\u7edc\u62e5\u5835\uff09\u3002","title":"TCP/IP\u6a21\u578b"},{"location":"new/14-A%E3%80%81%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/#_4","text":"C/S\u6a21\u5f0f\u548cB/S\u6a21\u5f0f\u3002\u8fd9\u91cc\u7684C\u6307\u7684\u662fClient\uff08\u5ba2\u6237\u7aef\uff09\uff0c\u901a\u5e38\u662f\u4e00\u4e2a\u9700\u8981\u5b89\u88c5\u5230\u67d0\u4e2a\u5bbf\u4e3b\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\uff1b\u800cB\u6307\u7684\u662fBrowser\uff08\u6d4f\u89c8\u5668\uff09\uff0c\u5b83\u51e0\u4e4e\u662f\u6240\u6709\u56fe\u5f62\u5316\u64cd\u4f5c\u7cfb\u7edf\u90fd\u9ed8\u8ba4\u5b89\u88c5\u4e86\u7684\u4e00\u4e2a\u5e94\u7528\u8f6f\u4ef6\uff1b\u901a\u8fc7C\u6216B\u90fd\u53ef\u4ee5\u5b9e\u73b0\u5bf9S\uff08\u670d\u52a1\u5668\uff09\u7684\u8bbf\u95ee\u3002\u5173\u4e8e\u4e8c\u8005\u7684\u6bd4\u8f83\u548c\u8ba8\u8bba\u5728\u7f51\u7edc\u4e0a\u6709\u4e00\u5927\u5806\u7684\u6587\u7ae0\uff0c\u5728\u6b64\u6211\u4eec\u5c31\u4e0d\u518d\u6d6a\u8d39\u7b14\u58a8\u4e86\u3002 \u53bb\u4e2d\u5fc3\u5316\u7684\u7f51\u7edc\u5e94\u7528\u6a21\u5f0f\u3002\u4e0d\u7ba1\u662fB/S\u8fd8\u662fC/S\u90fd\u9700\u8981\u670d\u52a1\u5668\u7684\u5b58\u5728\uff0c\u670d\u52a1\u5668\u5c31\u662f\u6574\u4e2a\u5e94\u7528\u6a21\u5f0f\u7684\u4e2d\u5fc3\uff0c\u800c\u53bb\u4e2d\u5fc3\u5316\u7684\u7f51\u7edc\u5e94\u7528\u901a\u5e38\u6ca1\u6709\u56fa\u5b9a\u7684\u670d\u52a1\u5668\u6216\u8005\u56fa\u5b9a\u7684\u5ba2\u6237\u7aef\uff0c\u6240\u6709\u5e94\u7528\u7684\u4f7f\u7528\u8005\u65e2\u53ef\u4ee5\u4f5c\u4e3a\u8d44\u6e90\u7684\u63d0\u4f9b\u8005\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u8d44\u6e90\u7684\u8bbf\u95ee\u8005\u3002","title":"\u7f51\u7edc\u5e94\u7528\u6a21\u5f0f"},{"location":"new/14-A%E3%80%81%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/#http","text":"","title":"\u57fa\u4e8eHTTP\u534f\u8bae\u7684\u7f51\u7edc\u8d44\u6e90\u8bbf\u95ee"},{"location":"new/14-A%E3%80%81%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/#http_1","text":"HTTP\u662f\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff08Hyper-Text Transfer Proctol\uff09\u7684\u7b80\u79f0\uff0c\u7ef4\u57fa\u767e\u79d1\u4e0a\u5bf9HTTP\u7684\u89e3\u91ca\u662f\uff1a\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\u662f\u4e00\u79cd\u7528\u4e8e\u5206\u5e03\u5f0f\u3001\u534f\u4f5c\u5f0f\u548c\u8d85\u5a92\u4f53\u4fe1\u606f\u7cfb\u7edf\u7684\u5e94\u7528\u5c42\u534f\u8bae\uff0c\u5b83\u662f \u4e07\u7ef4\u7f51 \u6570\u636e\u901a\u4fe1\u7684\u57fa\u7840\uff0c\u8bbe\u8ba1HTTP\u6700\u521d\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u63d0\u4f9b\u4e00\u79cd\u53d1\u5e03\u548c\u63a5\u6536 HTML \u9875\u9762\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7HTTP\u6216\u8005 HTTPS \uff08\u8d85\u6587\u672c\u4f20\u8f93\u5b89\u5168\u534f\u8bae\uff09\u8bf7\u6c42\u7684\u8d44\u6e90\u7531URI\uff08 \u7edf\u4e00\u8d44\u6e90\u6807\u8bc6\u7b26 \uff09\u6765\u6807\u8bc6\u3002\u5173\u4e8eHTTP\u7684\u66f4\u591a\u5185\u5bb9\uff0c\u6211\u4eec\u63a8\u8350\u9605\u8bfb\u962e\u4e00\u5cf0\u8001\u5e08\u7684 \u300aHTTP \u534f\u8bae\u5165\u95e8\u300b \uff0c\u7b80\u5355\u7684\u8bf4\uff0c\u901a\u8fc7HTTP\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u7f51\u7edc\u4e0a\u7684\uff08\u57fa\u4e8e\u5b57\u7b26\u7684\uff09\u8d44\u6e90\uff0c\u5f00\u53d1\u4e2d\u7ecf\u5e38\u4f1a\u7528\u5230\u7684\u7f51\u7edcAPI\uff08\u6709\u7684\u5730\u65b9\u4e5f\u79f0\u4e4b\u4e3a\u7f51\u7edc\u6570\u636e\u63a5\u53e3\uff09\u5c31\u662f\u57fa\u4e8eHTTP\u6765\u5b9e\u73b0\u6570\u636e\u4f20\u8f93\u7684\u3002","title":"HTTP\uff08\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff09"},{"location":"new/14-A%E3%80%81%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/#json","text":"JSON \uff08 J ava S cript O bject N otation\uff09\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u6570\u636e\u4ea4\u6362\u8bed\u8a00\uff0c\u8be5\u8bed\u8a00\u4ee5\u6613\u4e8e\u8ba9\u4eba\u9605\u8bfb\u7684\u6587\u5b57\uff08\u7eaf\u6587\u672c\uff09\u4e3a\u57fa\u7840\uff0c\u7528\u6765\u4f20\u8f93\u7531\u5c5e\u6027\u503c\u6216\u8005\u5e8f\u5217\u6027\u7684\u503c\u7ec4\u6210\u7684\u6570\u636e\u5bf9\u8c61\u3002\u5c3d\u7ba1JSON\u662f\u6700\u521d\u53ea\u662fJavascript\u4e2d\u4e00\u79cd\u521b\u5efa\u5bf9\u8c61\u7684\u5b57\u9762\u91cf\u8bed\u6cd5\uff0c\u4f46\u5b83\u5728\u5f53\u4e0b\u66f4\u662f\u4e00\u79cd\u72ec\u7acb\u4e8e\u8bed\u8a00\u7684\u6570\u636e\u683c\u5f0f\uff0c\u5f88\u591a\u7f16\u7a0b\u8bed\u8a00\u90fd\u652f\u6301JSON\u683c\u5f0f\u6570\u636e\u7684\u751f\u6210\u548c\u89e3\u6790\uff0cPython\u5185\u7f6e\u7684json\u6a21\u5757\u4e5f\u63d0\u4f9b\u4e86\u8fd9\u65b9\u9762\u7684\u529f\u80fd\u3002\u7531\u4e8eJSON\u662f\u7eaf\u6587\u672c\uff0c\u5b83\u548c XML \u4e00\u6837\u90fd\u9002\u7528\u4e8e\u5f02\u6784\u7cfb\u7edf\u4e4b\u95f4\u7684\u6570\u636e\u4ea4\u6362\uff0c\u800c\u76f8\u8f83\u4e8eXML\uff0cJSON\u663e\u5f97\u66f4\u52a0\u7684\u8f7b\u4fbf\u548c\u4f18\u96c5\u3002\u4e0b\u9762\u662f\u8868\u8fbe\u540c\u6837\u4fe1\u606f\u7684XML\u548cJSON\uff0c\u800cJSON\u7684\u4f18\u52bf\u662f\u76f8\u5f53\u76f4\u89c2\u7684\u3002 XML\u7684\u4f8b\u5b50\uff1a <?xml version=\"1.0\" encoding=\"UTF-8\"?> <message> <from>Alice</from> <to>Bob</to> <content>Will you marry me?</content> </message> JSON\u7684\u4f8b\u5b50\uff1a { 'from': 'Alice', 'to': 'Bob', 'content': 'Will you marry me?' }","title":"JSON\u683c\u5f0f"},{"location":"new/14-A%E3%80%81%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/#requests","text":"requests\u662f\u4e00\u4e2a\u57fa\u4e8eHTTP\u534f\u8bae\u6765\u4f7f\u7528\u7f51\u7edc\u7684\u7b2c\u4e09\u5e93\uff0c\u5176 \u5b98\u65b9\u7f51\u7ad9 \u6709\u8fd9\u6837\u7684\u4e00\u53e5\u4ecb\u7ecd\u5b83\u7684\u8bdd\uff1a\u201cRequests\u662f\u552f\u4e00\u7684\u4e00\u4e2a \u975e\u8f6c\u57fa\u56e0 \u7684Python HTTP\u5e93\uff0c\u4eba\u7c7b\u53ef\u4ee5\u5b89\u5168\u4eab\u7528\u3002\u201d\u7b80\u5355\u7684\u8bf4\uff0c\u4f7f\u7528requests\u5e93\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u7684\u4f7f\u7528HTTP\uff0c\u907f\u514d\u5b89\u5168\u7f3a\u9677\u3001\u5197\u4f59\u4ee3\u7801\u4ee5\u53ca\u201c\u91cd\u590d\u53d1\u660e\u8f6e\u5b50\u201d\uff08\u884c\u4e1a\u9ed1\u8bdd\uff0c\u901a\u5e38\u7528\u5728\u8f6f\u4ef6\u5de5\u7a0b\u9886\u57df\u8868\u793a\u91cd\u65b0\u521b\u9020\u4e00\u4e2a\u5df2\u6709\u7684\u6216\u662f\u65e9\u5df2\u88ab\u4f18\u5316\u904e\u7684\u57fa\u672c\u65b9\u6cd5\uff09\u3002\u524d\u9762\u7684\u6587\u7ae0\u4e2d\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u8fc7\u8fd9\u4e2a\u5e93\uff0c\u4e0b\u9762\u6211\u4eec\u8fd8\u662f\u901a\u8fc7requests\u6765\u5b9e\u73b0\u4e00\u4e2a\u8bbf\u95ee\u7f51\u7edc\u6570\u636e\u63a5\u53e3\u5e76\u4ece\u4e2d\u83b7\u53d6\u7f8e\u5973\u56fe\u7247\u4e0b\u8f7d\u94fe\u63a5\u7136\u540e\u4e0b\u8f7d\u7f8e\u5973\u56fe\u7247\u5230\u672c\u5730\u7684\u4f8b\u5b50\u7a0b\u5e8f\uff0c\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u4e86 \u5929\u884c\u6570\u636e \u63d0\u4f9b\u7684\u7f51\u7edcAPI\u3002 \u6211\u4eec\u53ef\u4ee5\u5148\u901a\u8fc7pip\u5b89\u88c5requests\u53ca\u5176\u4f9d\u8d56\u5e93\u3002 pip install requests \u5982\u679c\u4f7f\u7528PyCharm\u4f5c\u4e3a\u5f00\u53d1\u5de5\u5177\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728\u4ee3\u7801\u4e2d\u4e66\u5199 import requests \uff0c\u7136\u540e\u901a\u8fc7\u4ee3\u7801\u4fee\u590d\u529f\u80fd\u6765\u81ea\u52a8\u4e0b\u8f7d\u5b89\u88c5requests\u3002 from time import time from threading import Thread import requests # \u7ee7\u627fThread\u7c7b\u521b\u5efa\u81ea\u5b9a\u4e49\u7684\u7ebf\u7a0b\u7c7b class DownloadHanlder(Thread): def __init__(self, url): super().__init__() self.url = url def run(self): filename = self.url[self.url.rfind('/') + 1:] resp = requests.get(self.url) with open('/Users/Hao/' + filename, 'wb') as f: f.write(resp.content) def main(): # \u901a\u8fc7requests\u6a21\u5757\u7684get\u51fd\u6570\u83b7\u53d6\u7f51\u7edc\u8d44\u6e90 # \u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86\u5929\u884c\u6570\u636e\u63a5\u53e3\u63d0\u4f9b\u7684\u7f51\u7edcAPI # \u8981\u4f7f\u7528\u8be5\u6570\u636e\u63a5\u53e3\u9700\u8981\u5728\u5929\u884c\u6570\u636e\u7684\u7f51\u7ad9\u4e0a\u6ce8\u518c # \u7136\u540e\u7528\u81ea\u5df1\u7684Key\u66ff\u6362\u6389\u4e0b\u9762\u4ee3\u7801\u7684\u4e2dAPIKey\u5373\u53ef resp = requests.get( 'http://api.tianapi.com/meinv/?key=APIKey&num=10') # \u5c06\u670d\u52a1\u5668\u8fd4\u56de\u7684JSON\u683c\u5f0f\u7684\u6570\u636e\u89e3\u6790\u4e3a\u5b57\u5178 data_model = resp.json() for mm_dict in data_model['newslist']: url = mm_dict['picUrl'] # \u901a\u8fc7\u591a\u7ebf\u7a0b\u7684\u65b9\u5f0f\u5b9e\u73b0\u56fe\u7247\u4e0b\u8f7d DownloadHanlder(url).start() if __name__ == '__main__': main()","title":"requests\u5e93"},{"location":"new/14-A%E3%80%81%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/#_5","text":"\u5957\u63a5\u5b57\u8fd9\u4e2a\u8bcd\u5bf9\u5f88\u591a\u4e0d\u4e86\u89e3\u7f51\u7edc\u7f16\u7a0b\u7684\u4eba\u6765\u8bf4\u663e\u5f97\u975e\u5e38\u6666\u6da9\u548c\u964c\u751f\uff0c\u5176\u5b9e\u8bf4\u5f97\u901a\u4fd7\u70b9\uff0c\u5957\u63a5\u5b57\u5c31\u662f\u4e00\u5957\u7528 C\u8bed\u8a00 \u5199\u6210\u7684\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u5e93\uff0c\u4e3b\u8981\u7528\u4e8e\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u901a\u4fe1\u548c\u7f51\u7edc\u7f16\u7a0b\uff0c\u5728\u7f51\u7edc\u5e94\u7528\u5f00\u53d1\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002\u5728Python\u4e2d\u4e5f\u53ef\u4ee5\u57fa\u4e8e\u5957\u63a5\u5b57\u6765\u4f7f\u7528\u4f20\u8f93\u5c42\u63d0\u4f9b\u7684\u4f20\u8f93\u670d\u52a1\uff0c\u5e76\u57fa\u4e8e\u6b64\u5f00\u53d1\u81ea\u5df1\u7684\u7f51\u7edc\u5e94\u7528\u3002\u5b9e\u9645\u5f00\u53d1\u4e2d\u4f7f\u7528\u7684\u5957\u63a5\u5b57\u53ef\u4ee5\u5206\u4e3a\u4e09\u7c7b\uff1a\u6d41\u5957\u63a5\u5b57\uff08TCP\u5957\u63a5\u5b57\uff09\u3001\u6570\u636e\u62a5\u5957\u63a5\u5b57\u548c\u539f\u59cb\u5957\u63a5\u5b57\u3002","title":"\u57fa\u4e8e\u4f20\u8f93\u5c42\u534f\u8bae\u7684\u5957\u63a5\u5b57\u7f16\u7a0b"},{"location":"new/14-A%E3%80%81%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/#tcp","text":"\u6240\u8c13TCP\u5957\u63a5\u5b57\u5c31\u662f\u4f7f\u7528TCP\u534f\u8bae\u63d0\u4f9b\u7684\u4f20\u8f93\u670d\u52a1\u6765\u5b9e\u73b0\u7f51\u7edc\u901a\u4fe1\u7684\u7f16\u7a0b\u63a5\u53e3\u3002\u5728Python\u4e2d\u53ef\u4ee5\u901a\u8fc7\u521b\u5efasocket\u5bf9\u8c61\u5e76\u6307\u5b9atype\u5c5e\u6027\u4e3aSOCK_STREAM\u6765\u4f7f\u7528TCP\u5957\u63a5\u5b57\u3002\u7531\u4e8e\u4e00\u53f0\u4e3b\u673a\u53ef\u80fd\u62e5\u6709\u591a\u4e2aIP\u5730\u5740\uff0c\u800c\u4e14\u5f88\u6709\u53ef\u80fd\u4f1a\u914d\u7f6e\u591a\u4e2a\u4e0d\u540c\u7684\u670d\u52a1\uff0c\u6240\u4ee5\u4f5c\u4e3a\u670d\u52a1\u5668\u7aef\u7684\u7a0b\u5e8f\uff0c\u9700\u8981\u5728\u521b\u5efa\u5957\u63a5\u5b57\u5bf9\u8c61\u540e\u5c06\u5176\u7ed1\u5b9a\u5230\u6307\u5b9a\u7684IP\u5730\u5740\u548c\u7aef\u53e3\u4e0a\u3002\u8fd9\u91cc\u7684\u7aef\u53e3\u5e76\u4e0d\u662f\u7269\u7406\u8bbe\u5907\u800c\u662f\u5bf9IP\u5730\u5740\u7684\u6269\u5c55\uff0c\u7528\u4e8e\u533a\u5206\u4e0d\u540c\u7684\u670d\u52a1\uff0c\u4f8b\u5982\u6211\u4eec\u901a\u5e38\u5c06HTTP\u670d\u52a1\u8ddf80\u7aef\u53e3\u7ed1\u5b9a\uff0c\u800cMySQL\u6570\u636e\u5e93\u670d\u52a1\u9ed8\u8ba4\u7ed1\u5b9a\u57283306\u7aef\u53e3\uff0c\u8fd9\u6837\u5f53\u670d\u52a1\u5668\u6536\u5230\u7528\u6237\u8bf7\u6c42\u65f6\u5c31\u53ef\u4ee5\u6839\u636e\u7aef\u53e3\u53f7\u6765\u786e\u5b9a\u5230\u5e95\u7528\u6237\u8bf7\u6c42\u7684\u662fHTTP\u670d\u52a1\u5668\u8fd8\u662f\u6570\u636e\u5e93\u670d\u52a1\u5668\u63d0\u4f9b\u7684\u670d\u52a1\u3002\u7aef\u53e3\u7684\u53d6\u503c\u8303\u56f4\u662f0~65535\uff0c\u800c1024\u4ee5\u4e0b\u7684\u7aef\u53e3\u6211\u4eec\u901a\u5e38\u79f0\u4e4b\u4e3a\u201c\u8457\u540d\u7aef\u53e3\u201d\uff08\u7559\u7ed9\u50cfFTP\u3001HTTP\u3001SMTP\u7b49\u201c\u8457\u540d\u670d\u52a1\u201d\u4f7f\u7528\u7684\u7aef\u53e3\uff0c\u6709\u7684\u5730\u65b9\u4e5f\u79f0\u4e4b\u4e3a\u201c\u5468\u77e5\u7aef\u53e3\u201d\uff09\uff0c\u81ea\u5b9a\u4e49\u7684\u670d\u52a1\u901a\u5e38\u4e0d\u4f7f\u7528\u8fd9\u4e9b\u7aef\u53e3\uff0c\u9664\u975e\u81ea\u5b9a\u4e49\u7684\u662fHTTP\u6216FTP\u8fd9\u6837\u7684\u8457\u540d\u670d\u52a1\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\u4e86\u4e00\u4e2a\u63d0\u4f9b\u65f6\u95f4\u65e5\u671f\u7684\u670d\u52a1\u5668\u3002 from socket import socket, SOCK_STREAM, AF_INET from datetime import datetime def main(): # 1.\u521b\u5efa\u5957\u63a5\u5b57\u5bf9\u8c61\u5e76\u6307\u5b9a\u4f7f\u7528\u54ea\u79cd\u4f20\u8f93\u670d\u52a1 # family=AF_INET - IPv4\u5730\u5740 # family=AF_INET6 - IPv6\u5730\u5740 # type=SOCK_STREAM - TCP\u5957\u63a5\u5b57 # type=SOCK_DGRAM - UDP\u5957\u63a5\u5b57 # type=SOCK_RAW - \u539f\u59cb\u5957\u63a5\u5b57 server = socket(family=AF_INET, type=SOCK_STREAM) # 2.\u7ed1\u5b9aIP\u5730\u5740\u548c\u7aef\u53e3(\u7aef\u53e3\u7528\u4e8e\u533a\u5206\u4e0d\u540c\u7684\u670d\u52a1) # \u540c\u4e00\u65f6\u95f4\u5728\u540c\u4e00\u4e2a\u7aef\u53e3\u4e0a\u53ea\u80fd\u7ed1\u5b9a\u4e00\u4e2a\u670d\u52a1\u5426\u5219\u62a5\u9519 server.bind(('192.168.1.2', 6789)) # 3.\u5f00\u542f\u76d1\u542c - \u76d1\u542c\u5ba2\u6237\u7aef\u8fde\u63a5\u5230\u670d\u52a1\u5668 # \u53c2\u6570512\u53ef\u4ee5\u7406\u89e3\u4e3a\u8fde\u63a5\u961f\u5217\u7684\u5927\u5c0f server.listen(512) print('\u670d\u52a1\u5668\u542f\u52a8\u5f00\u59cb\u76d1\u542c...') while True: # 4.\u901a\u8fc7\u5faa\u73af\u63a5\u6536\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u5e76\u4f5c\u51fa\u76f8\u5e94\u7684\u5904\u7406(\u63d0\u4f9b\u670d\u52a1) # accept\u65b9\u6cd5\u662f\u4e00\u4e2a\u963b\u585e\u65b9\u6cd5\u5982\u679c\u6ca1\u6709\u5ba2\u6237\u7aef\u8fde\u63a5\u5230\u670d\u52a1\u5668\u4ee3\u7801\u4e0d\u4f1a\u5411\u4e0b\u6267\u884c # accept\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4\u5176\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u5ba2\u6237\u7aef\u5bf9\u8c61 # \u7b2c\u4e8c\u4e2a\u5143\u7d20\u662f\u8fde\u63a5\u5230\u670d\u52a1\u5668\u7684\u5ba2\u6237\u7aef\u7684\u5730\u5740(\u7531IP\u548c\u7aef\u53e3\u4e24\u90e8\u5206\u6784\u6210) client, addr = server.accept() print(str(addr) + '\u8fde\u63a5\u5230\u4e86\u670d\u52a1\u5668.') # 5.\u53d1\u9001\u6570\u636e client.send(str(datetime.now()).encode('utf-8')) # 6.\u65ad\u5f00\u8fde\u63a5 client.close() if __name__ == '__main__': main() \u8fd0\u884c\u670d\u52a1\u5668\u7a0b\u5e8f\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Windows\u7cfb\u7edf\u7684telnet\u6765\u8bbf\u95ee\u8be5\u670d\u52a1\u5668\uff0c\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002 telnet 192.168.1.2 6789 \u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7Python\u7684\u7a0b\u5e8f\u6765\u5b9e\u73b0TCP\u5ba2\u6237\u7aef\u7684\u529f\u80fd\uff0c\u76f8\u8f83\u4e8e\u5b9e\u73b0\u670d\u52a1\u5668\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u5ba2\u6237\u7aef\u7a0b\u5e8f\u5c31\u7b80\u5355\u591a\u4e86\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 from socket import socket def main(): # 1.\u521b\u5efa\u5957\u63a5\u5b57\u5bf9\u8c61\u9ed8\u8ba4\u4f7f\u7528IPv4\u548cTCP\u534f\u8bae client = socket() # 2.\u8fde\u63a5\u5230\u670d\u52a1\u5668(\u9700\u8981\u6307\u5b9aIP\u5730\u5740\u548c\u7aef\u53e3) client.connect(('192.168.1.2', 6789)) # 3.\u4ece\u670d\u52a1\u5668\u63a5\u6536\u6570\u636e print(client.recv(1024).decode('utf-8')) client.close() if __name__ == '__main__': main() \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e0a\u9762\u7684\u670d\u52a1\u5668\u5e76\u6ca1\u6709\u4f7f\u7528\u591a\u7ebf\u7a0b\u6216\u8005\u5f02\u6b65I/O\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u5f53\u670d\u52a1\u5668\u4e0e\u4e00\u4e2a\u5ba2\u6237\u7aef\u5904\u4e8e\u901a\u4fe1\u72b6\u6001\u65f6\uff0c\u5176\u4ed6\u7684\u5ba2\u6237\u7aef\u53ea\u80fd\u6392\u961f\u7b49\u5f85\u3002\u5f88\u663e\u7136\uff0c\u8fd9\u6837\u7684\u670d\u52a1\u5668\u5e76\u4e0d\u80fd\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\uff0c\u6211\u4eec\u9700\u8981\u7684\u670d\u52a1\u5668\u662f\u80fd\u591f\u540c\u65f6\u63a5\u7eb3\u548c\u5904\u7406\u591a\u4e2a\u7528\u6237\u8bf7\u6c42\u7684\u3002\u4e0b\u9762\u6211\u4eec\u6765\u8bbe\u8ba1\u4e00\u4e2a\u4f7f\u7528\u591a\u7ebf\u7a0b\u6280\u672f\u5904\u7406\u591a\u4e2a\u7528\u6237\u8bf7\u6c42\u7684\u670d\u52a1\u5668\uff0c\u8be5\u670d\u52a1\u5668\u4f1a\u5411\u8fde\u63a5\u5230\u670d\u52a1\u5668\u7684\u5ba2\u6237\u7aef\u53d1\u9001\u4e00\u5f20\u56fe\u7247\u3002 \u670d\u52a1\u5668\u7aef\u4ee3\u7801\uff1a from socket import socket, SOCK_STREAM, AF_INET from base64 import b64encode from json import dumps from threading import Thread def main(): # \u81ea\u5b9a\u4e49\u7ebf\u7a0b\u7c7b class FileTransferHandler(Thread): def __init__(self, cclient): super().__init__() self.cclient = cclient def run(self): my_dict = {} my_dict['filename'] = 'guido.jpg' # JSON\u662f\u7eaf\u6587\u672c\u4e0d\u80fd\u643a\u5e26\u4e8c\u8fdb\u5236\u6570\u636e # \u6240\u4ee5\u56fe\u7247\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u8981\u5904\u7406\u6210base64\u7f16\u7801 my_dict['filedata'] = data # \u901a\u8fc7dumps\u51fd\u6570\u5c06\u5b57\u5178\u5904\u7406\u6210JSON\u5b57\u7b26\u4e32 json_str = dumps(my_dict) # \u53d1\u9001JSON\u5b57\u7b26\u4e32 self.cclient.send(json_str.encode('utf-8')) self.cclient.close() # 1.\u521b\u5efa\u5957\u63a5\u5b57\u5bf9\u8c61\u5e76\u6307\u5b9a\u4f7f\u7528\u54ea\u79cd\u4f20\u8f93\u670d\u52a1 server = socket() # 2.\u7ed1\u5b9aIP\u5730\u5740\u548c\u7aef\u53e3(\u533a\u5206\u4e0d\u540c\u7684\u670d\u52a1) server.bind(('192.168.1.2', 5566)) # 3.\u5f00\u542f\u76d1\u542c - \u76d1\u542c\u5ba2\u6237\u7aef\u8fde\u63a5\u5230\u670d\u52a1\u5668 server.listen(512) print('\u670d\u52a1\u5668\u542f\u52a8\u5f00\u59cb\u76d1\u542c...') with open('guido.jpg', 'rb') as f: # \u5c06\u4e8c\u8fdb\u5236\u6570\u636e\u5904\u7406\u6210base64\u518d\u89e3\u7801\u6210\u5b57\u7b26\u4e32 data = b64encode(f.read()).decode('utf-8') while True: client, addr = server.accept() # \u542f\u52a8\u4e00\u4e2a\u7ebf\u7a0b\u6765\u5904\u7406\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42 FileTransferHandler(client).start() if __name__ == '__main__': main() \u5ba2\u6237\u7aef\u4ee3\u7801\uff1a from socket import socket from json import loads from base64 import b64decode def main(): client = socket() client.connect(('192.168.1.2', 5566)) # \u5b9a\u4e49\u4e00\u4e2a\u4fdd\u5b58\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u5bf9\u8c61 in_data = bytes() # \u7531\u4e8e\u4e0d\u77e5\u9053\u670d\u52a1\u5668\u53d1\u9001\u7684\u6570\u636e\u6709\u591a\u5927\u6bcf\u6b21\u63a5\u65361024\u5b57\u8282 data = client.recv(1024) while data: # \u5c06\u6536\u5230\u7684\u6570\u636e\u62fc\u63a5\u8d77\u6765 in_data += data data = client.recv(1024) # \u5c06\u6536\u5230\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u89e3\u7801\u6210JSON\u5b57\u7b26\u4e32\u5e76\u8f6c\u6362\u6210\u5b57\u5178 # loads\u51fd\u6570\u7684\u4f5c\u7528\u5c31\u662f\u5c06JSON\u5b57\u7b26\u4e32\u8f6c\u6210\u5b57\u5178\u5bf9\u8c61 my_dict = loads(in_data.decode('utf-8')) filename = my_dict['filename'] filedata = my_dict['filedata'].encode('utf-8') with open('/Users/Hao/' + filename, 'wb') as f: # \u5c06base64\u683c\u5f0f\u7684\u6570\u636e\u89e3\u7801\u6210\u4e8c\u8fdb\u5236\u6570\u636e\u5e76\u5199\u5165\u6587\u4ef6 f.write(b64decode(filedata)) print('\u56fe\u7247\u5df2\u4fdd\u5b58.') if __name__ == '__main__': main() \u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86JSON\u4f5c\u4e3a\u6570\u636e\u4f20\u8f93\u7684\u683c\u5f0f\uff08\u901a\u8fc7JSON\u683c\u5f0f\u5bf9\u4f20\u8f93\u7684\u6570\u636e\u8fdb\u884c\u4e86\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u7684\u64cd\u4f5c\uff09\uff0c\u4f46\u662fJSON\u5e76\u4e0d\u80fd\u643a\u5e26\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u56e0\u6b64\u5bf9\u56fe\u7247\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u8fdb\u884c\u4e86Base64\u7f16\u7801\u7684\u5904\u7406\u3002Base64\u662f\u4e00\u79cd\u752864\u4e2a\u5b57\u7b26\u8868\u793a\u6240\u6709\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u7f16\u7801\u65b9\u5f0f\uff0c\u901a\u8fc7\u5c06\u4e8c\u8fdb\u5236\u6570\u636e\u6bcf6\u4f4d\u4e00\u7ec4\u7684\u65b9\u5f0f\u91cd\u65b0\u7ec4\u7ec7\uff0c\u521a\u597d\u53ef\u4ee5\u4f7f\u75280~9\u7684\u6570\u5b57\u3001\u5927\u5c0f\u5199\u5b57\u6bcd\u4ee5\u53ca\u201c+\u201d\u548c\u201c/\u201d\u603b\u517164\u4e2a\u5b57\u7b26\u8868\u793a\u4ece 000000 \u5230 111111 \u768464\u79cd\u72b6\u6001\u3002 \u7ef4\u57fa\u767e\u79d1 \u4e0a\u6709\u5173\u4e8eBase64\u7f16\u7801\u7684\u8be6\u7ec6\u8bb2\u89e3\uff0c\u4e0d\u719f\u6089Base64\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u9605\u8bfb\u3002 \u8bf4\u660e \uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u4e3b\u8981\u4e3a\u4e86\u8bb2\u89e3\u7f51\u7edc\u7f16\u7a0b\u7684\u76f8\u5173\u5185\u5bb9\u56e0\u6b64\u5e76\u6ca1\u6709\u5bf9\u5f02\u5e38\u72b6\u51b5\u8fdb\u884c\u5904\u7406\uff0c\u8bf7\u8bfb\u8005\u81ea\u884c\u6dfb\u52a0\u5f02\u5e38\u5904\u7406\u4ee3\u7801\u6765\u589e\u5f3a\u7a0b\u5e8f\u7684\u5065\u58ee\u6027\u3002","title":"TCP\u5957\u63a5\u5b57"},{"location":"new/14-A%E3%80%81%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/#udp","text":"\u4f20\u8f93\u5c42\u9664\u4e86\u6709\u53ef\u9760\u7684\u4f20\u8f93\u534f\u8baeTCP\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u79cd\u975e\u5e38\u8f7b\u4fbf\u7684\u4f20\u8f93\u534f\u8bae\u53eb\u505a\u7528\u6237\u6570\u636e\u62a5\u534f\u8bae\uff0c\u7b80\u79f0UDP\u3002TCP\u548cUDP\u90fd\u662f\u63d0\u4f9b\u7aef\u5230\u7aef\u4f20\u8f93\u670d\u52a1\u7684\u534f\u8bae\uff0c\u4e8c\u8005\u7684\u5dee\u522b\u5c31\u5982\u540c\u6253\u7535\u8bdd\u548c\u53d1\u77ed\u4fe1\u7684\u533a\u522b\uff0c\u540e\u8005\u4e0d\u5bf9\u4f20\u8f93\u7684\u53ef\u9760\u6027\u548c\u53ef\u8fbe\u6027\u505a\u51fa\u4efb\u4f55\u627f\u8bfa\u4ece\u800c\u907f\u514d\u4e86TCP\u4e2d\u63e1\u624b\u548c\u91cd\u4f20\u7684\u5f00\u9500\uff0c\u6240\u4ee5\u5728\u5f3a\u8c03\u6027\u80fd\u548c\u800c\u4e0d\u662f\u6570\u636e\u5b8c\u6574\u6027\u7684\u573a\u666f\u4e2d\uff08\u4f8b\u5982\u4f20\u8f93\u7f51\u7edc\u97f3\u89c6\u9891\u6570\u636e\uff09\uff0cUDP\u53ef\u80fd\u662f\u66f4\u597d\u7684\u9009\u62e9\u3002\u53ef\u80fd\u5927\u5bb6\u4f1a\u6ce8\u610f\u5230\u4e00\u4e2a\u73b0\u8c61\uff0c\u5c31\u662f\u5728\u89c2\u770b\u7f51\u7edc\u89c6\u9891\u65f6\uff0c\u6709\u65f6\u4f1a\u51fa\u73b0\u5361\u987f\uff0c\u6709\u65f6\u4f1a\u51fa\u73b0\u82b1\u5c4f\uff0c\u8fd9\u65e0\u975e\u5c31\u662f\u90e8\u5206\u6570\u636e\u4f20\u4e22\u6216\u4f20\u9519\u9020\u6210\u7684\u3002\u5728Python\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528UDP\u5957\u63a5\u5b57\u6765\u521b\u5efa\u7f51\u7edc\u5e94\u7528\uff0c\u5bf9\u6b64\u6211\u4eec\u4e0d\u8fdb\u884c\u8d58\u8ff0\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002","title":"UDP\u5957\u63a5\u5b57"},{"location":"new/14-B%E3%80%81%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/","text":"\u7f51\u7edc\u5e94\u7528\u5f00\u53d1 \u53d1\u9001\u7535\u5b50\u90ae\u4ef6 \u5728\u5373\u65f6\u901a\u4fe1\u8f6f\u4ef6\u5982\u6b64\u53d1\u8fbe\u7684\u4eca\u5929\uff0c\u7535\u5b50\u90ae\u4ef6\u4ecd\u7136\u662f\u4e92\u8054\u7f51\u4e0a\u4f7f\u7528\u6700\u4e3a\u5e7f\u6cdb\u7684\u5e94\u7528\u4e4b\u4e00\uff0c\u516c\u53f8\u5411\u5e94\u8058\u8005\u53d1\u51fa\u5f55\u7528\u901a\u77e5\u3001\u7f51\u7ad9\u5411\u7528\u6237\u53d1\u9001\u4e00\u4e2a\u6fc0\u6d3b\u8d26\u53f7\u7684\u94fe\u63a5\u3001\u94f6\u884c\u5411\u5ba2\u6237\u63a8\u5e7f\u5b83\u4eec\u7684\u7406\u8d22\u4ea7\u54c1\u7b49\u51e0\u4e4e\u90fd\u662f\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u6765\u5b8c\u6210\u7684\uff0c\u800c\u8fd9\u4e9b\u4efb\u52a1\u5e94\u8be5\u90fd\u662f\u7531\u7a0b\u5e8f\u81ea\u52a8\u5b8c\u6210\u7684\u3002 \u5c31\u50cf\u6211\u4eec\u53ef\u4ee5\u7528HTTP\uff08\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff09\u6765\u8bbf\u95ee\u4e00\u4e2a\u7f51\u7ad9\u4e00\u6837\uff0c\u53d1\u9001\u90ae\u4ef6\u8981\u4f7f\u7528SMTP\uff08\u7b80\u5355\u90ae\u4ef6\u4f20\u8f93\u534f\u8bae\uff09\uff0cSMTP\u4e5f\u662f\u4e00\u4e2a\u5efa\u7acb\u5728TCP\uff08\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff09\u63d0\u4f9b\u7684\u53ef\u9760\u6570\u636e\u4f20\u8f93\u670d\u52a1\u7684\u57fa\u7840\u4e0a\u7684\u5e94\u7528\u7ea7\u534f\u8bae\uff0c\u5b83\u89c4\u5b9a\u4e86\u90ae\u4ef6\u7684\u53d1\u9001\u8005\u5982\u4f55\u8ddf\u53d1\u9001\u90ae\u4ef6\u7684\u670d\u52a1\u5668\u8fdb\u884c\u901a\u4fe1\u7684\u7ec6\u8282\uff0c\u800cPython\u4e2d\u7684smtplib\u6a21\u5757\u5c06\u8fd9\u4e9b\u64cd\u4f5c\u7b80\u5316\u6210\u4e86\u51e0\u4e2a\u7b80\u5355\u7684\u51fd\u6570\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5728Python\u53d1\u9001\u90ae\u4ef6\u3002 from smtplib import SMTP from email.header import Header from email.mime.text import MIMEText def main(): # \u8bf7\u81ea\u884c\u4fee\u6539\u4e0b\u9762\u7684\u90ae\u4ef6\u53d1\u9001\u8005\u548c\u63a5\u6536\u8005 sender = 'abcdefg@126.com' receivers = ['uvwxyz@qq.com', 'uvwxyz@126.com'] message = MIMEText('\u7528Python\u53d1\u9001\u90ae\u4ef6\u7684\u793a\u4f8b\u4ee3\u7801.', 'plain', 'utf-8') message['From'] = Header('\u738b\u5927\u9524', 'utf-8') message['To'] = Header('\u9a86\u660a', 'utf-8') message['Subject'] = Header('\u793a\u4f8b\u4ee3\u7801\u5b9e\u9a8c\u90ae\u4ef6', 'utf-8') smtper = SMTP('smtp.126.com') # \u8bf7\u81ea\u884c\u4fee\u6539\u4e0b\u9762\u7684\u767b\u5f55\u53e3\u4ee4 smtper.login(sender, 'secretpass') smtper.sendmail(sender, receivers, message.as_string()) print('\u90ae\u4ef6\u53d1\u9001\u5b8c\u6210!') if __name__ == '__main__': main() \u5982\u679c\u8981\u53d1\u9001\u5e26\u6709\u9644\u4ef6\u7684\u90ae\u4ef6\uff0c\u90a3\u4e48\u53ef\u4ee5\u6309\u7167\u4e0b\u9762\u7684\u65b9\u5f0f\u8fdb\u884c\u64cd\u4f5c\u3002 from smtplib import SMTP from email.header import Header from email.mime.text import MIMEText from email.mime.image import MIMEImage from email.mime.multipart import MIMEMultipart import urllib def main(): # \u521b\u5efa\u4e00\u4e2a\u5e26\u9644\u4ef6\u7684\u90ae\u4ef6\u6d88\u606f\u5bf9\u8c61 message = MIMEMultipart() # \u521b\u5efa\u6587\u672c\u5185\u5bb9 text_content = MIMEText('\u9644\u4ef6\u4e2d\u6709\u672c\u6708\u6570\u636e\u8bf7\u67e5\u6536', 'plain', 'utf-8') message['Subject'] = Header('\u672c\u6708\u6570\u636e', 'utf-8') # \u5c06\u6587\u672c\u5185\u5bb9\u6dfb\u52a0\u5230\u90ae\u4ef6\u6d88\u606f\u5bf9\u8c61\u4e2d message.attach(text_content) # \u8bfb\u53d6\u6587\u4ef6\u5e76\u5c06\u6587\u4ef6\u4f5c\u4e3a\u9644\u4ef6\u6dfb\u52a0\u5230\u90ae\u4ef6\u6d88\u606f\u5bf9\u8c61\u4e2d with open('/Users/Hao/Desktop/hello.txt', 'rb') as f: txt = MIMEText(f.read(), 'base64', 'utf-8') txt['Content-Type'] = 'text/plain' txt['Content-Disposition'] = 'attachment; filename=hello.txt' message.attach(txt) # \u8bfb\u53d6\u6587\u4ef6\u5e76\u5c06\u6587\u4ef6\u4f5c\u4e3a\u9644\u4ef6\u6dfb\u52a0\u5230\u90ae\u4ef6\u6d88\u606f\u5bf9\u8c61\u4e2d with open('/Users/Hao/Desktop/\u6c47\u603b\u6570\u636e.xlsx', 'rb') as f: xls = MIMEText(f.read(), 'base64', 'utf-8') xls['Content-Type'] = 'application/vnd.ms-excel' xls['Content-Disposition'] = 'attachment; filename=month-data.xlsx' message.attach(xls) # \u521b\u5efaSMTP\u5bf9\u8c61 smtper = SMTP('smtp.126.com') # \u5f00\u542f\u5b89\u5168\u8fde\u63a5 # smtper.starttls() sender = 'abcdefg@126.com' receivers = ['uvwxyz@qq.com'] # \u767b\u5f55\u5230SMTP\u670d\u52a1\u5668 # \u8bf7\u6ce8\u610f\u6b64\u5904\u4e0d\u662f\u4f7f\u7528\u5bc6\u7801\u800c\u662f\u90ae\u4ef6\u5ba2\u6237\u7aef\u6388\u6743\u7801\u8fdb\u884c\u767b\u5f55 # \u5bf9\u6b64\u6709\u7591\u95ee\u7684\u8bfb\u8005\u53ef\u4ee5\u8054\u7cfb\u81ea\u5df1\u4f7f\u7528\u7684\u90ae\u4ef6\u670d\u52a1\u5668\u5ba2\u670d smtper.login(sender, 'secretpass') # \u53d1\u9001\u90ae\u4ef6 smtper.sendmail(sender, receivers, message.as_string()) # \u4e0e\u90ae\u4ef6\u670d\u52a1\u5668\u65ad\u5f00\u8fde\u63a5 smtper.quit() print('\u53d1\u9001\u5b8c\u6210!') if __name__ == '__main__': main() \u53d1\u9001\u77ed\u4fe1 \u53d1\u9001\u77ed\u4fe1\u4e5f\u662f\u9879\u76ee\u4e2d\u5e38\u89c1\u7684\u529f\u80fd\uff0c\u7f51\u7ad9\u7684\u6ce8\u518c\u7801\u3001\u9a8c\u8bc1\u7801\u3001\u8425\u9500\u4fe1\u606f\u57fa\u672c\u4e0a\u90fd\u662f\u901a\u8fc7\u77ed\u4fe1\u6765\u53d1\u9001\u7ed9\u7528\u6237\u7684\u3002\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u6211\u4eec\u4f7f\u7528\u4e86 \u4e92\u4ebf\u65e0\u7ebf \u77ed\u4fe1\u5e73\u53f0\uff08\u8be5\u5e73\u53f0\u4e3a\u6ce8\u518c\u7528\u6237\u63d0\u4f9b\u4e8650\u6761\u514d\u8d39\u77ed\u4fe1\u4ee5\u53ca\u5e38\u7528\u5f00\u53d1\u8bed\u8a00\u53d1\u9001\u77ed\u4fe1\u7684demo\uff0c\u53ef\u4ee5\u767b\u5f55\u8be5\u7f51\u7ad9\u5e76\u5728\u7528\u6237\u81ea\u670d\u52a1\u9875\u9762\u4e2d\u5bf9\u77ed\u4fe1\u8fdb\u884c\u914d\u7f6e\uff09\u63d0\u4f9b\u7684API\u63a5\u53e3\u5b9e\u73b0\u4e86\u53d1\u9001\u77ed\u4fe1\u7684\u670d\u52a1\uff0c\u5f53\u7136\u56fd\u5185\u7684\u77ed\u4fe1\u5e73\u53f0\u5f88\u591a\uff0c\u8bfb\u8005\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u8fdb\u884c\u9009\u62e9\uff08\u901a\u5e38\u4f1a\u8003\u8651\u8d39\u7528\u9884\u7b97\u3001\u77ed\u4fe1\u8fbe\u5230\u7387\u3001\u4f7f\u7528\u7684\u96be\u6613\u7a0b\u5ea6\u7b49\u6307\u6807\uff09\uff0c\u5982\u679c\u9700\u8981\u5728\u5546\u4e1a\u9879\u76ee\u4e2d\u4f7f\u7528\u77ed\u4fe1\u670d\u52a1\u5efa\u8bae\u8d2d\u4e70\u77ed\u4fe1\u5e73\u53f0\u63d0\u4f9b\u7684\u5957\u9910\u670d\u52a1\u3002 import urllib.parse import http.client import json def main(): host = \"106.ihuyi.com\" sms_send_uri = \"/webservice/sms.php?method=Submit\" # \u4e0b\u9762\u7684\u53c2\u6570\u9700\u8981\u586b\u5165\u81ea\u5df1\u6ce8\u518c\u7684\u8d26\u53f7\u548c\u5bf9\u5e94\u7684\u5bc6\u7801 params = urllib.parse.urlencode({'account': '\u4f60\u81ea\u5df1\u7684\u8d26\u53f7', 'password' : '\u4f60\u81ea\u5df1\u7684\u5bc6\u7801', 'content': '\u60a8\u7684\u9a8c\u8bc1\u7801\u662f\uff1a147258\u3002\u8bf7\u4e0d\u8981\u628a\u9a8c\u8bc1\u7801\u6cc4\u9732\u7ed9\u5176\u4ed6\u4eba\u3002', 'mobile': '\u63a5\u6536\u8005\u7684\u624b\u673a\u53f7', 'format':'json' }) print(params) headers = {'Content-type': 'application/x-www-form-urlencoded', 'Accept': 'text/plain'} conn = http.client.HTTPConnection(host, port=80, timeout=30) conn.request('POST', sms_send_uri, params, headers) response = conn.getresponse() response_str = response.read() jsonstr = response_str.decode('utf-8') print(json.loads(jsonstr)) conn.close() if __name__ == '__main__': main()","title":"\u7b2c\u5341\u56db\u5929"},{"location":"new/14-B%E3%80%81%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/#_1","text":"","title":"\u7f51\u7edc\u5e94\u7528\u5f00\u53d1"},{"location":"new/14-B%E3%80%81%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/#_2","text":"\u5728\u5373\u65f6\u901a\u4fe1\u8f6f\u4ef6\u5982\u6b64\u53d1\u8fbe\u7684\u4eca\u5929\uff0c\u7535\u5b50\u90ae\u4ef6\u4ecd\u7136\u662f\u4e92\u8054\u7f51\u4e0a\u4f7f\u7528\u6700\u4e3a\u5e7f\u6cdb\u7684\u5e94\u7528\u4e4b\u4e00\uff0c\u516c\u53f8\u5411\u5e94\u8058\u8005\u53d1\u51fa\u5f55\u7528\u901a\u77e5\u3001\u7f51\u7ad9\u5411\u7528\u6237\u53d1\u9001\u4e00\u4e2a\u6fc0\u6d3b\u8d26\u53f7\u7684\u94fe\u63a5\u3001\u94f6\u884c\u5411\u5ba2\u6237\u63a8\u5e7f\u5b83\u4eec\u7684\u7406\u8d22\u4ea7\u54c1\u7b49\u51e0\u4e4e\u90fd\u662f\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u6765\u5b8c\u6210\u7684\uff0c\u800c\u8fd9\u4e9b\u4efb\u52a1\u5e94\u8be5\u90fd\u662f\u7531\u7a0b\u5e8f\u81ea\u52a8\u5b8c\u6210\u7684\u3002 \u5c31\u50cf\u6211\u4eec\u53ef\u4ee5\u7528HTTP\uff08\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff09\u6765\u8bbf\u95ee\u4e00\u4e2a\u7f51\u7ad9\u4e00\u6837\uff0c\u53d1\u9001\u90ae\u4ef6\u8981\u4f7f\u7528SMTP\uff08\u7b80\u5355\u90ae\u4ef6\u4f20\u8f93\u534f\u8bae\uff09\uff0cSMTP\u4e5f\u662f\u4e00\u4e2a\u5efa\u7acb\u5728TCP\uff08\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff09\u63d0\u4f9b\u7684\u53ef\u9760\u6570\u636e\u4f20\u8f93\u670d\u52a1\u7684\u57fa\u7840\u4e0a\u7684\u5e94\u7528\u7ea7\u534f\u8bae\uff0c\u5b83\u89c4\u5b9a\u4e86\u90ae\u4ef6\u7684\u53d1\u9001\u8005\u5982\u4f55\u8ddf\u53d1\u9001\u90ae\u4ef6\u7684\u670d\u52a1\u5668\u8fdb\u884c\u901a\u4fe1\u7684\u7ec6\u8282\uff0c\u800cPython\u4e2d\u7684smtplib\u6a21\u5757\u5c06\u8fd9\u4e9b\u64cd\u4f5c\u7b80\u5316\u6210\u4e86\u51e0\u4e2a\u7b80\u5355\u7684\u51fd\u6570\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5728Python\u53d1\u9001\u90ae\u4ef6\u3002 from smtplib import SMTP from email.header import Header from email.mime.text import MIMEText def main(): # \u8bf7\u81ea\u884c\u4fee\u6539\u4e0b\u9762\u7684\u90ae\u4ef6\u53d1\u9001\u8005\u548c\u63a5\u6536\u8005 sender = 'abcdefg@126.com' receivers = ['uvwxyz@qq.com', 'uvwxyz@126.com'] message = MIMEText('\u7528Python\u53d1\u9001\u90ae\u4ef6\u7684\u793a\u4f8b\u4ee3\u7801.', 'plain', 'utf-8') message['From'] = Header('\u738b\u5927\u9524', 'utf-8') message['To'] = Header('\u9a86\u660a', 'utf-8') message['Subject'] = Header('\u793a\u4f8b\u4ee3\u7801\u5b9e\u9a8c\u90ae\u4ef6', 'utf-8') smtper = SMTP('smtp.126.com') # \u8bf7\u81ea\u884c\u4fee\u6539\u4e0b\u9762\u7684\u767b\u5f55\u53e3\u4ee4 smtper.login(sender, 'secretpass') smtper.sendmail(sender, receivers, message.as_string()) print('\u90ae\u4ef6\u53d1\u9001\u5b8c\u6210!') if __name__ == '__main__': main() \u5982\u679c\u8981\u53d1\u9001\u5e26\u6709\u9644\u4ef6\u7684\u90ae\u4ef6\uff0c\u90a3\u4e48\u53ef\u4ee5\u6309\u7167\u4e0b\u9762\u7684\u65b9\u5f0f\u8fdb\u884c\u64cd\u4f5c\u3002 from smtplib import SMTP from email.header import Header from email.mime.text import MIMEText from email.mime.image import MIMEImage from email.mime.multipart import MIMEMultipart import urllib def main(): # \u521b\u5efa\u4e00\u4e2a\u5e26\u9644\u4ef6\u7684\u90ae\u4ef6\u6d88\u606f\u5bf9\u8c61 message = MIMEMultipart() # \u521b\u5efa\u6587\u672c\u5185\u5bb9 text_content = MIMEText('\u9644\u4ef6\u4e2d\u6709\u672c\u6708\u6570\u636e\u8bf7\u67e5\u6536', 'plain', 'utf-8') message['Subject'] = Header('\u672c\u6708\u6570\u636e', 'utf-8') # \u5c06\u6587\u672c\u5185\u5bb9\u6dfb\u52a0\u5230\u90ae\u4ef6\u6d88\u606f\u5bf9\u8c61\u4e2d message.attach(text_content) # \u8bfb\u53d6\u6587\u4ef6\u5e76\u5c06\u6587\u4ef6\u4f5c\u4e3a\u9644\u4ef6\u6dfb\u52a0\u5230\u90ae\u4ef6\u6d88\u606f\u5bf9\u8c61\u4e2d with open('/Users/Hao/Desktop/hello.txt', 'rb') as f: txt = MIMEText(f.read(), 'base64', 'utf-8') txt['Content-Type'] = 'text/plain' txt['Content-Disposition'] = 'attachment; filename=hello.txt' message.attach(txt) # \u8bfb\u53d6\u6587\u4ef6\u5e76\u5c06\u6587\u4ef6\u4f5c\u4e3a\u9644\u4ef6\u6dfb\u52a0\u5230\u90ae\u4ef6\u6d88\u606f\u5bf9\u8c61\u4e2d with open('/Users/Hao/Desktop/\u6c47\u603b\u6570\u636e.xlsx', 'rb') as f: xls = MIMEText(f.read(), 'base64', 'utf-8') xls['Content-Type'] = 'application/vnd.ms-excel' xls['Content-Disposition'] = 'attachment; filename=month-data.xlsx' message.attach(xls) # \u521b\u5efaSMTP\u5bf9\u8c61 smtper = SMTP('smtp.126.com') # \u5f00\u542f\u5b89\u5168\u8fde\u63a5 # smtper.starttls() sender = 'abcdefg@126.com' receivers = ['uvwxyz@qq.com'] # \u767b\u5f55\u5230SMTP\u670d\u52a1\u5668 # \u8bf7\u6ce8\u610f\u6b64\u5904\u4e0d\u662f\u4f7f\u7528\u5bc6\u7801\u800c\u662f\u90ae\u4ef6\u5ba2\u6237\u7aef\u6388\u6743\u7801\u8fdb\u884c\u767b\u5f55 # \u5bf9\u6b64\u6709\u7591\u95ee\u7684\u8bfb\u8005\u53ef\u4ee5\u8054\u7cfb\u81ea\u5df1\u4f7f\u7528\u7684\u90ae\u4ef6\u670d\u52a1\u5668\u5ba2\u670d smtper.login(sender, 'secretpass') # \u53d1\u9001\u90ae\u4ef6 smtper.sendmail(sender, receivers, message.as_string()) # \u4e0e\u90ae\u4ef6\u670d\u52a1\u5668\u65ad\u5f00\u8fde\u63a5 smtper.quit() print('\u53d1\u9001\u5b8c\u6210!') if __name__ == '__main__': main()","title":"\u53d1\u9001\u7535\u5b50\u90ae\u4ef6"},{"location":"new/14-B%E3%80%81%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/#_3","text":"\u53d1\u9001\u77ed\u4fe1\u4e5f\u662f\u9879\u76ee\u4e2d\u5e38\u89c1\u7684\u529f\u80fd\uff0c\u7f51\u7ad9\u7684\u6ce8\u518c\u7801\u3001\u9a8c\u8bc1\u7801\u3001\u8425\u9500\u4fe1\u606f\u57fa\u672c\u4e0a\u90fd\u662f\u901a\u8fc7\u77ed\u4fe1\u6765\u53d1\u9001\u7ed9\u7528\u6237\u7684\u3002\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u6211\u4eec\u4f7f\u7528\u4e86 \u4e92\u4ebf\u65e0\u7ebf \u77ed\u4fe1\u5e73\u53f0\uff08\u8be5\u5e73\u53f0\u4e3a\u6ce8\u518c\u7528\u6237\u63d0\u4f9b\u4e8650\u6761\u514d\u8d39\u77ed\u4fe1\u4ee5\u53ca\u5e38\u7528\u5f00\u53d1\u8bed\u8a00\u53d1\u9001\u77ed\u4fe1\u7684demo\uff0c\u53ef\u4ee5\u767b\u5f55\u8be5\u7f51\u7ad9\u5e76\u5728\u7528\u6237\u81ea\u670d\u52a1\u9875\u9762\u4e2d\u5bf9\u77ed\u4fe1\u8fdb\u884c\u914d\u7f6e\uff09\u63d0\u4f9b\u7684API\u63a5\u53e3\u5b9e\u73b0\u4e86\u53d1\u9001\u77ed\u4fe1\u7684\u670d\u52a1\uff0c\u5f53\u7136\u56fd\u5185\u7684\u77ed\u4fe1\u5e73\u53f0\u5f88\u591a\uff0c\u8bfb\u8005\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u8fdb\u884c\u9009\u62e9\uff08\u901a\u5e38\u4f1a\u8003\u8651\u8d39\u7528\u9884\u7b97\u3001\u77ed\u4fe1\u8fbe\u5230\u7387\u3001\u4f7f\u7528\u7684\u96be\u6613\u7a0b\u5ea6\u7b49\u6307\u6807\uff09\uff0c\u5982\u679c\u9700\u8981\u5728\u5546\u4e1a\u9879\u76ee\u4e2d\u4f7f\u7528\u77ed\u4fe1\u670d\u52a1\u5efa\u8bae\u8d2d\u4e70\u77ed\u4fe1\u5e73\u53f0\u63d0\u4f9b\u7684\u5957\u9910\u670d\u52a1\u3002 import urllib.parse import http.client import json def main(): host = \"106.ihuyi.com\" sms_send_uri = \"/webservice/sms.php?method=Submit\" # \u4e0b\u9762\u7684\u53c2\u6570\u9700\u8981\u586b\u5165\u81ea\u5df1\u6ce8\u518c\u7684\u8d26\u53f7\u548c\u5bf9\u5e94\u7684\u5bc6\u7801 params = urllib.parse.urlencode({'account': '\u4f60\u81ea\u5df1\u7684\u8d26\u53f7', 'password' : '\u4f60\u81ea\u5df1\u7684\u5bc6\u7801', 'content': '\u60a8\u7684\u9a8c\u8bc1\u7801\u662f\uff1a147258\u3002\u8bf7\u4e0d\u8981\u628a\u9a8c\u8bc1\u7801\u6cc4\u9732\u7ed9\u5176\u4ed6\u4eba\u3002', 'mobile': '\u63a5\u6536\u8005\u7684\u624b\u673a\u53f7', 'format':'json' }) print(params) headers = {'Content-type': 'application/x-www-form-urlencoded', 'Accept': 'text/plain'} conn = http.client.HTTPConnection(host, port=80, timeout=30) conn.request('POST', sms_send_uri, params, headers) response = conn.getresponse() response_str = response.read() jsonstr = response_str.decode('utf-8') print(json.loads(jsonstr)) conn.close() if __name__ == '__main__': main()","title":"\u53d1\u9001\u77ed\u4fe1"},{"location":"new/15%E3%80%81%E5%9B%BE%E5%83%8F%E5%92%8C%E5%8A%9E%E5%85%AC%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86/","text":"\u56fe\u50cf\u548c\u529e\u516c\u6587\u6863\u5904\u7406 \u7528\u7a0b\u5e8f\u6765\u5904\u7406\u56fe\u50cf\u548c\u529e\u516c\u6587\u6863\u7ecf\u5e38\u51fa\u73b0\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0cPython\u7684\u6807\u51c6\u5e93\u4e2d\u867d\u7136\u6ca1\u6709\u76f4\u63a5\u652f\u6301\u8fd9\u4e9b\u64cd\u4f5c\u7684\u6a21\u5757\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Python\u751f\u6001\u5708\u4e2d\u7684\u7b2c\u4e09\u65b9\u6a21\u5757\u6765\u5b8c\u6210\u8fd9\u4e9b\u64cd\u4f5c\u3002 \u64cd\u4f5c\u56fe\u50cf \u8ba1\u7b97\u673a\u56fe\u50cf\u76f8\u5173\u77e5\u8bc6 \u989c\u8272\u3002\u5982\u679c\u4f60\u6709\u4f7f\u7528\u989c\u6599\u753b\u753b\u7684\u7ecf\u5386\uff0c\u90a3\u4e48\u4e00\u5b9a\u77e5\u9053\u6df7\u5408\u7ea2\u3001\u9ec4\u3001\u84dd\u4e09\u79cd\u989c\u6599\u53ef\u4ee5\u5f97\u5230\u5176\u4ed6\u7684\u989c\u8272\uff0c\u4e8b\u5b9e\u4e0a\u8fd9\u4e09\u79cd\u989c\u8272\u5c31\u662f\u88ab\u6211\u4eec\u79f0\u4e3a\u7f8e\u672f\u4e09\u539f\u8272\u7684\u4e1c\u897f\uff0c\u5b83\u4eec\u662f\u4e0d\u80fd\u518d\u5206\u89e3\u7684\u57fa\u672c\u989c\u8272\u3002\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u7ea2\u3001\u7eff\u3001\u84dd\u4e09\u79cd\u8272\u5149\u4ee5\u4e0d\u540c\u7684\u6bd4\u4f8b\u53e0\u52a0\u6765\u7ec4\u5408\u6210\u5176\u4ed6\u7684\u989c\u8272\uff0c\u56e0\u6b64\u8fd9\u4e09\u79cd\u989c\u8272\u5c31\u662f\u8272\u5149\u4e09\u539f\u8272\uff0c\u6240\u4ee5\u6211\u4eec\u901a\u5e38\u4f1a\u5c06\u4e00\u4e2a\u989c\u8272\u8868\u793a\u4e3a\u4e00\u4e2aRGB\u503c\u6216RGBA\u503c\uff08\u5176\u4e2d\u7684A\u8868\u793aAlpha\u901a\u9053\uff0c\u5b83\u51b3\u5b9a\u4e86\u900f\u8fc7\u8fd9\u4e2a\u56fe\u50cf\u7684\u50cf\u7d20\uff0c\u4e5f\u5c31\u662f\u900f\u660e\u5ea6\uff09\u3002 \u540d\u79f0 RGBA\u503c \u540d\u79f0 RGBA\u503c White (255, 255, 255, 255) Red (255, 0, 0, 255) Green (0, 255, 0, 255) Blue (0, 0, 255, 255) Gray (128, 128, 128, 255) Yellow (255, 255, 0, 255) Black (0, 0, 0, 255) Purple (128, 0, 128, 255) \u50cf\u7d20\u3002\u5bf9\u4e8e\u4e00\u4e2a\u7531\u6570\u5b57\u5e8f\u5217\u8868\u793a\u7684\u56fe\u50cf\u6765\u8bf4\uff0c\u6700\u5c0f\u7684\u5355\u4f4d\u5c31\u662f\u56fe\u50cf\u4e0a\u5355\u4e00\u989c\u8272\u7684\u5c0f\u65b9\u683c\uff0c\u8fd9\u4e9b\u5c0f\u65b9\u5757\u90fd\u6709\u4e00\u4e2a\u660e\u786e\u7684\u4f4d\u7f6e\u548c\u88ab\u5206\u914d\u7684\u8272\u5f69\u6570\u503c\uff0c\u800c\u8fd9\u4e9b\u4e00\u5c0f\u65b9\u683c\u7684\u989c\u8272\u548c\u4f4d\u7f6e\u51b3\u5b9a\u4e86\u8be5\u56fe\u50cf\u6700\u7ec8\u5448\u73b0\u51fa\u6765\u7684\u6837\u5b50\uff0c\u5b83\u4eec\u662f\u4e0d\u53ef\u5206\u5272\u7684\u5355\u4f4d\uff0c\u6211\u4eec\u901a\u5e38\u79f0\u4e4b\u4e3a\u50cf\u7d20\uff08pixel\uff09\u3002\u6bcf\u4e00\u4e2a\u56fe\u50cf\u90fd\u5305\u542b\u4e86\u4e00\u5b9a\u91cf\u7684\u50cf\u7d20\uff0c\u8fd9\u4e9b\u50cf\u7d20\u51b3\u5b9a\u56fe\u50cf\u5728\u5c4f\u5e55\u4e0a\u6240\u5448\u73b0\u7684\u5927\u5c0f\u3002 \u7528Pillow\u64cd\u4f5c\u56fe\u50cf Pillow\u662f\u7531\u4ece\u8457\u540d\u7684Python\u56fe\u50cf\u5904\u7406\u5e93PIL\u53d1\u5c55\u51fa\u6765\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u901a\u8fc7Pillow\u53ef\u4ee5\u5b9e\u73b0\u56fe\u50cf\u538b\u7f29\u548c\u56fe\u50cf\u5904\u7406\u7b49\u5404\u79cd\u64cd\u4f5c\u3002\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u5b89\u88c5Pillow\u3002 pip install pillow Pillow\u4e2d\u6700\u4e3a\u91cd\u8981\u7684\u662fImage\u7c7b\uff0c\u8bfb\u53d6\u548c\u5904\u7406\u56fe\u50cf\u90fd\u8981\u901a\u8fc7\u8fd9\u4e2a\u7c7b\u6765\u5b8c\u6210\u3002 >>> from PIL import Image >>> >>> image = Image.open('./res/guido.jpg') >>> image.format, image.size, image.mode ('JPEG', (500, 750), 'RGB') >>> image.show() \u526a\u88c1\u56fe\u50cf ```Python image = Image.open('./res/guido.jpg') rect = 80, 20, 310, 360 image.crop(rect).show() ``` \u751f\u6210\u7f29\u7565\u56fe ```Python image = Image.open('./res/guido.jpg') size = 128, 128 image.thumbnail(size) image.show() ``` \u7f29\u653e\u548c\u9ecf\u8d34\u56fe\u50cf ```Python image1 = Image.open('./res/luohao.png') image2 = Image.open('./res/guido.jpg') rect = 80, 20, 310, 360 guido_head = image2.crop(rect) width, height = guido_head.size image1.paste(guido_head.resize((int(width / 1.5), int(height / 1.5))), (172, 40)) ``` \u65cb\u8f6c\u548c\u7ffb\u8f6c ```Python image = Image.open('./res/guido.png') image.rotata(180).show() image.transpose(Image.FLIP_LEFT_RIGHT).show() ``` \u64cd\u4f5c\u50cf\u7d20 ```Python image = Image.open('./res/guido.jpg') for x in range(80, 310): ... for y in range(20, 360): ... image.putpixel((x, y), (128, 128, 128)) ... image.show() ``` \u6ee4\u955c\u6548\u679c ```Python from PIL import Image, ImageFilter image = Image.open('./res/guido.jpg') image.filter(ImageFilter.CONTOUR).show() ``` \u5904\u7406Excel\u7535\u5b50\u8868\u683c Python\u7684openpyxl\u6a21\u5757\u8ba9\u6211\u4eec\u53ef\u4ee5\u5728Python\u7a0b\u5e8f\u4e2d\u8bfb\u53d6\u548c\u4fee\u6539Excel\u7535\u5b50\u8868\u683c\uff0c\u5f53\u7136\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u7528LibreOffice Calc\u548cOpenOffice Calc\u6765\u5904\u7406Excel\u7684\u7535\u5b50\u8868\u683c\u6587\u4ef6\uff0c\u8fd9\u5c31\u610f\u5473\u7740openpyxl\u6a21\u5757\u4e5f\u80fd\u5904\u7406\u6765\u81ea\u8fd9\u4e9b\u8f6f\u4ef6\u751f\u6210\u7684\u7535\u5b50\u8868\u683c\u3002\u5173\u4e8eopenpyxl\u7684\u4f7f\u7528\u624b\u518c\u548c\u4f7f\u7528\u6587\u6863\u53ef\u4ee5\u67e5\u770b\u5b83\u7684 \u5b98\u65b9\u6587\u6863 \u3002 \u5904\u7406Word\u6587\u6863 \u5229\u7528python-docx\u6a21\u5757\uff0cPytho \u53ef\u4ee5\u521b\u5efa\u548c\u4fee\u6539Word\u6587\u6863\uff0c\u5f53\u7136\u8fd9\u91cc\u7684Word\u6587\u6863\u4e0d\u4ec5\u4ec5\u662f\u6307\u901a\u8fc7\u5fae\u8f6f\u7684Office\u8f6f\u4ef6\u521b\u5efa\u7684\u6269\u5c55\u540d\u4e3adocx\u7684\u6587\u6863\uff0cLibreOffice Writer\u548cOpenOffice Writer\u90fd\u662f\u514d\u8d39\u7684\u5b57\u5904\u7406\u8f6f\u4ef6\u3002 \u5904\u7406PDF\u6587\u6863 PDF\u662fPortable Document Format\u7684\u7f29\u5199\uff0c\u4f7f\u7528.pdf\u4f5c\u4e3a\u6587\u4ef6\u6269\u5c55\u540d\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u7814\u7a76\u4e00\u4e0b\u5982\u4f55\u901a\u8fc7Python\u5b9e\u73b0\u4ecePDF\u8bfb\u53d6\u6587\u672c\u5185\u5bb9\u548c\u4ece\u5df2\u6709\u7684\u6587\u6863\u751f\u6210\u65b0\u7684PDF\u6587\u4ef6\u3002","title":"\u7b2c\u5341\u4e94\u5929"},{"location":"new/15%E3%80%81%E5%9B%BE%E5%83%8F%E5%92%8C%E5%8A%9E%E5%85%AC%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86/#_1","text":"\u7528\u7a0b\u5e8f\u6765\u5904\u7406\u56fe\u50cf\u548c\u529e\u516c\u6587\u6863\u7ecf\u5e38\u51fa\u73b0\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0cPython\u7684\u6807\u51c6\u5e93\u4e2d\u867d\u7136\u6ca1\u6709\u76f4\u63a5\u652f\u6301\u8fd9\u4e9b\u64cd\u4f5c\u7684\u6a21\u5757\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Python\u751f\u6001\u5708\u4e2d\u7684\u7b2c\u4e09\u65b9\u6a21\u5757\u6765\u5b8c\u6210\u8fd9\u4e9b\u64cd\u4f5c\u3002","title":"\u56fe\u50cf\u548c\u529e\u516c\u6587\u6863\u5904\u7406"},{"location":"new/15%E3%80%81%E5%9B%BE%E5%83%8F%E5%92%8C%E5%8A%9E%E5%85%AC%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86/#_2","text":"","title":"\u64cd\u4f5c\u56fe\u50cf"},{"location":"new/15%E3%80%81%E5%9B%BE%E5%83%8F%E5%92%8C%E5%8A%9E%E5%85%AC%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86/#_3","text":"\u989c\u8272\u3002\u5982\u679c\u4f60\u6709\u4f7f\u7528\u989c\u6599\u753b\u753b\u7684\u7ecf\u5386\uff0c\u90a3\u4e48\u4e00\u5b9a\u77e5\u9053\u6df7\u5408\u7ea2\u3001\u9ec4\u3001\u84dd\u4e09\u79cd\u989c\u6599\u53ef\u4ee5\u5f97\u5230\u5176\u4ed6\u7684\u989c\u8272\uff0c\u4e8b\u5b9e\u4e0a\u8fd9\u4e09\u79cd\u989c\u8272\u5c31\u662f\u88ab\u6211\u4eec\u79f0\u4e3a\u7f8e\u672f\u4e09\u539f\u8272\u7684\u4e1c\u897f\uff0c\u5b83\u4eec\u662f\u4e0d\u80fd\u518d\u5206\u89e3\u7684\u57fa\u672c\u989c\u8272\u3002\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u7ea2\u3001\u7eff\u3001\u84dd\u4e09\u79cd\u8272\u5149\u4ee5\u4e0d\u540c\u7684\u6bd4\u4f8b\u53e0\u52a0\u6765\u7ec4\u5408\u6210\u5176\u4ed6\u7684\u989c\u8272\uff0c\u56e0\u6b64\u8fd9\u4e09\u79cd\u989c\u8272\u5c31\u662f\u8272\u5149\u4e09\u539f\u8272\uff0c\u6240\u4ee5\u6211\u4eec\u901a\u5e38\u4f1a\u5c06\u4e00\u4e2a\u989c\u8272\u8868\u793a\u4e3a\u4e00\u4e2aRGB\u503c\u6216RGBA\u503c\uff08\u5176\u4e2d\u7684A\u8868\u793aAlpha\u901a\u9053\uff0c\u5b83\u51b3\u5b9a\u4e86\u900f\u8fc7\u8fd9\u4e2a\u56fe\u50cf\u7684\u50cf\u7d20\uff0c\u4e5f\u5c31\u662f\u900f\u660e\u5ea6\uff09\u3002 \u540d\u79f0 RGBA\u503c \u540d\u79f0 RGBA\u503c White (255, 255, 255, 255) Red (255, 0, 0, 255) Green (0, 255, 0, 255) Blue (0, 0, 255, 255) Gray (128, 128, 128, 255) Yellow (255, 255, 0, 255) Black (0, 0, 0, 255) Purple (128, 0, 128, 255) \u50cf\u7d20\u3002\u5bf9\u4e8e\u4e00\u4e2a\u7531\u6570\u5b57\u5e8f\u5217\u8868\u793a\u7684\u56fe\u50cf\u6765\u8bf4\uff0c\u6700\u5c0f\u7684\u5355\u4f4d\u5c31\u662f\u56fe\u50cf\u4e0a\u5355\u4e00\u989c\u8272\u7684\u5c0f\u65b9\u683c\uff0c\u8fd9\u4e9b\u5c0f\u65b9\u5757\u90fd\u6709\u4e00\u4e2a\u660e\u786e\u7684\u4f4d\u7f6e\u548c\u88ab\u5206\u914d\u7684\u8272\u5f69\u6570\u503c\uff0c\u800c\u8fd9\u4e9b\u4e00\u5c0f\u65b9\u683c\u7684\u989c\u8272\u548c\u4f4d\u7f6e\u51b3\u5b9a\u4e86\u8be5\u56fe\u50cf\u6700\u7ec8\u5448\u73b0\u51fa\u6765\u7684\u6837\u5b50\uff0c\u5b83\u4eec\u662f\u4e0d\u53ef\u5206\u5272\u7684\u5355\u4f4d\uff0c\u6211\u4eec\u901a\u5e38\u79f0\u4e4b\u4e3a\u50cf\u7d20\uff08pixel\uff09\u3002\u6bcf\u4e00\u4e2a\u56fe\u50cf\u90fd\u5305\u542b\u4e86\u4e00\u5b9a\u91cf\u7684\u50cf\u7d20\uff0c\u8fd9\u4e9b\u50cf\u7d20\u51b3\u5b9a\u56fe\u50cf\u5728\u5c4f\u5e55\u4e0a\u6240\u5448\u73b0\u7684\u5927\u5c0f\u3002","title":"\u8ba1\u7b97\u673a\u56fe\u50cf\u76f8\u5173\u77e5\u8bc6"},{"location":"new/15%E3%80%81%E5%9B%BE%E5%83%8F%E5%92%8C%E5%8A%9E%E5%85%AC%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86/#pillow","text":"Pillow\u662f\u7531\u4ece\u8457\u540d\u7684Python\u56fe\u50cf\u5904\u7406\u5e93PIL\u53d1\u5c55\u51fa\u6765\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u901a\u8fc7Pillow\u53ef\u4ee5\u5b9e\u73b0\u56fe\u50cf\u538b\u7f29\u548c\u56fe\u50cf\u5904\u7406\u7b49\u5404\u79cd\u64cd\u4f5c\u3002\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u5b89\u88c5Pillow\u3002 pip install pillow Pillow\u4e2d\u6700\u4e3a\u91cd\u8981\u7684\u662fImage\u7c7b\uff0c\u8bfb\u53d6\u548c\u5904\u7406\u56fe\u50cf\u90fd\u8981\u901a\u8fc7\u8fd9\u4e2a\u7c7b\u6765\u5b8c\u6210\u3002 >>> from PIL import Image >>> >>> image = Image.open('./res/guido.jpg') >>> image.format, image.size, image.mode ('JPEG', (500, 750), 'RGB') >>> image.show() \u526a\u88c1\u56fe\u50cf ```Python image = Image.open('./res/guido.jpg') rect = 80, 20, 310, 360 image.crop(rect).show() ``` \u751f\u6210\u7f29\u7565\u56fe ```Python image = Image.open('./res/guido.jpg') size = 128, 128 image.thumbnail(size) image.show() ``` \u7f29\u653e\u548c\u9ecf\u8d34\u56fe\u50cf ```Python image1 = Image.open('./res/luohao.png') image2 = Image.open('./res/guido.jpg') rect = 80, 20, 310, 360 guido_head = image2.crop(rect) width, height = guido_head.size image1.paste(guido_head.resize((int(width / 1.5), int(height / 1.5))), (172, 40)) ``` \u65cb\u8f6c\u548c\u7ffb\u8f6c ```Python image = Image.open('./res/guido.png') image.rotata(180).show() image.transpose(Image.FLIP_LEFT_RIGHT).show() ``` \u64cd\u4f5c\u50cf\u7d20 ```Python image = Image.open('./res/guido.jpg') for x in range(80, 310): ... for y in range(20, 360): ... image.putpixel((x, y), (128, 128, 128)) ... image.show() ``` \u6ee4\u955c\u6548\u679c ```Python from PIL import Image, ImageFilter image = Image.open('./res/guido.jpg') image.filter(ImageFilter.CONTOUR).show() ```","title":"\u7528Pillow\u64cd\u4f5c\u56fe\u50cf"},{"location":"new/15%E3%80%81%E5%9B%BE%E5%83%8F%E5%92%8C%E5%8A%9E%E5%85%AC%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86/#excel","text":"Python\u7684openpyxl\u6a21\u5757\u8ba9\u6211\u4eec\u53ef\u4ee5\u5728Python\u7a0b\u5e8f\u4e2d\u8bfb\u53d6\u548c\u4fee\u6539Excel\u7535\u5b50\u8868\u683c\uff0c\u5f53\u7136\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u7528LibreOffice Calc\u548cOpenOffice Calc\u6765\u5904\u7406Excel\u7684\u7535\u5b50\u8868\u683c\u6587\u4ef6\uff0c\u8fd9\u5c31\u610f\u5473\u7740openpyxl\u6a21\u5757\u4e5f\u80fd\u5904\u7406\u6765\u81ea\u8fd9\u4e9b\u8f6f\u4ef6\u751f\u6210\u7684\u7535\u5b50\u8868\u683c\u3002\u5173\u4e8eopenpyxl\u7684\u4f7f\u7528\u624b\u518c\u548c\u4f7f\u7528\u6587\u6863\u53ef\u4ee5\u67e5\u770b\u5b83\u7684 \u5b98\u65b9\u6587\u6863 \u3002","title":"\u5904\u7406Excel\u7535\u5b50\u8868\u683c"},{"location":"new/15%E3%80%81%E5%9B%BE%E5%83%8F%E5%92%8C%E5%8A%9E%E5%85%AC%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86/#word","text":"\u5229\u7528python-docx\u6a21\u5757\uff0cPytho \u53ef\u4ee5\u521b\u5efa\u548c\u4fee\u6539Word\u6587\u6863\uff0c\u5f53\u7136\u8fd9\u91cc\u7684Word\u6587\u6863\u4e0d\u4ec5\u4ec5\u662f\u6307\u901a\u8fc7\u5fae\u8f6f\u7684Office\u8f6f\u4ef6\u521b\u5efa\u7684\u6269\u5c55\u540d\u4e3adocx\u7684\u6587\u6863\uff0cLibreOffice Writer\u548cOpenOffice Writer\u90fd\u662f\u514d\u8d39\u7684\u5b57\u5904\u7406\u8f6f\u4ef6\u3002","title":"\u5904\u7406Word\u6587\u6863"},{"location":"new/15%E3%80%81%E5%9B%BE%E5%83%8F%E5%92%8C%E5%8A%9E%E5%85%AC%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86/#pdf","text":"PDF\u662fPortable Document Format\u7684\u7f29\u5199\uff0c\u4f7f\u7528.pdf\u4f5c\u4e3a\u6587\u4ef6\u6269\u5c55\u540d\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u7814\u7a76\u4e00\u4e0b\u5982\u4f55\u901a\u8fc7Python\u5b9e\u73b0\u4ecePDF\u8bfb\u53d6\u6587\u672c\u5185\u5bb9\u548c\u4ece\u5df2\u6709\u7684\u6587\u6863\u751f\u6210\u65b0\u7684PDF\u6587\u4ef6\u3002","title":"\u5904\u7406PDF\u6587\u6863"},{"location":"new/1%E3%80%81%E5%88%9D%E8%AF%86Python/","text":"Day01 - \u521d\u8bc6Python Python\u7b80\u4ecb Python\u7684\u5386\u53f2 1989\u5e74\u5723\u8bde\u8282\uff1aGuido von Rossum\u5f00\u59cb\u5199Python\u8bed\u8a00\u7684\u7f16\u8bd1\u5668\u3002 1991\u5e742\u6708\uff1a\u7b2c\u4e00\u4e2aPython\u7f16\u8bd1\u5668\uff08\u540c\u65f6\u4e5f\u662f\u89e3\u91ca\u5668\uff09\u8bde\u751f\uff0c\u5b83\u662f\u7528C\u8bed\u8a00\u5b9e\u73b0\u7684\uff08\u540e\u9762\u53c8\u51fa\u73b0\u4e86Java\u548cC#\u5b9e\u73b0\u7684\u7248\u672cJython\u548cIronPython\uff0c\u4ee5\u53caPyPy\u3001Brython\u3001Pyston\u7b49\u5176\u4ed6\u5b9e\u73b0\uff09\uff0c\u53ef\u4ee5\u8c03\u7528C\u8bed\u8a00\u7684\u5e93\u51fd\u6570\u3002\u5728\u6700\u65e9\u7684\u7248\u672c\u4e2d\uff0cPython\u5df2\u7ecf\u63d0\u4f9b\u4e86\u5bf9\u201c\u7c7b\u201d\uff0c\u201c\u51fd\u6570\u201d\uff0c\u201c\u5f02\u5e38\u5904\u7406\u201d\u7b49\u6784\u9020\u5757\u7684\u652f\u6301\uff0c\u540c\u65f6\u63d0\u4f9b\u4e86\u201c\u5217\u8868\u201d\u548c\u201c\u5b57\u5178\u201d\u7b49\u6838\u5fc3\u6570\u636e\u7c7b\u578b\uff0c\u540c\u65f6\u652f\u6301\u4ee5\u6a21\u5757\u4e3a\u57fa\u7840\u7684\u62d3\u5c55\u7cfb\u7edf\u3002 1994\u5e741\u6708\uff1aPython 1.0\u6b63\u5f0f\u53d1\u5e03\u3002 2000\u5e7410\u670816\u65e5\uff1aPython 2.0\u53d1\u5e03\uff0c\u589e\u52a0\u4e86\u5b9e\u73b0\u5b8c\u6574\u7684 \u5783\u573e\u56de\u6536 \uff0c\u63d0\u4f9b\u4e86\u5bf9 Unicode \u7684\u652f\u6301\u3002\u4e0e\u6b64\u540c\u65f6\uff0cPython\u7684\u6574\u4e2a\u5f00\u53d1\u8fc7\u7a0b\u66f4\u52a0\u900f\u660e\uff0c\u793e\u533a\u5bf9\u5f00\u53d1\u8fdb\u5ea6\u7684\u5f71\u54cd\u9010\u6e10\u6269\u5927\uff0c\u751f\u6001\u5708\u5f00\u59cb\u6162\u6162\u5f62\u6210\u3002 2008\u5e7412\u67083\u65e5\uff1aPython 3.0\u53d1\u5e03\uff0c\u5b83\u5e76\u4e0d\u5b8c\u5168\u517c\u5bb9\u4e4b\u524d\u7684Python\u4ee3\u7801\uff0c\u4e0d\u8fc7\u56e0\u4e3a\u76ee\u524d\u8fd8\u6709\u4e0d\u5c11\u516c\u53f8\u5728\u9879\u76ee\u548c\u8fd0\u7ef4\u4e2d\u4f7f\u7528Python 2.x\u7248\u672c\uff0c\u6240\u4ee5Python 3.x\u7684\u5f88\u591a\u65b0\u7279\u6027\u540e\u6765\u4e5f\u88ab\u79fb\u690d\u5230Python 2.6/2.7\u7248\u672c\u4e2d\u3002 \u76ee\u524d\u6211\u4eec\u4f7f\u7528\u7684Python 3.7.x\u7684\u7248\u672c\u662f\u57282018\u5e74\u53d1\u5e03\u7684\uff0cPython\u7684\u7248\u672c\u53f7\u5206\u4e3a\u4e09\u6bb5\uff0c\u5f62\u5982A.B.C\u3002\u5176\u4e2dA\u8868\u793a\u5927\u7248\u672c\u53f7\uff0c\u4e00\u822c\u5f53\u6574\u4f53\u91cd\u5199\uff0c\u6216\u51fa\u73b0\u4e0d\u5411\u540e\u517c\u5bb9\u7684\u6539\u53d8\u65f6\uff0c\u589e\u52a0A\uff1bB\u8868\u793a\u529f\u80fd\u66f4\u65b0\uff0c\u51fa\u73b0\u65b0\u529f\u80fd\u65f6\u589e\u52a0B\uff1bC\u8868\u793a\u5c0f\u7684\u6539\u52a8\uff08\u5982\u4fee\u590d\u4e86\u67d0\u4e2aBug\uff09\uff0c\u53ea\u8981\u6709\u4fee\u6539\u5c31\u589e\u52a0C\u3002\u5982\u679c\u5bf9Python\u7684\u5386\u53f2\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u67e5\u770b\u4e00\u7bc7\u540d\u4e3a \u300aPython\u7b80\u53f2\u300b \u7684\u535a\u6587\u3002 Python\u7684\u4f18\u7f3a\u70b9 Python\u7684\u4f18\u70b9\u5f88\u591a\uff0c\u7b80\u5355\u7684\u53ef\u4ee5\u603b\u7ed3\u4e3a\u4ee5\u4e0b\u51e0\u70b9\u3002 \u7b80\u5355\u548c\u660e\u786e\uff0c\u505a\u4e00\u4ef6\u4e8b\u53ea\u6709\u4e00\u79cd\u65b9\u6cd5\u3002 \u5b66\u4e60\u66f2\u7ebf\u4f4e\uff0c\u8ddf\u5176\u4ed6\u5f88\u591a\u8bed\u8a00\u76f8\u6bd4\uff0cPython\u66f4\u5bb9\u6613\u4e0a\u624b\u3002 \u5f00\u653e\u6e90\u4ee3\u7801\uff0c\u62e5\u6709\u5f3a\u5927\u7684\u793e\u533a\u548c\u751f\u6001\u5708\u3002 \u89e3\u91ca\u578b\u8bed\u8a00\uff0c\u5929\u751f\u5177\u6709\u5e73\u53f0\u53ef\u79fb\u690d\u6027\u3002 \u652f\u6301\u4e24\u79cd\u4e3b\u6d41\u7684\u7f16\u7a0b\u8303\u5f0f\uff08\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u548c\u51fd\u6570\u5f0f\u7f16\u7a0b\uff09\u90fd\u63d0\u4f9b\u4e86\u652f\u6301\u3002 \u53ef\u6269\u5c55\u6027\u548c\u53ef\u5d4c\u5165\u6027\uff0c\u53ef\u4ee5\u8c03\u7528C/C++\u4ee3\u7801\uff0c\u4e5f\u53ef\u4ee5\u5728C/C++\u4e2d\u8c03\u7528Python\u3002 \u4ee3\u7801\u89c4\u8303\u7a0b\u5ea6\u9ad8\uff0c\u53ef\u8bfb\u6027\u5f3a\uff0c\u9002\u5408\u6709\u4ee3\u7801\u6d01\u7656\u548c\u5f3a\u8feb\u75c7\u7684\u4eba\u7fa4\u3002 Python\u7684\u7f3a\u70b9\u4e3b\u8981\u96c6\u4e2d\u5728\u4ee5\u4e0b\u51e0\u70b9\u3002 \u6267\u884c\u6548\u7387\u7a0d\u4f4e\uff0c\u56e0\u6b64\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u53ef\u4ee5\u7531C/C++\u7f16\u5199\u3002 \u4ee3\u7801\u65e0\u6cd5\u52a0\u5bc6\uff0c\u4f46\u662f\u73b0\u5728\u7684\u516c\u53f8\u5f88\u591a\u90fd\u4e0d\u662f\u5356\u8f6f\u4ef6\u800c\u662f\u5356\u670d\u52a1\uff0c\u8fd9\u4e2a\u95ee\u9898\u4f1a\u88ab\u6de1\u5316\u3002 \u5728\u5f00\u53d1\u65f6\u53ef\u4ee5\u9009\u62e9\u7684\u6846\u67b6\u592a\u591a\uff08\u5982Web\u6846\u67b6\u5c31\u6709100\u591a\u4e2a\uff09\uff0c\u6709\u9009\u62e9\u7684\u5730\u65b9\u5c31\u6709\u9519\u8bef\u3002 Python\u7684\u5e94\u7528\u9886\u57df \u76ee\u524dPython\u5728\u4e91\u57fa\u7840\u8bbe\u65bd\u3001DevOps\u3001\u7f51\u7edc\u722c\u866b\u5f00\u53d1\u3001\u6570\u636e\u5206\u6790\u6316\u6398\u3001\u673a\u5668\u5b66\u4e60\u7b49\u9886\u57df\u90fd\u6709\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\uff0c\u56e0\u6b64\u4e5f\u4ea7\u751f\u4e86Web\u540e\u7aef\u5f00\u53d1\u3001\u6570\u636e\u63a5\u53e3\u5f00\u53d1\u3001\u81ea\u52a8\u5316\u8fd0\u7ef4\u3001\u81ea\u52a8\u5316\u6d4b\u8bd5\u3001\u79d1\u5b66\u8ba1\u7b97\u548c\u53ef\u89c6\u5316\u3001\u6570\u636e\u5206\u6790\u3001\u91cf\u5316\u4ea4\u6613\u3001\u673a\u5668\u4eba\u5f00\u53d1\u3001\u56fe\u50cf\u8bc6\u522b\u548c\u5904\u7406\u7b49\u4e00\u7cfb\u5217\u7684\u804c\u4f4d\u3002 \u642d\u5efa\u7f16\u7a0b\u73af\u5883 Windows\u73af\u5883 \u53ef\u4ee5\u5728 Python\u5b98\u65b9\u7f51\u7ad9 \u4e0b\u8f7d\u5230Python\u7684Windows\u5b89\u88c5\u7a0b\u5e8f\uff08exe\u6587\u4ef6\uff09\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u5982\u679c\u5728Windows 7\u73af\u5883\u4e0b\u5b89\u88c5\u9700\u8981\u5148\u5b89\u88c5Service Pack 1\u8865\u4e01\u5305\uff08\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u5de5\u5177\u8f6f\u4ef6\u81ea\u52a8\u5b89\u88c5\u7cfb\u7edf\u8865\u4e01\u7684\u529f\u80fd\u6765\u5b89\u88c5\uff09\uff0c\u5b89\u88c5\u8fc7\u7a0b\u5efa\u8bae\u52fe\u9009\u201cAdd Python 3.6 to PATH\u201d\uff08\u5c06Python 3.6\u6dfb\u52a0\u5230PATH\u73af\u5883\u53d8\u91cf\uff09\u5e76\u9009\u62e9\u81ea\u5b9a\u4e49\u5b89\u88c5\uff0c\u5728\u8bbe\u7f6e\u201cOptional Features\u201d\u754c\u9762\u6700\u597d\u5c06\u201cpip\u201d\u3001\u201ctcl/tk\u201d\u3001\u201cPython test suite\u201d\u7b49\u9879\u5168\u90e8\u52fe\u9009\u4e0a\u3002\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u5b89\u88c5\u8def\u5f84\u5e76\u4fdd\u8bc1\u8def\u5f84\u4e2d\u6ca1\u6709\u4e2d\u6587\u3002\u5b89\u88c5\u5b8c\u6210\u4f1a\u770b\u5230\u201cSetup was successful\u201d\u7684\u63d0\u793a\uff0c\u4f46\u662f\u5728\u542f\u52a8Python\u73af\u5883\u65f6\u53ef\u80fd\u4f1a\u56e0\u4e3a\u7f3a\u5931\u4e00\u4e9b\u52a8\u6001\u94fe\u63a5\u5e93\u6587\u4ef6\u800c\u5bfc\u81f4Python\u89e3\u91ca\u5668\u65e0\u6cd5\u8fd0\u884c\uff0c\u5e38\u89c1\u7684\u95ee\u9898\u4e3b\u8981\u662fapi-ms-win-crt*.dll\u7f3a\u5931\u4ee5\u53ca\u66f4\u65b0DirectX\u4e4b\u540e\u5bfc\u81f4\u67d0\u4e9b\u52a8\u6001\u94fe\u63a5\u5e93\u6587\u4ef6\u7f3a\u5931\uff0c\u524d\u8005\u53ef\u4ee5\u53c2\u7167 \u300aapi-ms-win-crt*.dll\u7f3a\u5931\u539f\u56e0\u5206\u6790\u548c\u89e3\u51b3\u65b9\u6cd5\u300b \u4e00\u6587\u8bb2\u89e3\u7684\u65b9\u6cd5\u8fdb\u884c\u5904\u7406\u6216\u8005\u76f4\u63a5\u5728 \u5fae\u8f6f\u5b98\u7f51 \u4e0b\u8f7dVisual C++ Redistributable for Visual Studio 2015\u6587\u4ef6\u8fdb\u884c\u4fee\u590d\uff0c\u540e\u8005\u53ef\u4ee5\u4e0b\u8f7d\u4e00\u4e2aDirectX\u4fee\u590d\u5de5\u5177\u8fdb\u884c\u4fee\u590d\u3002 Linux\u73af\u5883 Linux\u73af\u5883\u81ea\u5e26\u4e86Python 2.x\u7248\u672c\uff0c\u4f46\u662f\u5982\u679c\u8981\u66f4\u65b0\u52303.x\u7684\u7248\u672c\uff0c\u53ef\u4ee5\u5728 Python\u7684\u5b98\u65b9\u7f51\u7ad9 \u4e0b\u8f7dPython\u7684\u6e90\u4ee3\u7801\u5e76\u901a\u8fc7\u6e90\u4ee3\u7801\u6784\u5efa\u5b89\u88c5\u7684\u65b9\u5f0f\u8fdb\u884c\u5b89\u88c5\uff0c\u5177\u4f53\u7684\u6b65\u9aa4\u5982\u4e0b\u6240\u793a\u3002 \u5b89\u88c5\u4f9d\u8d56\u5e93\uff08\u56e0\u4e3a\u6ca1\u6709\u8fd9\u4e9b\u4f9d\u8d56\u5e93\u53ef\u80fd\u5728\u6e90\u4ee3\u7801\u6784\u4ef6\u5b89\u88c5\u65f6\u56e0\u4e3a\u7f3a\u5931\u5e95\u5c42\u4f9d\u8d56\u5e93\u800c\u5931\u8d25\uff09\u3002 yum -y install wget gcc zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel libffi-devel \u4e0b\u8f7dPython\u6e90\u4ee3\u7801\u5e76\u89e3\u538b\u7f29\u5230\u6307\u5b9a\u76ee\u5f55\u3002 wget https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tgz xz -d Python-3.7.3.tar.xz tar -xvf Python-3.7.3.tar \u5207\u6362\u81f3Python\u6e90\u4ee3\u7801\u76ee\u5f55\u5e76\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u8fdb\u884c\u914d\u7f6e\u548c\u5b89\u88c5\u3002 cd Python-3.7.3 ./configure --prefix=/usr/local/python37 --enable-optimizations make && make install \u4fee\u6539\u7528\u6237\u4e3b\u76ee\u5f55\u4e0b\u540d\u4e3a.bash_profile\u7684\u6587\u4ef6\uff0c\u914d\u7f6ePATH\u73af\u5883\u53d8\u91cf\u5e76\u4f7f\u5176\u751f\u6548\u3002 cd ~ vim .bash_profile # ... \u6b64\u5904\u7701\u7565\u4e0a\u9762\u7684\u4ee3\u7801 ... export PATH=$PATH:/usr/local/python37/bin # ... \u6b64\u5904\u7701\u7565\u4e0b\u9762\u7684\u4ee3\u7801 ... source .bash_profile MacOS\u73af\u5883 MacOS\u4e5f\u662f\u81ea\u5e26\u4e86Python 2.x\u7248\u672c\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7 Python\u7684\u5b98\u65b9\u7f51\u7ad9 \u63d0\u4f9b\u7684\u5b89\u88c5\u6587\u4ef6\uff08pkg\u6587\u4ef6\uff09\u5b89\u88c53.x\u7684\u7248\u672c\u3002\u9ed8\u8ba4\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u7ec8\u7aef\u6267\u884cpython\u547d\u4ee4\u6765\u542f\u52a82.x\u7248\u672c\u7684Python\u89e3\u91ca\u5668\uff0c\u53ef\u4ee5\u901a\u8fc7\u6267\u884cpython3\u547d\u4ee4\u6765\u542f\u52a83.x\u7248\u672c\u7684Python\u89e3\u91ca\u5668\u3002 \u4ece\u7ec8\u7aef\u8fd0\u884cPython\u7a0b\u5e8f \u786e\u8ba4Python\u7684\u7248\u672c \u5728\u7ec8\u7aef\u6216\u547d\u4ee4\u884c\u63d0\u793a\u7b26\u4e2d\u952e\u5165\u4e0b\u9762\u7684\u547d\u4ee4\u3002 python --version \u5f53\u7136\u4e5f\u53ef\u4ee5\u5148\u8f93\u5165python\u8fdb\u5165\u4ea4\u4e92\u5f0f\u73af\u5883\uff0c\u518d\u6267\u884c\u4ee5\u4e0b\u7684\u4ee3\u7801\u68c0\u67e5Python\u7684\u7248\u672c\u3002 import sys print(sys.version_info) print(sys.version) \u7f16\u5199Python\u6e90\u4ee3\u7801 \u53ef\u4ee5\u7528\u6587\u672c\u7f16\u8f91\u5de5\u5177\uff08\u63a8\u8350\u4f7f\u7528Sublime\u3001Atom\u3001TextMate\u3001VSCode\u7b49\u9ad8\u7ea7\u6587\u672c\u7f16\u8f91\u5de5\u5177\uff09\u7f16\u5199Python\u6e90\u4ee3\u7801\u5e76\u5c06\u5176\u547d\u540d\u4e3ahello.py\u4fdd\u5b58\u8d77\u6765\uff0c\u4ee3\u7801\u5185\u5bb9\u5982\u4e0b\u6240\u793a\u3002 print('hello, world!') \u8fd0\u884c\u7a0b\u5e8f \u5207\u6362\u5230\u6e90\u4ee3\u7801\u6240\u5728\u7684\u76ee\u5f55\u5e76\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u770b\u770b\u5c4f\u5e55\u4e0a\u662f\u5426\u8f93\u51fa\u4e86\"hello, world!\"\u3002 python hello.py \u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca \u6ce8\u91ca\u662f\u7f16\u7a0b\u8bed\u8a00\u7684\u4e00\u4e2a\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u7528\u4e8e\u5728\u6e90\u4ee3\u7801\u4e2d\u89e3\u91ca\u4ee3\u7801\u7684\u4f5c\u7528\u4ece\u800c\u589e\u5f3a\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\u548c\u53ef\u7ef4\u62a4\u6027\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u5c06\u6e90\u4ee3\u7801\u4e2d\u4e0d\u9700\u8981\u53c2\u4e0e\u8fd0\u884c\u7684\u4ee3\u7801\u6bb5\u901a\u8fc7\u6ce8\u91ca\u6765\u53bb\u6389\uff0c\u8fd9\u4e00\u70b9\u5728\u8c03\u8bd5\u7a0b\u5e8f\u7684\u65f6\u5019\u7ecf\u5e38\u7528\u5230\u3002\u6ce8\u91ca\u5728\u968f\u6e90\u4ee3\u7801\u8fdb\u5165\u9884\u5904\u7406\u5668\u6216\u7f16\u8bd1\u65f6\u4f1a\u88ab\u79fb\u9664\uff0c\u4e0d\u4f1a\u5728\u76ee\u6807\u4ee3\u7801\u4e2d\u4fdd\u7559\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u7a0b\u5e8f\u7684\u6267\u884c\u7ed3\u679c\u3002 \u5355\u884c\u6ce8\u91ca - \u4ee5#\u548c\u7a7a\u683c\u5f00\u5934\u7684\u90e8\u5206 \u591a\u884c\u6ce8\u91ca - \u4e09\u4e2a\u5f15\u53f7\u5f00\u5934\uff0c\u4e09\u4e2a\u5f15\u53f7\u7ed3\u5c3e \"\"\" \u7b2c\u4e00\u4e2aPython\u7a0b\u5e8f - hello, world! \u5411\u4f1f\u5927\u7684Dennis M. Ritchie\u5148\u751f\u81f4\u656c Version: 0.1 Author: \u9a86\u660a \"\"\" print('hello, world!') # print(\"\u4f60\u597d,\u4e16\u754c\uff01\") print('\u4f60\u597d', '\u4e16\u754c') print('hello', 'world', sep=', ', end='!') print('goodbye, world', end='!\\n') \u5176\u4ed6\u5de5\u5177\u4ecb\u7ecd IDLE - \u81ea\u5e26\u7684\u96c6\u6210\u5f00\u53d1\u5de5\u5177 IDLE\u662f\u5b89\u88c5Python\u73af\u5883\u65f6\u81ea\u5e26\u7684\u96c6\u6210\u5f00\u53d1\u5de5\u5177\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u4f46\u662f\u7531\u4e8eIDLE\u7684\u7528\u6237\u4f53\u9a8c\u5e76\u4e0d\u662f\u90a3\u4e48\u597d\u6240\u4ee5\u5f88\u5c11\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\u88ab\u91c7\u7528\u3002 IPython - \u66f4\u597d\u7684\u4ea4\u4e92\u5f0f\u7f16\u7a0b\u5de5\u5177 IPython\u662f\u4e00\u79cd\u57fa\u4e8ePython\u7684\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668\u3002\u76f8\u8f83\u4e8e\u539f\u751f\u7684Python Shell\uff0cIPython\u63d0\u4f9b\u4e86\u66f4\u4e3a\u5f3a\u5927\u7684\u7f16\u8f91\u548c\u4ea4\u4e92\u529f\u80fd\u3002\u53ef\u4ee5\u901a\u8fc7Python\u7684\u5305\u7ba1\u7406\u5de5\u5177pip\u5b89\u88c5IPython\u548cJupyter\uff0c\u5177\u4f53\u7684\u64cd\u4f5c\u5982\u4e0b\u6240\u793a\u3002 pip install ipython jupyter \u6216\u8005 python -m pip install ipython jupyter \u5b89\u88c5\u6210\u529f\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684ipython\u547d\u4ee4\u542f\u52a8IPython\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7Jupyter\u8fd0\u884c\u540d\u4e3anotebook\u7684\u9879\u76ee\u5728\u6d4f\u89c8\u5668\u7a97\u53e3\u4e2d\u8fdb\u884c\u4ea4\u4e92\u5f0f\u64cd\u4f5c\u3002 jupyter notebook anaconda - \u4e00\u7ad9\u5f0f\u7684\u6570\u636e\u79d1\u5b66\u795e\u5668 Anaconda\u6307\u7684\u662f\u4e00\u4e2a\u5f00\u6e90\u7684Python\u53d1\u884c\u7248\u672c\uff0c\u5176\u5305\u542b\u4e86conda\u3001Python\u7b49180\u591a\u4e2a\u79d1\u5b66\u5305\u53ca\u5176\u4f9d\u8d56\u9879\u3002 \u56e0\u4e3a\u5305\u542b\u4e86\u5927\u91cf\u7684\u79d1\u5b66\u5305\uff0cAnaconda \u7684\u4e0b\u8f7d\u6587\u4ef6\u6bd4\u8f83\u5927\uff08\u7ea6 531 MB\uff09\uff0c\u5982\u679c\u53ea\u9700\u8981\u67d0\u4e9b\u5305\uff0c\u6216\u8005\u9700\u8981\u8282\u7701\u5e26\u5bbd\u6216\u5b58\u50a8\u7a7a\u95f4\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528Miniconda\u8fd9\u4e2a\u8f83\u5c0f\u7684\u53d1\u884c\u7248\uff08\u4ec5\u5305\u542bconda\u548c Python\uff09\u3002 \u5bf9\u4e8e\u5b66\u4e60\u6570\u636e\u79d1\u5b66\u7684\u4eba\u6765\u8bf4\uff0canaconda\u662f\u7edd\u5bf9\u7684\u795e\u5668\uff0c\u5b89\u88c5\u7b80\u4fbf\uff0c\u800c\u4e14anaconda\u652f\u6301\u5b89\u88c5\u76f8\u5173\u8f6f\u4ef6\u3010\u4f8b\u5982\u524d\u6587\u63d0\u5230\u7684ipython\uff0cjupyter notebook\uff0c\u751a\u81f3\u6709R\u7b49\u5176\u4ed6\u6570\u636e\u79d1\u5b66\u8f6f\u4ef6 \u3011 \u4e00\u4e2a\u76f8\u5f53\u6709\u4ef7\u503c\u7684\u4ecb\u7ecd \u73b0\u5728\u552f\u4e00\u7684\u95ee\u9898\u5728\u4e8e\u6e05\u534e\u955c\u50cf\u670d\u52a1\u5df2\u7ecf\u5173\u95ed\uff0c\u8de8\u56fd\u4e0b\u8f7d\u4f1a\u6bd4\u8f83\u6162 Sublime - \u6587\u672c\u7f16\u8f91\u795e\u5668 \u9996\u5148\u53ef\u4ee5\u901a\u8fc7 \u5b98\u65b9\u7f51\u7ad9 \u4e0b\u8f7d\u5b89\u88c5\u7a0b\u5e8f\u5b89\u88c5Sublime 3\u6216Sublime 2\u3002 \u5b89\u88c5\u5305\u7ba1\u7406\u5de5\u5177\u3002\u901a\u8fc7\u5feb\u6377\u952eCtrl+`\u6216\u8005\u5728View\u83dc\u5355\u4e2d\u9009\u62e9Show Console\u6253\u5f00\u63a7\u5236\u53f0\uff0c\u8f93\u5165\u4e0b\u9762\u7684\u4ee3\u7801\u3002 Sublime 3 Python import urllib.request,os;pf='Package Control.sublime-package';ipp=sublime.installed_packages_path();urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler()));open(os.path.join(ipp,pf),'wb').write(urllib.request.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()) Sublime 2 Python import urllib2,os;pf='Package Control.sublime-package';ipp=sublime.installed_packages_path();os.makedirs(ipp)ifnotos.path.exists(ipp)elseNone;urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler()));open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read());print('Please restart Sublime Text to finish installation') \u5b89\u88c5\u63d2\u4ef6\u3002\u901a\u8fc7Preference\u83dc\u5355\u7684Package Control\u6216\u5feb\u6377\u952eCtrl+Shift+P\u6253\u5f00\u547d\u4ee4\u9762\u677f\uff0c\u5728\u9762\u677f\u4e2d\u8f93\u5165Install Package\u5c31\u53ef\u4ee5\u627e\u5230\u5b89\u88c5\u63d2\u4ef6\u7684\u5de5\u5177\uff0c\u7136\u540e\u518d\u67e5\u627e\u9700\u8981\u7684\u63d2\u4ef6\u3002\u6211\u4eec\u63a8\u8350\u5927\u5bb6\u5b89\u88c5\u4ee5\u4e0b\u51e0\u4e2a\u63d2\u4ef6\uff1a SublimeCodeIntel - \u4ee3\u7801\u81ea\u52a8\u8865\u5168\u5de5\u5177\u63d2\u4ef6\u3002 Emmet - \u524d\u7aef\u5f00\u53d1\u4ee3\u7801\u6a21\u677f\u63d2\u4ef6\u3002 Git - \u7248\u672c\u63a7\u5236\u5de5\u5177\u63d2\u4ef6\u3002 Python PEP8 Autoformat - PEP8\u89c4\u8303\u81ea\u52a8\u683c\u5f0f\u5316\u63d2\u4ef6\u3002 ConvertToUTF8 - \u5c06\u672c\u5730\u7f16\u7801\u8f6c\u6362\u4e3aUTF-8\u3002 PyCharm - Python\u5f00\u53d1\u795e\u5668 PyCharm\u7684\u5b89\u88c5\u3001\u914d\u7f6e\u548c\u4f7f\u7528\u6211\u4eec\u5728\u540e\u9762\u4f1a\u8fdb\u884c\u4ecb\u7ecd\u3002 \u7ec3\u4e60 \u5728Python\u4ea4\u4e92\u73af\u5883\u4e2d\u67e5\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u7ed3\u679c\uff0c\u5e76\u5c06\u5185\u5bb9\u7ffb\u8bd1\u6210\u4e2d\u6587\u3002 ```Python import this Beautiful is better than ugly. Explicit is better than implicit. Simple is better than complex. Complex is better than complicated. Flat is better than nested. Sparse is better than dense. Readability counts. Special cases aren't special enough to break the rules. Although practicality beats purity. Errors should never pass silently. Unless explicitly silenced. In the face of ambiguity, refuse the temptation to guess. There should be one-- and preferably only one --obvious way to do it. Although that way may not be obvious at first unless you're Dutch. Now is better than never. Although never is often better than right now. If the implementation is hard to explain, it's a bad idea. If the implementation is easy to explain, it may be a good idea. Namespaces are one honking great idea -- let's do more of those! ``` \u5b66\u4e60\u4f7f\u7528turtle\u5728\u5c4f\u5e55\u4e0a\u7ed8\u5236\u56fe\u5f62\u3002 ```Python import turtle turtle.pensize(4) turtle.pencolor('red') turtle.forward(100) turtle.right(90) turtle.forward(100) turtle.right(90) turtle.forward(100) turtle.right(90) turtle.forward(100) turtle.mainloop() ```","title":"\u7b2c\u4e00\u5929"},{"location":"new/1%E3%80%81%E5%88%9D%E8%AF%86Python/#day01-python","text":"","title":"Day01 - \u521d\u8bc6Python"},{"location":"new/1%E3%80%81%E5%88%9D%E8%AF%86Python/#python","text":"","title":"Python\u7b80\u4ecb"},{"location":"new/1%E3%80%81%E5%88%9D%E8%AF%86Python/#python_1","text":"1989\u5e74\u5723\u8bde\u8282\uff1aGuido von Rossum\u5f00\u59cb\u5199Python\u8bed\u8a00\u7684\u7f16\u8bd1\u5668\u3002 1991\u5e742\u6708\uff1a\u7b2c\u4e00\u4e2aPython\u7f16\u8bd1\u5668\uff08\u540c\u65f6\u4e5f\u662f\u89e3\u91ca\u5668\uff09\u8bde\u751f\uff0c\u5b83\u662f\u7528C\u8bed\u8a00\u5b9e\u73b0\u7684\uff08\u540e\u9762\u53c8\u51fa\u73b0\u4e86Java\u548cC#\u5b9e\u73b0\u7684\u7248\u672cJython\u548cIronPython\uff0c\u4ee5\u53caPyPy\u3001Brython\u3001Pyston\u7b49\u5176\u4ed6\u5b9e\u73b0\uff09\uff0c\u53ef\u4ee5\u8c03\u7528C\u8bed\u8a00\u7684\u5e93\u51fd\u6570\u3002\u5728\u6700\u65e9\u7684\u7248\u672c\u4e2d\uff0cPython\u5df2\u7ecf\u63d0\u4f9b\u4e86\u5bf9\u201c\u7c7b\u201d\uff0c\u201c\u51fd\u6570\u201d\uff0c\u201c\u5f02\u5e38\u5904\u7406\u201d\u7b49\u6784\u9020\u5757\u7684\u652f\u6301\uff0c\u540c\u65f6\u63d0\u4f9b\u4e86\u201c\u5217\u8868\u201d\u548c\u201c\u5b57\u5178\u201d\u7b49\u6838\u5fc3\u6570\u636e\u7c7b\u578b\uff0c\u540c\u65f6\u652f\u6301\u4ee5\u6a21\u5757\u4e3a\u57fa\u7840\u7684\u62d3\u5c55\u7cfb\u7edf\u3002 1994\u5e741\u6708\uff1aPython 1.0\u6b63\u5f0f\u53d1\u5e03\u3002 2000\u5e7410\u670816\u65e5\uff1aPython 2.0\u53d1\u5e03\uff0c\u589e\u52a0\u4e86\u5b9e\u73b0\u5b8c\u6574\u7684 \u5783\u573e\u56de\u6536 \uff0c\u63d0\u4f9b\u4e86\u5bf9 Unicode \u7684\u652f\u6301\u3002\u4e0e\u6b64\u540c\u65f6\uff0cPython\u7684\u6574\u4e2a\u5f00\u53d1\u8fc7\u7a0b\u66f4\u52a0\u900f\u660e\uff0c\u793e\u533a\u5bf9\u5f00\u53d1\u8fdb\u5ea6\u7684\u5f71\u54cd\u9010\u6e10\u6269\u5927\uff0c\u751f\u6001\u5708\u5f00\u59cb\u6162\u6162\u5f62\u6210\u3002 2008\u5e7412\u67083\u65e5\uff1aPython 3.0\u53d1\u5e03\uff0c\u5b83\u5e76\u4e0d\u5b8c\u5168\u517c\u5bb9\u4e4b\u524d\u7684Python\u4ee3\u7801\uff0c\u4e0d\u8fc7\u56e0\u4e3a\u76ee\u524d\u8fd8\u6709\u4e0d\u5c11\u516c\u53f8\u5728\u9879\u76ee\u548c\u8fd0\u7ef4\u4e2d\u4f7f\u7528Python 2.x\u7248\u672c\uff0c\u6240\u4ee5Python 3.x\u7684\u5f88\u591a\u65b0\u7279\u6027\u540e\u6765\u4e5f\u88ab\u79fb\u690d\u5230Python 2.6/2.7\u7248\u672c\u4e2d\u3002 \u76ee\u524d\u6211\u4eec\u4f7f\u7528\u7684Python 3.7.x\u7684\u7248\u672c\u662f\u57282018\u5e74\u53d1\u5e03\u7684\uff0cPython\u7684\u7248\u672c\u53f7\u5206\u4e3a\u4e09\u6bb5\uff0c\u5f62\u5982A.B.C\u3002\u5176\u4e2dA\u8868\u793a\u5927\u7248\u672c\u53f7\uff0c\u4e00\u822c\u5f53\u6574\u4f53\u91cd\u5199\uff0c\u6216\u51fa\u73b0\u4e0d\u5411\u540e\u517c\u5bb9\u7684\u6539\u53d8\u65f6\uff0c\u589e\u52a0A\uff1bB\u8868\u793a\u529f\u80fd\u66f4\u65b0\uff0c\u51fa\u73b0\u65b0\u529f\u80fd\u65f6\u589e\u52a0B\uff1bC\u8868\u793a\u5c0f\u7684\u6539\u52a8\uff08\u5982\u4fee\u590d\u4e86\u67d0\u4e2aBug\uff09\uff0c\u53ea\u8981\u6709\u4fee\u6539\u5c31\u589e\u52a0C\u3002\u5982\u679c\u5bf9Python\u7684\u5386\u53f2\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u67e5\u770b\u4e00\u7bc7\u540d\u4e3a \u300aPython\u7b80\u53f2\u300b \u7684\u535a\u6587\u3002","title":"Python\u7684\u5386\u53f2"},{"location":"new/1%E3%80%81%E5%88%9D%E8%AF%86Python/#python_2","text":"Python\u7684\u4f18\u70b9\u5f88\u591a\uff0c\u7b80\u5355\u7684\u53ef\u4ee5\u603b\u7ed3\u4e3a\u4ee5\u4e0b\u51e0\u70b9\u3002 \u7b80\u5355\u548c\u660e\u786e\uff0c\u505a\u4e00\u4ef6\u4e8b\u53ea\u6709\u4e00\u79cd\u65b9\u6cd5\u3002 \u5b66\u4e60\u66f2\u7ebf\u4f4e\uff0c\u8ddf\u5176\u4ed6\u5f88\u591a\u8bed\u8a00\u76f8\u6bd4\uff0cPython\u66f4\u5bb9\u6613\u4e0a\u624b\u3002 \u5f00\u653e\u6e90\u4ee3\u7801\uff0c\u62e5\u6709\u5f3a\u5927\u7684\u793e\u533a\u548c\u751f\u6001\u5708\u3002 \u89e3\u91ca\u578b\u8bed\u8a00\uff0c\u5929\u751f\u5177\u6709\u5e73\u53f0\u53ef\u79fb\u690d\u6027\u3002 \u652f\u6301\u4e24\u79cd\u4e3b\u6d41\u7684\u7f16\u7a0b\u8303\u5f0f\uff08\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u548c\u51fd\u6570\u5f0f\u7f16\u7a0b\uff09\u90fd\u63d0\u4f9b\u4e86\u652f\u6301\u3002 \u53ef\u6269\u5c55\u6027\u548c\u53ef\u5d4c\u5165\u6027\uff0c\u53ef\u4ee5\u8c03\u7528C/C++\u4ee3\u7801\uff0c\u4e5f\u53ef\u4ee5\u5728C/C++\u4e2d\u8c03\u7528Python\u3002 \u4ee3\u7801\u89c4\u8303\u7a0b\u5ea6\u9ad8\uff0c\u53ef\u8bfb\u6027\u5f3a\uff0c\u9002\u5408\u6709\u4ee3\u7801\u6d01\u7656\u548c\u5f3a\u8feb\u75c7\u7684\u4eba\u7fa4\u3002 Python\u7684\u7f3a\u70b9\u4e3b\u8981\u96c6\u4e2d\u5728\u4ee5\u4e0b\u51e0\u70b9\u3002 \u6267\u884c\u6548\u7387\u7a0d\u4f4e\uff0c\u56e0\u6b64\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u53ef\u4ee5\u7531C/C++\u7f16\u5199\u3002 \u4ee3\u7801\u65e0\u6cd5\u52a0\u5bc6\uff0c\u4f46\u662f\u73b0\u5728\u7684\u516c\u53f8\u5f88\u591a\u90fd\u4e0d\u662f\u5356\u8f6f\u4ef6\u800c\u662f\u5356\u670d\u52a1\uff0c\u8fd9\u4e2a\u95ee\u9898\u4f1a\u88ab\u6de1\u5316\u3002 \u5728\u5f00\u53d1\u65f6\u53ef\u4ee5\u9009\u62e9\u7684\u6846\u67b6\u592a\u591a\uff08\u5982Web\u6846\u67b6\u5c31\u6709100\u591a\u4e2a\uff09\uff0c\u6709\u9009\u62e9\u7684\u5730\u65b9\u5c31\u6709\u9519\u8bef\u3002","title":"Python\u7684\u4f18\u7f3a\u70b9"},{"location":"new/1%E3%80%81%E5%88%9D%E8%AF%86Python/#python_3","text":"\u76ee\u524dPython\u5728\u4e91\u57fa\u7840\u8bbe\u65bd\u3001DevOps\u3001\u7f51\u7edc\u722c\u866b\u5f00\u53d1\u3001\u6570\u636e\u5206\u6790\u6316\u6398\u3001\u673a\u5668\u5b66\u4e60\u7b49\u9886\u57df\u90fd\u6709\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\uff0c\u56e0\u6b64\u4e5f\u4ea7\u751f\u4e86Web\u540e\u7aef\u5f00\u53d1\u3001\u6570\u636e\u63a5\u53e3\u5f00\u53d1\u3001\u81ea\u52a8\u5316\u8fd0\u7ef4\u3001\u81ea\u52a8\u5316\u6d4b\u8bd5\u3001\u79d1\u5b66\u8ba1\u7b97\u548c\u53ef\u89c6\u5316\u3001\u6570\u636e\u5206\u6790\u3001\u91cf\u5316\u4ea4\u6613\u3001\u673a\u5668\u4eba\u5f00\u53d1\u3001\u56fe\u50cf\u8bc6\u522b\u548c\u5904\u7406\u7b49\u4e00\u7cfb\u5217\u7684\u804c\u4f4d\u3002","title":"Python\u7684\u5e94\u7528\u9886\u57df"},{"location":"new/1%E3%80%81%E5%88%9D%E8%AF%86Python/#_1","text":"","title":"\u642d\u5efa\u7f16\u7a0b\u73af\u5883"},{"location":"new/1%E3%80%81%E5%88%9D%E8%AF%86Python/#windows","text":"\u53ef\u4ee5\u5728 Python\u5b98\u65b9\u7f51\u7ad9 \u4e0b\u8f7d\u5230Python\u7684Windows\u5b89\u88c5\u7a0b\u5e8f\uff08exe\u6587\u4ef6\uff09\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u5982\u679c\u5728Windows 7\u73af\u5883\u4e0b\u5b89\u88c5\u9700\u8981\u5148\u5b89\u88c5Service Pack 1\u8865\u4e01\u5305\uff08\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u5de5\u5177\u8f6f\u4ef6\u81ea\u52a8\u5b89\u88c5\u7cfb\u7edf\u8865\u4e01\u7684\u529f\u80fd\u6765\u5b89\u88c5\uff09\uff0c\u5b89\u88c5\u8fc7\u7a0b\u5efa\u8bae\u52fe\u9009\u201cAdd Python 3.6 to PATH\u201d\uff08\u5c06Python 3.6\u6dfb\u52a0\u5230PATH\u73af\u5883\u53d8\u91cf\uff09\u5e76\u9009\u62e9\u81ea\u5b9a\u4e49\u5b89\u88c5\uff0c\u5728\u8bbe\u7f6e\u201cOptional Features\u201d\u754c\u9762\u6700\u597d\u5c06\u201cpip\u201d\u3001\u201ctcl/tk\u201d\u3001\u201cPython test suite\u201d\u7b49\u9879\u5168\u90e8\u52fe\u9009\u4e0a\u3002\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u5b89\u88c5\u8def\u5f84\u5e76\u4fdd\u8bc1\u8def\u5f84\u4e2d\u6ca1\u6709\u4e2d\u6587\u3002\u5b89\u88c5\u5b8c\u6210\u4f1a\u770b\u5230\u201cSetup was successful\u201d\u7684\u63d0\u793a\uff0c\u4f46\u662f\u5728\u542f\u52a8Python\u73af\u5883\u65f6\u53ef\u80fd\u4f1a\u56e0\u4e3a\u7f3a\u5931\u4e00\u4e9b\u52a8\u6001\u94fe\u63a5\u5e93\u6587\u4ef6\u800c\u5bfc\u81f4Python\u89e3\u91ca\u5668\u65e0\u6cd5\u8fd0\u884c\uff0c\u5e38\u89c1\u7684\u95ee\u9898\u4e3b\u8981\u662fapi-ms-win-crt*.dll\u7f3a\u5931\u4ee5\u53ca\u66f4\u65b0DirectX\u4e4b\u540e\u5bfc\u81f4\u67d0\u4e9b\u52a8\u6001\u94fe\u63a5\u5e93\u6587\u4ef6\u7f3a\u5931\uff0c\u524d\u8005\u53ef\u4ee5\u53c2\u7167 \u300aapi-ms-win-crt*.dll\u7f3a\u5931\u539f\u56e0\u5206\u6790\u548c\u89e3\u51b3\u65b9\u6cd5\u300b \u4e00\u6587\u8bb2\u89e3\u7684\u65b9\u6cd5\u8fdb\u884c\u5904\u7406\u6216\u8005\u76f4\u63a5\u5728 \u5fae\u8f6f\u5b98\u7f51 \u4e0b\u8f7dVisual C++ Redistributable for Visual Studio 2015\u6587\u4ef6\u8fdb\u884c\u4fee\u590d\uff0c\u540e\u8005\u53ef\u4ee5\u4e0b\u8f7d\u4e00\u4e2aDirectX\u4fee\u590d\u5de5\u5177\u8fdb\u884c\u4fee\u590d\u3002","title":"Windows\u73af\u5883"},{"location":"new/1%E3%80%81%E5%88%9D%E8%AF%86Python/#linux","text":"Linux\u73af\u5883\u81ea\u5e26\u4e86Python 2.x\u7248\u672c\uff0c\u4f46\u662f\u5982\u679c\u8981\u66f4\u65b0\u52303.x\u7684\u7248\u672c\uff0c\u53ef\u4ee5\u5728 Python\u7684\u5b98\u65b9\u7f51\u7ad9 \u4e0b\u8f7dPython\u7684\u6e90\u4ee3\u7801\u5e76\u901a\u8fc7\u6e90\u4ee3\u7801\u6784\u5efa\u5b89\u88c5\u7684\u65b9\u5f0f\u8fdb\u884c\u5b89\u88c5\uff0c\u5177\u4f53\u7684\u6b65\u9aa4\u5982\u4e0b\u6240\u793a\u3002 \u5b89\u88c5\u4f9d\u8d56\u5e93\uff08\u56e0\u4e3a\u6ca1\u6709\u8fd9\u4e9b\u4f9d\u8d56\u5e93\u53ef\u80fd\u5728\u6e90\u4ee3\u7801\u6784\u4ef6\u5b89\u88c5\u65f6\u56e0\u4e3a\u7f3a\u5931\u5e95\u5c42\u4f9d\u8d56\u5e93\u800c\u5931\u8d25\uff09\u3002 yum -y install wget gcc zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel libffi-devel \u4e0b\u8f7dPython\u6e90\u4ee3\u7801\u5e76\u89e3\u538b\u7f29\u5230\u6307\u5b9a\u76ee\u5f55\u3002 wget https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tgz xz -d Python-3.7.3.tar.xz tar -xvf Python-3.7.3.tar \u5207\u6362\u81f3Python\u6e90\u4ee3\u7801\u76ee\u5f55\u5e76\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u8fdb\u884c\u914d\u7f6e\u548c\u5b89\u88c5\u3002 cd Python-3.7.3 ./configure --prefix=/usr/local/python37 --enable-optimizations make && make install \u4fee\u6539\u7528\u6237\u4e3b\u76ee\u5f55\u4e0b\u540d\u4e3a.bash_profile\u7684\u6587\u4ef6\uff0c\u914d\u7f6ePATH\u73af\u5883\u53d8\u91cf\u5e76\u4f7f\u5176\u751f\u6548\u3002 cd ~ vim .bash_profile # ... \u6b64\u5904\u7701\u7565\u4e0a\u9762\u7684\u4ee3\u7801 ... export PATH=$PATH:/usr/local/python37/bin # ... \u6b64\u5904\u7701\u7565\u4e0b\u9762\u7684\u4ee3\u7801 ... source .bash_profile","title":"Linux\u73af\u5883"},{"location":"new/1%E3%80%81%E5%88%9D%E8%AF%86Python/#macos","text":"MacOS\u4e5f\u662f\u81ea\u5e26\u4e86Python 2.x\u7248\u672c\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7 Python\u7684\u5b98\u65b9\u7f51\u7ad9 \u63d0\u4f9b\u7684\u5b89\u88c5\u6587\u4ef6\uff08pkg\u6587\u4ef6\uff09\u5b89\u88c53.x\u7684\u7248\u672c\u3002\u9ed8\u8ba4\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u7ec8\u7aef\u6267\u884cpython\u547d\u4ee4\u6765\u542f\u52a82.x\u7248\u672c\u7684Python\u89e3\u91ca\u5668\uff0c\u53ef\u4ee5\u901a\u8fc7\u6267\u884cpython3\u547d\u4ee4\u6765\u542f\u52a83.x\u7248\u672c\u7684Python\u89e3\u91ca\u5668\u3002","title":"MacOS\u73af\u5883"},{"location":"new/1%E3%80%81%E5%88%9D%E8%AF%86Python/#python_4","text":"","title":"\u4ece\u7ec8\u7aef\u8fd0\u884cPython\u7a0b\u5e8f"},{"location":"new/1%E3%80%81%E5%88%9D%E8%AF%86Python/#python_5","text":"\u5728\u7ec8\u7aef\u6216\u547d\u4ee4\u884c\u63d0\u793a\u7b26\u4e2d\u952e\u5165\u4e0b\u9762\u7684\u547d\u4ee4\u3002 python --version \u5f53\u7136\u4e5f\u53ef\u4ee5\u5148\u8f93\u5165python\u8fdb\u5165\u4ea4\u4e92\u5f0f\u73af\u5883\uff0c\u518d\u6267\u884c\u4ee5\u4e0b\u7684\u4ee3\u7801\u68c0\u67e5Python\u7684\u7248\u672c\u3002 import sys print(sys.version_info) print(sys.version)","title":"\u786e\u8ba4Python\u7684\u7248\u672c"},{"location":"new/1%E3%80%81%E5%88%9D%E8%AF%86Python/#python_6","text":"\u53ef\u4ee5\u7528\u6587\u672c\u7f16\u8f91\u5de5\u5177\uff08\u63a8\u8350\u4f7f\u7528Sublime\u3001Atom\u3001TextMate\u3001VSCode\u7b49\u9ad8\u7ea7\u6587\u672c\u7f16\u8f91\u5de5\u5177\uff09\u7f16\u5199Python\u6e90\u4ee3\u7801\u5e76\u5c06\u5176\u547d\u540d\u4e3ahello.py\u4fdd\u5b58\u8d77\u6765\uff0c\u4ee3\u7801\u5185\u5bb9\u5982\u4e0b\u6240\u793a\u3002 print('hello, world!')","title":"\u7f16\u5199Python\u6e90\u4ee3\u7801"},{"location":"new/1%E3%80%81%E5%88%9D%E8%AF%86Python/#_2","text":"\u5207\u6362\u5230\u6e90\u4ee3\u7801\u6240\u5728\u7684\u76ee\u5f55\u5e76\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u770b\u770b\u5c4f\u5e55\u4e0a\u662f\u5426\u8f93\u51fa\u4e86\"hello, world!\"\u3002 python hello.py","title":"\u8fd0\u884c\u7a0b\u5e8f"},{"location":"new/1%E3%80%81%E5%88%9D%E8%AF%86Python/#_3","text":"\u6ce8\u91ca\u662f\u7f16\u7a0b\u8bed\u8a00\u7684\u4e00\u4e2a\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u7528\u4e8e\u5728\u6e90\u4ee3\u7801\u4e2d\u89e3\u91ca\u4ee3\u7801\u7684\u4f5c\u7528\u4ece\u800c\u589e\u5f3a\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\u548c\u53ef\u7ef4\u62a4\u6027\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u5c06\u6e90\u4ee3\u7801\u4e2d\u4e0d\u9700\u8981\u53c2\u4e0e\u8fd0\u884c\u7684\u4ee3\u7801\u6bb5\u901a\u8fc7\u6ce8\u91ca\u6765\u53bb\u6389\uff0c\u8fd9\u4e00\u70b9\u5728\u8c03\u8bd5\u7a0b\u5e8f\u7684\u65f6\u5019\u7ecf\u5e38\u7528\u5230\u3002\u6ce8\u91ca\u5728\u968f\u6e90\u4ee3\u7801\u8fdb\u5165\u9884\u5904\u7406\u5668\u6216\u7f16\u8bd1\u65f6\u4f1a\u88ab\u79fb\u9664\uff0c\u4e0d\u4f1a\u5728\u76ee\u6807\u4ee3\u7801\u4e2d\u4fdd\u7559\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u7a0b\u5e8f\u7684\u6267\u884c\u7ed3\u679c\u3002 \u5355\u884c\u6ce8\u91ca - \u4ee5#\u548c\u7a7a\u683c\u5f00\u5934\u7684\u90e8\u5206 \u591a\u884c\u6ce8\u91ca - \u4e09\u4e2a\u5f15\u53f7\u5f00\u5934\uff0c\u4e09\u4e2a\u5f15\u53f7\u7ed3\u5c3e \"\"\" \u7b2c\u4e00\u4e2aPython\u7a0b\u5e8f - hello, world! \u5411\u4f1f\u5927\u7684Dennis M. Ritchie\u5148\u751f\u81f4\u656c Version: 0.1 Author: \u9a86\u660a \"\"\" print('hello, world!') # print(\"\u4f60\u597d,\u4e16\u754c\uff01\") print('\u4f60\u597d', '\u4e16\u754c') print('hello', 'world', sep=', ', end='!') print('goodbye, world', end='!\\n')","title":"\u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca"},{"location":"new/1%E3%80%81%E5%88%9D%E8%AF%86Python/#_4","text":"","title":"\u5176\u4ed6\u5de5\u5177\u4ecb\u7ecd"},{"location":"new/1%E3%80%81%E5%88%9D%E8%AF%86Python/#idle-","text":"IDLE\u662f\u5b89\u88c5Python\u73af\u5883\u65f6\u81ea\u5e26\u7684\u96c6\u6210\u5f00\u53d1\u5de5\u5177\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u4f46\u662f\u7531\u4e8eIDLE\u7684\u7528\u6237\u4f53\u9a8c\u5e76\u4e0d\u662f\u90a3\u4e48\u597d\u6240\u4ee5\u5f88\u5c11\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\u88ab\u91c7\u7528\u3002","title":"IDLE - \u81ea\u5e26\u7684\u96c6\u6210\u5f00\u53d1\u5de5\u5177"},{"location":"new/1%E3%80%81%E5%88%9D%E8%AF%86Python/#ipython-","text":"IPython\u662f\u4e00\u79cd\u57fa\u4e8ePython\u7684\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668\u3002\u76f8\u8f83\u4e8e\u539f\u751f\u7684Python Shell\uff0cIPython\u63d0\u4f9b\u4e86\u66f4\u4e3a\u5f3a\u5927\u7684\u7f16\u8f91\u548c\u4ea4\u4e92\u529f\u80fd\u3002\u53ef\u4ee5\u901a\u8fc7Python\u7684\u5305\u7ba1\u7406\u5de5\u5177pip\u5b89\u88c5IPython\u548cJupyter\uff0c\u5177\u4f53\u7684\u64cd\u4f5c\u5982\u4e0b\u6240\u793a\u3002 pip install ipython jupyter \u6216\u8005 python -m pip install ipython jupyter \u5b89\u88c5\u6210\u529f\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684ipython\u547d\u4ee4\u542f\u52a8IPython\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7Jupyter\u8fd0\u884c\u540d\u4e3anotebook\u7684\u9879\u76ee\u5728\u6d4f\u89c8\u5668\u7a97\u53e3\u4e2d\u8fdb\u884c\u4ea4\u4e92\u5f0f\u64cd\u4f5c\u3002 jupyter notebook","title":"IPython - \u66f4\u597d\u7684\u4ea4\u4e92\u5f0f\u7f16\u7a0b\u5de5\u5177"},{"location":"new/1%E3%80%81%E5%88%9D%E8%AF%86Python/#anaconda-","text":"Anaconda\u6307\u7684\u662f\u4e00\u4e2a\u5f00\u6e90\u7684Python\u53d1\u884c\u7248\u672c\uff0c\u5176\u5305\u542b\u4e86conda\u3001Python\u7b49180\u591a\u4e2a\u79d1\u5b66\u5305\u53ca\u5176\u4f9d\u8d56\u9879\u3002 \u56e0\u4e3a\u5305\u542b\u4e86\u5927\u91cf\u7684\u79d1\u5b66\u5305\uff0cAnaconda \u7684\u4e0b\u8f7d\u6587\u4ef6\u6bd4\u8f83\u5927\uff08\u7ea6 531 MB\uff09\uff0c\u5982\u679c\u53ea\u9700\u8981\u67d0\u4e9b\u5305\uff0c\u6216\u8005\u9700\u8981\u8282\u7701\u5e26\u5bbd\u6216\u5b58\u50a8\u7a7a\u95f4\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528Miniconda\u8fd9\u4e2a\u8f83\u5c0f\u7684\u53d1\u884c\u7248\uff08\u4ec5\u5305\u542bconda\u548c Python\uff09\u3002 \u5bf9\u4e8e\u5b66\u4e60\u6570\u636e\u79d1\u5b66\u7684\u4eba\u6765\u8bf4\uff0canaconda\u662f\u7edd\u5bf9\u7684\u795e\u5668\uff0c\u5b89\u88c5\u7b80\u4fbf\uff0c\u800c\u4e14anaconda\u652f\u6301\u5b89\u88c5\u76f8\u5173\u8f6f\u4ef6\u3010\u4f8b\u5982\u524d\u6587\u63d0\u5230\u7684ipython\uff0cjupyter notebook\uff0c\u751a\u81f3\u6709R\u7b49\u5176\u4ed6\u6570\u636e\u79d1\u5b66\u8f6f\u4ef6 \u3011 \u4e00\u4e2a\u76f8\u5f53\u6709\u4ef7\u503c\u7684\u4ecb\u7ecd \u73b0\u5728\u552f\u4e00\u7684\u95ee\u9898\u5728\u4e8e\u6e05\u534e\u955c\u50cf\u670d\u52a1\u5df2\u7ecf\u5173\u95ed\uff0c\u8de8\u56fd\u4e0b\u8f7d\u4f1a\u6bd4\u8f83\u6162","title":"anaconda - \u4e00\u7ad9\u5f0f\u7684\u6570\u636e\u79d1\u5b66\u795e\u5668"},{"location":"new/1%E3%80%81%E5%88%9D%E8%AF%86Python/#sublime-","text":"\u9996\u5148\u53ef\u4ee5\u901a\u8fc7 \u5b98\u65b9\u7f51\u7ad9 \u4e0b\u8f7d\u5b89\u88c5\u7a0b\u5e8f\u5b89\u88c5Sublime 3\u6216Sublime 2\u3002 \u5b89\u88c5\u5305\u7ba1\u7406\u5de5\u5177\u3002\u901a\u8fc7\u5feb\u6377\u952eCtrl+`\u6216\u8005\u5728View\u83dc\u5355\u4e2d\u9009\u62e9Show Console\u6253\u5f00\u63a7\u5236\u53f0\uff0c\u8f93\u5165\u4e0b\u9762\u7684\u4ee3\u7801\u3002 Sublime 3 Python import urllib.request,os;pf='Package Control.sublime-package';ipp=sublime.installed_packages_path();urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler()));open(os.path.join(ipp,pf),'wb').write(urllib.request.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()) Sublime 2 Python import urllib2,os;pf='Package Control.sublime-package';ipp=sublime.installed_packages_path();os.makedirs(ipp)ifnotos.path.exists(ipp)elseNone;urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler()));open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read());print('Please restart Sublime Text to finish installation') \u5b89\u88c5\u63d2\u4ef6\u3002\u901a\u8fc7Preference\u83dc\u5355\u7684Package Control\u6216\u5feb\u6377\u952eCtrl+Shift+P\u6253\u5f00\u547d\u4ee4\u9762\u677f\uff0c\u5728\u9762\u677f\u4e2d\u8f93\u5165Install Package\u5c31\u53ef\u4ee5\u627e\u5230\u5b89\u88c5\u63d2\u4ef6\u7684\u5de5\u5177\uff0c\u7136\u540e\u518d\u67e5\u627e\u9700\u8981\u7684\u63d2\u4ef6\u3002\u6211\u4eec\u63a8\u8350\u5927\u5bb6\u5b89\u88c5\u4ee5\u4e0b\u51e0\u4e2a\u63d2\u4ef6\uff1a SublimeCodeIntel - \u4ee3\u7801\u81ea\u52a8\u8865\u5168\u5de5\u5177\u63d2\u4ef6\u3002 Emmet - \u524d\u7aef\u5f00\u53d1\u4ee3\u7801\u6a21\u677f\u63d2\u4ef6\u3002 Git - \u7248\u672c\u63a7\u5236\u5de5\u5177\u63d2\u4ef6\u3002 Python PEP8 Autoformat - PEP8\u89c4\u8303\u81ea\u52a8\u683c\u5f0f\u5316\u63d2\u4ef6\u3002 ConvertToUTF8 - \u5c06\u672c\u5730\u7f16\u7801\u8f6c\u6362\u4e3aUTF-8\u3002","title":"Sublime - \u6587\u672c\u7f16\u8f91\u795e\u5668"},{"location":"new/1%E3%80%81%E5%88%9D%E8%AF%86Python/#pycharm-python","text":"PyCharm\u7684\u5b89\u88c5\u3001\u914d\u7f6e\u548c\u4f7f\u7528\u6211\u4eec\u5728\u540e\u9762\u4f1a\u8fdb\u884c\u4ecb\u7ecd\u3002","title":"PyCharm - Python\u5f00\u53d1\u795e\u5668"},{"location":"new/1%E3%80%81%E5%88%9D%E8%AF%86Python/#_5","text":"\u5728Python\u4ea4\u4e92\u73af\u5883\u4e2d\u67e5\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u7ed3\u679c\uff0c\u5e76\u5c06\u5185\u5bb9\u7ffb\u8bd1\u6210\u4e2d\u6587\u3002 ```Python import this Beautiful is better than ugly. Explicit is better than implicit. Simple is better than complex. Complex is better than complicated. Flat is better than nested. Sparse is better than dense. Readability counts. Special cases aren't special enough to break the rules. Although practicality beats purity. Errors should never pass silently. Unless explicitly silenced. In the face of ambiguity, refuse the temptation to guess. There should be one-- and preferably only one --obvious way to do it. Although that way may not be obvious at first unless you're Dutch. Now is better than never. Although never is often better than right now. If the implementation is hard to explain, it's a bad idea. If the implementation is easy to explain, it may be a good idea. Namespaces are one honking great idea -- let's do more of those! ``` \u5b66\u4e60\u4f7f\u7528turtle\u5728\u5c4f\u5e55\u4e0a\u7ed8\u5236\u56fe\u5f62\u3002 ```Python import turtle turtle.pensize(4) turtle.pencolor('red') turtle.forward(100) turtle.right(90) turtle.forward(100) turtle.right(90) turtle.forward(100) turtle.right(90) turtle.forward(100) turtle.mainloop() ```","title":"\u7ec3\u4e60"},{"location":"new/2%E3%80%81%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/","text":"Day02 - \u8bed\u8a00\u5143\u7d20 \u6307\u4ee4\u548c\u7a0b\u5e8f \u8ba1\u7b97\u673a\u7684\u786c\u4ef6\u7cfb\u7edf\u901a\u5e38\u7531\u4e94\u5927\u90e8\u4ef6\u6784\u6210\uff0c\u5305\u62ec\uff1a\u8fd0\u7b97\u5668\u3001\u63a7\u5236\u5668\u3001\u5b58\u50a8\u5668\u3001\u8f93\u5165\u8bbe\u5907\u548c\u8f93\u51fa\u8bbe\u5907\u3002\u5176\u4e2d\uff0c\u8fd0\u7b97\u5668\u548c\u63a7\u5236\u5668\u653e\u5728\u4e00\u8d77\u5c31\u662f\u6211\u4eec\u901a\u5e38\u6240\u8bf4\u7684\u4e2d\u592e\u5904\u7406\u5668\uff0c\u5b83\u7684\u529f\u80fd\u662f\u6267\u884c\u5404\u79cd\u8fd0\u7b97\u548c\u63a7\u5236\u6307\u4ee4\u4ee5\u53ca\u5904\u7406\u8ba1\u7b97\u673a\u8f6f\u4ef6\u4e2d\u7684\u6570\u636e\u3002\u6211\u4eec\u901a\u5e38\u6240\u8bf4\u7684\u7a0b\u5e8f\u5b9e\u9645\u4e0a\u5c31\u662f\u6307\u4ee4\u7684\u96c6\u5408\uff0c\u6211\u4eec\u7a0b\u5e8f\u5c31\u662f\u5c06\u4e00\u7cfb\u5217\u7684\u6307\u4ee4\u6309\u7167\u67d0\u79cd\u65b9\u5f0f\u7ec4\u7ec7\u5230\u4e00\u8d77\uff0c\u7136\u540e\u901a\u8fc7\u8fd9\u4e9b\u6307\u4ee4\u53bb\u63a7\u5236\u8ba1\u7b97\u673a\u505a\u6211\u4eec\u60f3\u8ba9\u5b83\u505a\u7684\u4e8b\u60c5\u3002\u4eca\u5929\u6211\u4eec\u4f7f\u7528\u7684\u8ba1\u7b97\u673a\u867d\u7136\u5668\u4ef6\u505a\u5de5\u8d8a\u6765\u8d8a\u7cbe\u5bc6\uff0c\u5904\u7406\u80fd\u529b\u8d8a\u6765\u8d8a\u5f3a\u5927\uff0c\u4f46\u7a76\u5176\u672c\u8d28\u6765\u8bf4\u4ecd\u7136\u5c5e\u4e8e \u201c\u51af\u00b7\u8bfa\u4f9d\u66fc\u7ed3\u6784\u201d \u7684\u8ba1\u7b97\u673a\u3002\u201c\u51af\u00b7\u8bfa\u4f9d\u66fc\u7ed3\u6784\u201d\u6709\u4e24\u4e2a\u5173\u952e\u70b9\uff0c\u4e00\u662f\u6307\u51fa\u8981\u5c06\u5b58\u50a8\u8bbe\u5907\u4e0e\u4e2d\u592e\u5904\u7406\u5668\u5206\u5f00\uff0c\u4e8c\u662f\u63d0\u51fa\u4e86\u5c06\u6570\u636e\u4ee5\u4e8c\u8fdb\u5236\u65b9\u5f0f\u7f16\u7801\u3002\u4e8c\u8fdb\u5236\u662f\u4e00\u79cd\u201c\u9022\u4e8c\u8fdb\u4e00\u201d\u7684\u8ba1\u6570\u6cd5\uff0c\u8ddf\u6211\u4eec\u4eba\u7c7b\u4f7f\u7528\u7684\u201c\u9022\u5341\u8fdb\u4e00\u201d\u7684\u8ba1\u6570\u6cd5\u6ca1\u6709\u5b9e\u8d28\u6027\u7684\u533a\u522b\uff0c\u4eba\u7c7b\u56e0\u4e3a\u6709\u5341\u6839\u624b\u6307\u6240\u4ee5\u4f7f\u7528\u4e86\u5341\u8fdb\u5236\uff08\u56e0\u4e3a\u5728\u6570\u6570\u65f6\u5341\u6839\u624b\u6307\u7528\u5b8c\u4e4b\u540e\u5c31\u53ea\u80fd\u8fdb\u4f4d\u4e86\uff0c\u5f53\u7136\u51e1\u4e8b\u90fd\u6709\u4f8b\u5916\uff0c\u739b\u96c5\u4eba\u53ef\u80fd\u662f\u56e0\u4e3a\u957f\u5e74\u5149\u7740\u811a\u7684\u539f\u56e0\u628a\u811a\u8dbe\u5934\u4e5f\u7b97\u4e0a\u4e86\uff0c\u4e8e\u662f\u4ed6\u4eec\u4f7f\u7528\u4e86\u4e8c\u5341\u8fdb\u5236\u7684\u8ba1\u6570\u6cd5\uff0c\u5728\u8fd9\u79cd\u8ba1\u6570\u6cd5\u7684\u6307\u5bfc\u4e0b\u739b\u96c5\u4eba\u7684\u5386\u6cd5\u5c31\u4e0e\u6211\u4eec\u5e73\u5e38\u4f7f\u7528\u7684\u5386\u6cd5\u4e0d\u4e00\u6837\uff0c\u800c\u6309\u7167\u739b\u96c5\u4eba\u7684\u5386\u6cd5\uff0c2012\u5e74\u662f\u4e0a\u4e00\u4e2a\u6240\u8c13\u7684\u201c\u592a\u9633\u7eaa\u201d\u7684\u6700\u540e\u4e00\u5e74\uff0c\u800c2013\u5e74\u5219\u662f\u65b0\u7684\u201c\u592a\u9633\u7eaa\u201d\u7684\u5f00\u59cb\uff0c\u540e\u6765\u8fd9\u4ef6\u4e8b\u60c5\u88ab\u4ee5\u8bb9\u4f20\u8bb9\u7684\u65b9\u5f0f\u8bef\u4f20\u4e3a\u201d2012\u5e74\u662f\u739b\u96c5\u4eba\u9884\u8a00\u7684\u4e16\u754c\u672b\u65e5\u201c\u8fd9\u79cd\u8352\u8bde\u7684\u8bf4\u6cd5\uff0c\u4eca\u5929\u6211\u4eec\u53ef\u4ee5\u5927\u80c6\u7684\u731c\u6d4b\uff0c\u739b\u96c5\u6587\u660e\u4e4b\u6240\u4ee5\u53d1\u5c55\u7f13\u6162\u4f30\u8ba1\u4e5f\u4e0e\u4f7f\u7528\u4e86\u4e8c\u5341\u8fdb\u5236\u6709\u5173\uff09\u3002\u5bf9\u4e8e\u8ba1\u7b97\u673a\u6765\u8bf4\uff0c\u4e8c\u8fdb\u5236\u5728\u7269\u7406\u5668\u4ef6\u4e0a\u6765\u8bf4\u662f\u6700\u5bb9\u6613\u5b9e\u73b0\u7684\uff08\u9ad8\u7535\u538b\u8868\u793a1\uff0c\u4f4e\u7535\u538b\u8868\u793a0\uff09\uff0c\u4e8e\u662f\u5728\u201c\u51af\u00b7\u8bfa\u4f9d\u66fc\u7ed3\u6784\u201d\u7684\u8ba1\u7b97\u673a\u90fd\u4f7f\u7528\u4e86\u4e8c\u8fdb\u5236\u3002\u867d\u7136\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u80fd\u591f\u4f7f\u7528\u4e8c\u8fdb\u5236\u7684\u601d\u7ef4\u65b9\u5f0f\u6765\u5de5\u4f5c\uff0c\u4f46\u662f\u4e86\u89e3\u4e8c\u8fdb\u5236\u4ee5\u53ca\u5b83\u4e0e\u6211\u4eec\u751f\u6d3b\u4e2d\u7684\u5341\u8fdb\u5236\u4e4b\u95f4\u7684\u8f6c\u6362\u5173\u7cfb\uff0c\u4ee5\u53ca\u4e8c\u8fdb\u5236\u4e0e\u516b\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362\u5173\u7cfb\u8fd8\u662f\u6709\u5fc5\u8981\u7684\u3002\u5982\u679c\u4f60\u5bf9\u8fd9\u4e00\u70b9\u4e0d\u719f\u6089\uff0c\u53ef\u4ee5\u81ea\u884c\u4f7f\u7528 \u7ef4\u57fa\u767e\u79d1 \u6216\u8005 \u767e\u5ea6\u767e\u79d1 \u79d1\u666e\u4e00\u4e0b\u3002 \u53d8\u91cf\u548c\u7c7b\u578b \u5728\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\uff0c\u53d8\u91cf\u662f\u4e00\u79cd\u5b58\u50a8\u6570\u636e\u7684\u8f7d\u4f53\u3002\u8ba1\u7b97\u673a\u4e2d\u7684\u53d8\u91cf\u662f\u5b9e\u9645\u5b58\u5728\u7684\u6570\u636e\u6216\u8005\u8bf4\u662f\u5b58\u50a8\u5668\u4e2d\u5b58\u50a8\u6570\u636e\u7684\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\uff0c\u53d8\u91cf\u7684\u503c\u53ef\u4ee5\u88ab\u8bfb\u53d6\u548c\u4fee\u6539\uff0c\u8fd9\u662f\u6240\u6709\u8ba1\u7b97\u548c\u63a7\u5236\u7684\u57fa\u7840\u3002\u8ba1\u7b97\u673a\u80fd\u5904\u7406\u7684\u6570\u636e\u6709\u5f88\u591a\u4e2d\u7c7b\u578b\uff0c\u9664\u4e86\u6570\u503c\u4e4b\u5916\u8fd8\u53ef\u4ee5\u5904\u7406\u6587\u672c\u3001\u56fe\u5f62\u3001\u97f3\u9891\u3001\u89c6\u9891\u7b49\u5404\u79cd\u5404\u6837\u7684\u6570\u636e\uff0c\u90a3\u4e48\u4e0d\u540c\u7684\u6570\u636e\u5c31\u9700\u8981\u5b9a\u4e49\u4e0d\u540c\u7684\u5b58\u50a8\u7c7b\u578b\u3002Python\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u5f88\u591a\uff0c\u800c\u4e14\u4e5f\u5141\u8bb8\u6211\u4eec\u81ea\u5b9a\u4e49\u65b0\u7684\u6570\u636e\u7c7b\u578b\uff08\u8fd9\u4e00\u70b9\u5728\u540e\u9762\u4f1a\u8bb2\u5230\uff09\uff0c\u6211\u4eec\u5148\u4ecb\u7ecd\u51e0\u79cd\u5e38\u7528\u7684\u6570\u636e\u7c7b\u578b\u3002 \u6574\u578b\uff1aPython\u4e2d\u53ef\u4ee5\u5904\u7406\u4efb\u610f\u5927\u5c0f\u7684\u6574\u6570\uff08Python 2.x\u4e2d\u6709int\u548clong\u4e24\u79cd\u7c7b\u578b\u7684\u6574\u6570\uff0c\u4f46\u8fd9\u79cd\u533a\u5206\u5bf9Python\u6765\u8bf4\u610f\u4e49\u4e0d\u5927\uff0c\u56e0\u6b64\u5728Python 3.x\u4e2d\u6574\u6570\u53ea\u6709int\u8fd9\u4e00\u79cd\u4e86\uff09\uff0c\u800c\u4e14\u652f\u6301\u4e8c\u8fdb\u5236\uff08\u5982 0b100 \uff0c\u6362\u7b97\u6210\u5341\u8fdb\u5236\u662f4\uff09\u3001\u516b\u8fdb\u5236\uff08\u5982 0o100 \uff0c\u6362\u7b97\u6210\u5341\u8fdb\u5236\u662f64\uff09\u3001\u5341\u8fdb\u5236\uff08 100 \uff09\u548c\u5341\u516d\u8fdb\u5236\uff08 0x100 \uff0c\u6362\u7b97\u6210\u5341\u8fdb\u5236\u662f256\uff09\u7684\u8868\u793a\u6cd5\u3002 \u6d6e\u70b9\u578b\uff1a\u6d6e\u70b9\u6570\u4e5f\u5c31\u662f\u5c0f\u6570\uff0c\u4e4b\u6240\u4ee5\u79f0\u4e3a\u6d6e\u70b9\u6570\uff0c\u662f\u56e0\u4e3a\u6309\u7167\u79d1\u5b66\u8bb0\u6570\u6cd5\u8868\u793a\u65f6\uff0c\u4e00\u4e2a\u6d6e\u70b9\u6570\u7684\u5c0f\u6570\u70b9\u4f4d\u7f6e\u662f\u53ef\u53d8\u7684\uff0c\u6d6e\u70b9\u6570\u9664\u4e86\u6570\u5b66\u5199\u6cd5\uff08\u5982 123.456 \uff09\u4e4b\u5916\u8fd8\u652f\u6301\u79d1\u5b66\u8ba1\u6570\u6cd5\uff08\u5982 1.23456e2 \uff09\u3002 \u5b57\u7b26\u4e32\u578b\uff1a\u5b57\u7b26\u4e32\u662f\u4ee5\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u4efb\u610f\u6587\u672c\uff0c\u6bd4\u5982 'hello' \u548c \"hello\" ,\u5b57\u7b26\u4e32\u8fd8\u6709\u539f\u59cb\u5b57\u7b26\u4e32\u8868\u793a\u6cd5\u3001\u5b57\u8282\u5b57\u7b26\u4e32\u8868\u793a\u6cd5\u3001Unicode\u5b57\u7b26\u4e32\u8868\u793a\u6cd5\uff0c\u800c\u4e14\u53ef\u4ee5\u4e66\u5199\u6210\u591a\u884c\u7684\u5f62\u5f0f\uff08\u7528\u4e09\u4e2a\u5355\u5f15\u53f7\u6216\u4e09\u4e2a\u53cc\u5f15\u53f7\u5f00\u5934\uff0c\u4e09\u4e2a\u5355\u5f15\u53f7\u6216\u4e09\u4e2a\u53cc\u5f15\u53f7\u7ed3\u5c3e\uff09\u3002 \u5e03\u5c14\u578b\uff1a\u5e03\u5c14\u503c\u53ea\u6709 True \u3001 False \u4e24\u79cd\u503c\uff0c\u8981\u4e48\u662f True \uff0c\u8981\u4e48\u662f False \uff0c\u5728Python\u4e2d\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528 True \u3001 False \u8868\u793a\u5e03\u5c14\u503c\uff08\u8bf7\u6ce8\u610f\u5927\u5c0f\u5199\uff09\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5e03\u5c14\u8fd0\u7b97\u8ba1\u7b97\u51fa\u6765\uff08\u4f8b\u5982 3 < 5 \u4f1a\u4ea7\u751f\u5e03\u5c14\u503c True \uff0c\u800c 2 == 1 \u4f1a\u4ea7\u751f\u5e03\u5c14\u503c False \uff09\u3002 \u590d\u6570\u578b\uff1a\u5f62\u5982 3+5j \uff0c\u8ddf\u6570\u5b66\u4e0a\u7684\u590d\u6570\u8868\u793a\u4e00\u6837\uff0c\u552f\u4e00\u4e0d\u540c\u7684\u662f\u865a\u90e8\u7684 i \u6362\u6210\u4e86 j \u3002 \u53d8\u91cf\u547d\u540d \u5bf9\u4e8e\u6bcf\u4e2a\u53d8\u91cf\u6211\u4eec\u9700\u8981\u7ed9\u5b83\u53d6\u4e00\u4e2a\u540d\u5b57\uff0c\u5c31\u5982\u540c\u6211\u4eec\u6bcf\u4e2a\u4eba\u90fd\u6709\u5c5e\u4e8e\u81ea\u5df1\u7684\u54cd\u4eae\u7684\u540d\u5b57\u4e00\u6837\u3002\u5728Python\u4e2d\uff0c\u53d8\u91cf\u547d\u540d\u9700\u8981\u9075\u5faa\u4ee5\u4e0b\u8fd9\u4e9b\u5fc5\u987b\u9075\u5b88\u786c\u6027\u89c4\u5219\u548c\u5f3a\u70c8\u5efa\u8bae\u9075\u5b88\u7684\u975e\u786c\u6027\u89c4\u5219\u3002 \u786c\u6027\u89c4\u5219\uff1a \u53d8\u91cf\u540d\u7531\u5b57\u6bcd\uff08\u5e7f\u4e49\u7684Unicode\u5b57\u7b26\uff0c\u4e0d\u5305\u62ec\u7279\u6b8a\u5b57\u7b26\uff09\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\u6784\u6210\uff0c\u6570\u5b57\u4e0d\u80fd\u5f00\u5934\u3002 \u5927\u5c0f\u5199\u654f\u611f\uff08\u5927\u5199\u7684 a \u548c\u5c0f\u5199\u7684 A \u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u53d8\u91cf\uff09\u3002 \u4e0d\u8981\u8ddf\u5173\u952e\u5b57\uff08\u6709\u7279\u6b8a\u542b\u4e49\u7684\u5355\u8bcd\uff0c\u540e\u9762\u4f1a\u8bb2\u5230\uff09\u548c\u7cfb\u7edf\u4fdd\u7559\u5b57\uff08\u5982\u51fd\u6570\u3001\u6a21\u5757\u7b49\u7684\u540d\u5b57\uff09\u51b2\u7a81\u3002 PEP 8\u8981\u6c42\uff1a \u7528\u5c0f\u5199\u5b57\u6bcd\u62fc\u5199\uff0c\u591a\u4e2a\u5355\u8bcd\u7528\u4e0b\u5212\u7ebf\u8fde\u63a5\u3002 \u53d7\u4fdd\u62a4\u7684\u5b9e\u4f8b\u5c5e\u6027\u7528\u5355\u4e2a\u4e0b\u5212\u7ebf\u5f00\u5934\uff08\u540e\u9762\u4f1a\u8bb2\u5230\uff09\u3002 \u79c1\u6709\u7684\u5b9e\u4f8b\u5c5e\u6027\u7528\u4e24\u4e2a\u4e0b\u5212\u7ebf\u5f00\u5934\uff08\u540e\u9762\u4f1a\u8bb2\u5230\uff09\u3002 \u5f53\u7136\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u4e13\u4e1a\u7684\u7a0b\u5e8f\u5458\uff0c\u7ed9\u53d8\u91cf\uff08\u4e8b\u5b9e\u4e0a\u5e94\u8be5\u662f\u6240\u6709\u7684\u6807\u8bc6\u7b26\uff09\u547d\u540d\u65f6\u505a\u5230\u89c1\u540d\u77e5\u610f\u4e5f\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002 \u53d8\u91cf\u7684\u4f7f\u7528 \u4e0b\u9762\u901a\u8fc7\u51e0\u4e2a\u4f8b\u5b50\u6765\u8bf4\u660e\u53d8\u91cf\u7684\u7c7b\u578b\u548c\u53d8\u91cf\u4f7f\u7528\u3002 \"\"\" \u4f7f\u7528\u53d8\u91cf\u4fdd\u5b58\u6570\u636e\u5e76\u8fdb\u884c\u7b97\u672f\u8fd0\u7b97 Version: 0.1 Author: \u9a86\u660a \"\"\" a = 321 b = 123 print(a + b) print(a - b) print(a * b) print(a / b) print(a // b) print(a % b) print(a ** b) \"\"\" \u4f7f\u7528input\u51fd\u6570\u8f93\u5165 \u4f7f\u7528int()\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362 \u7528\u5360\u4f4d\u7b26\u683c\u5f0f\u5316\u8f93\u51fa\u7684\u5b57\u7b26\u4e32 Version: 0.1 Author: \u9a86\u660a \"\"\" a = int(input('a = ')) b = int(input('b = ')) print('%d + %d = %d' % (a, b, a + b)) print('%d - %d = %d' % (a, b, a - b)) print('%d * %d = %d' % (a, b, a * b)) print('%d / %d = %f' % (a, b, a / b)) print('%d // %d = %d' % (a, b, a // b)) print('%d %% %d = %d' % (a, b, a % b)) print('%d ** %d = %d' % (a, b, a ** b)) \"\"\" \u4f7f\u7528type()\u68c0\u67e5\u53d8\u91cf\u7684\u7c7b\u578b Version: 0.1 Author: \u9a86\u660a Date: 2018-02-27 \"\"\" a = 100 b = 12.345 c = 1 + 5j d = 'hello, world' e = True print(type(a)) print(type(b)) print(type(c)) print(type(d)) print(type(e)) \u5728\u5bf9\u53d8\u91cf\u7c7b\u578b\u8fdb\u884c\u8f6c\u6362\u65f6\u53ef\u4ee5\u4f7f\u7528Python\u7684\u5185\u7f6e\u51fd\u6570\uff08\u51c6\u786e\u7684\u8bf4\u4e0b\u9762\u5217\u51fa\u7684\u5e76\u4e0d\u662f\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u51fd\u6570\uff0c\u800c\u662f\u540e\u9762\u6211\u4eec\u8981\u8bb2\u5230\u7684\u521b\u5efa\u5bf9\u8c61\u7684\u6784\u9020\u65b9\u6cd5\uff09\u3002 int()\uff1a\u5c06\u4e00\u4e2a\u6570\u503c\u6216\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6574\u6570\uff0c\u53ef\u4ee5\u6307\u5b9a\u8fdb\u5236\u3002 float()\uff1a\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6d6e\u70b9\u6570\u3002 str()\uff1a\u5c06\u6307\u5b9a\u7684\u5bf9\u8c61\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u5f62\u5f0f\uff0c\u53ef\u4ee5\u6307\u5b9a\u7f16\u7801\u3002 chr()\uff1a\u5c06\u6574\u6570\u8f6c\u6362\u6210\u8be5\u7f16\u7801\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\uff08\u4e00\u4e2a\u5b57\u7b26\uff09\u3002 ord()\uff1a\u5c06\u5b57\u7b26\u4e32\uff08\u4e00\u4e2a\u5b57\u7b26\uff09\u8f6c\u6362\u6210\u5bf9\u5e94\u7684\u7f16\u7801\uff08\u6574\u6570\uff09\u3002 \u8fd0\u7b97\u7b26 Python\u652f\u6301\u591a\u79cd\u8fd0\u7b97\u7b26\uff0c\u4e0b\u8868\u5927\u81f4\u6309\u7167\u4f18\u5148\u7ea7\u4ece\u9ad8\u5230\u4f4e\u7684\u987a\u5e8f\u5217\u51fa\u4e86\u6240\u6709\u7684\u8fd0\u7b97\u7b26\uff0c\u6211\u4eec\u4f1a\u9646\u7eed\u4f7f\u7528\u5230\u5b83\u4eec\u3002 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 [] [:] \u4e0b\u6807\uff0c\u5207\u7247 ** \u6307\u6570 ~ + - \u6309\u4f4d\u53d6\u53cd, \u6b63\u8d1f\u53f7 * / % // \u4e58\uff0c\u9664\uff0c\u6a21\uff0c\u6574\u9664 + - \u52a0\uff0c\u51cf >> << \u53f3\u79fb\uff0c\u5de6\u79fb & \u6309\u4f4d\u4e0e ^ | \u6309\u4f4d\u5f02\u6216\uff0c\u6309\u4f4d\u6216 <= < > >= \u5c0f\u4e8e\u7b49\u4e8e\uff0c\u5c0f\u4e8e\uff0c\u5927\u4e8e\uff0c\u5927\u4e8e\u7b49\u4e8e == != \u7b49\u4e8e\uff0c\u4e0d\u7b49\u4e8e is is not \u8eab\u4efd\u8fd0\u7b97\u7b26 in not in \u6210\u5458\u8fd0\u7b97\u7b26 not or and \u903b\u8f91\u8fd0\u7b97\u7b26 = += -= *= /= %= //= **= &= |= ^= >>= <<= \uff08\u590d\u5408\uff09\u8d4b\u503c\u8fd0\u7b97\u7b26 \u8bf4\u660e\uff1a \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u5982\u679c\u641e\u4e0d\u6e05\u695a\u4f18\u5148\u7ea7\u53ef\u4ee5\u4f7f\u7528\u62ec\u53f7\u6765\u786e\u4fdd\u8fd0\u7b97\u7684\u6267\u884c\u987a\u5e8f\u3002 \u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u8fd0\u7b97\u7b26\u7684\u4f7f\u7528\u3002 \"\"\" \u8fd0\u7b97\u7b26\u7684\u4f7f\u7528 Version: 0.1 Author: \u9a86\u660a \"\"\" a = 5 b = 10 c = 3 d = 4 e = 5 a += b a -= c a *= d a /= e print(\"a = \", a) flag1 = 3 > 2 flag2 = 2 < 1 flag3 = flag1 and flag2 flag4 = flag1 or flag2 flag5 = not flag1 print(\"flag1 = \", flag1) print(\"flag2 = \", flag2) print(\"flag3 = \", flag3) print(\"flag4 = \", flag4) print(\"flag5 = \", flag5) print(flag1 is True) print(flag2 is not False) \u7ec3\u4e60 \u7ec3\u4e601\uff1a\u534e\u6c0f\u6e29\u5ea6\u8f6c\u6444\u6c0f\u6e29\u5ea6\u3002 \"\"\" \u5c06\u534e\u6c0f\u6e29\u5ea6\u8f6c\u6362\u4e3a\u6444\u6c0f\u6e29\u5ea6 F = 1.8C + 32 Version: 0.1 Author: \u9a86\u660a \"\"\" f = float(input('\u8bf7\u8f93\u5165\u534e\u6c0f\u6e29\u5ea6: ')) c = (f - 32) / 1.8 print('%.1f\u534e\u6c0f\u5ea6 = %.1f\u6444\u6c0f\u5ea6' % (f, c)) \u7ec3\u4e602\uff1a\u8f93\u5165\u5706\u7684\u534a\u5f84\u8ba1\u7b97\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef\u3002 \"\"\" \u8f93\u5165\u534a\u5f84\u8ba1\u7b97\u5706\u7684\u5468\u957f\u548c\u9762\u79ef Version: 0.1 Author: \u9a86\u660a \"\"\" import math radius = float(input('\u8bf7\u8f93\u5165\u5706\u7684\u534a\u5f84: ')) perimeter = 2 * math.pi * radius area = math.pi * radius * radius print('\u5468\u957f: %.2f' % perimeter) print('\u9762\u79ef: %.2f' % area) \u7ec3\u4e603\uff1a\u8f93\u5165\u5e74\u4efd\u5224\u65ad\u662f\u4e0d\u662f\u95f0\u5e74\u3002 \"\"\" \u8f93\u5165\u5e74\u4efd \u5982\u679c\u662f\u95f0\u5e74\u8f93\u51faTrue \u5426\u5219\u8f93\u51faFalse Version: 0.1 Author: \u9a86\u660a \"\"\" year = int(input('\u8bf7\u8f93\u5165\u5e74\u4efd: ')) # \u5982\u679c\u4ee3\u7801\u592a\u957f\u5199\u6210\u4e00\u884c\u4e0d\u4fbf\u4e8e\u9605\u8bfb \u53ef\u4ee5\u4f7f\u7528\\\u6216()\u6298\u884c is_leap = (year % 4 == 0 and year % 100 != 0 or year % 400 == 0) print(is_leap)","title":"\u7b2c\u4e8c\u5929"},{"location":"new/2%E3%80%81%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/#day02-","text":"","title":"Day02 - \u8bed\u8a00\u5143\u7d20"},{"location":"new/2%E3%80%81%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/#_1","text":"\u8ba1\u7b97\u673a\u7684\u786c\u4ef6\u7cfb\u7edf\u901a\u5e38\u7531\u4e94\u5927\u90e8\u4ef6\u6784\u6210\uff0c\u5305\u62ec\uff1a\u8fd0\u7b97\u5668\u3001\u63a7\u5236\u5668\u3001\u5b58\u50a8\u5668\u3001\u8f93\u5165\u8bbe\u5907\u548c\u8f93\u51fa\u8bbe\u5907\u3002\u5176\u4e2d\uff0c\u8fd0\u7b97\u5668\u548c\u63a7\u5236\u5668\u653e\u5728\u4e00\u8d77\u5c31\u662f\u6211\u4eec\u901a\u5e38\u6240\u8bf4\u7684\u4e2d\u592e\u5904\u7406\u5668\uff0c\u5b83\u7684\u529f\u80fd\u662f\u6267\u884c\u5404\u79cd\u8fd0\u7b97\u548c\u63a7\u5236\u6307\u4ee4\u4ee5\u53ca\u5904\u7406\u8ba1\u7b97\u673a\u8f6f\u4ef6\u4e2d\u7684\u6570\u636e\u3002\u6211\u4eec\u901a\u5e38\u6240\u8bf4\u7684\u7a0b\u5e8f\u5b9e\u9645\u4e0a\u5c31\u662f\u6307\u4ee4\u7684\u96c6\u5408\uff0c\u6211\u4eec\u7a0b\u5e8f\u5c31\u662f\u5c06\u4e00\u7cfb\u5217\u7684\u6307\u4ee4\u6309\u7167\u67d0\u79cd\u65b9\u5f0f\u7ec4\u7ec7\u5230\u4e00\u8d77\uff0c\u7136\u540e\u901a\u8fc7\u8fd9\u4e9b\u6307\u4ee4\u53bb\u63a7\u5236\u8ba1\u7b97\u673a\u505a\u6211\u4eec\u60f3\u8ba9\u5b83\u505a\u7684\u4e8b\u60c5\u3002\u4eca\u5929\u6211\u4eec\u4f7f\u7528\u7684\u8ba1\u7b97\u673a\u867d\u7136\u5668\u4ef6\u505a\u5de5\u8d8a\u6765\u8d8a\u7cbe\u5bc6\uff0c\u5904\u7406\u80fd\u529b\u8d8a\u6765\u8d8a\u5f3a\u5927\uff0c\u4f46\u7a76\u5176\u672c\u8d28\u6765\u8bf4\u4ecd\u7136\u5c5e\u4e8e \u201c\u51af\u00b7\u8bfa\u4f9d\u66fc\u7ed3\u6784\u201d \u7684\u8ba1\u7b97\u673a\u3002\u201c\u51af\u00b7\u8bfa\u4f9d\u66fc\u7ed3\u6784\u201d\u6709\u4e24\u4e2a\u5173\u952e\u70b9\uff0c\u4e00\u662f\u6307\u51fa\u8981\u5c06\u5b58\u50a8\u8bbe\u5907\u4e0e\u4e2d\u592e\u5904\u7406\u5668\u5206\u5f00\uff0c\u4e8c\u662f\u63d0\u51fa\u4e86\u5c06\u6570\u636e\u4ee5\u4e8c\u8fdb\u5236\u65b9\u5f0f\u7f16\u7801\u3002\u4e8c\u8fdb\u5236\u662f\u4e00\u79cd\u201c\u9022\u4e8c\u8fdb\u4e00\u201d\u7684\u8ba1\u6570\u6cd5\uff0c\u8ddf\u6211\u4eec\u4eba\u7c7b\u4f7f\u7528\u7684\u201c\u9022\u5341\u8fdb\u4e00\u201d\u7684\u8ba1\u6570\u6cd5\u6ca1\u6709\u5b9e\u8d28\u6027\u7684\u533a\u522b\uff0c\u4eba\u7c7b\u56e0\u4e3a\u6709\u5341\u6839\u624b\u6307\u6240\u4ee5\u4f7f\u7528\u4e86\u5341\u8fdb\u5236\uff08\u56e0\u4e3a\u5728\u6570\u6570\u65f6\u5341\u6839\u624b\u6307\u7528\u5b8c\u4e4b\u540e\u5c31\u53ea\u80fd\u8fdb\u4f4d\u4e86\uff0c\u5f53\u7136\u51e1\u4e8b\u90fd\u6709\u4f8b\u5916\uff0c\u739b\u96c5\u4eba\u53ef\u80fd\u662f\u56e0\u4e3a\u957f\u5e74\u5149\u7740\u811a\u7684\u539f\u56e0\u628a\u811a\u8dbe\u5934\u4e5f\u7b97\u4e0a\u4e86\uff0c\u4e8e\u662f\u4ed6\u4eec\u4f7f\u7528\u4e86\u4e8c\u5341\u8fdb\u5236\u7684\u8ba1\u6570\u6cd5\uff0c\u5728\u8fd9\u79cd\u8ba1\u6570\u6cd5\u7684\u6307\u5bfc\u4e0b\u739b\u96c5\u4eba\u7684\u5386\u6cd5\u5c31\u4e0e\u6211\u4eec\u5e73\u5e38\u4f7f\u7528\u7684\u5386\u6cd5\u4e0d\u4e00\u6837\uff0c\u800c\u6309\u7167\u739b\u96c5\u4eba\u7684\u5386\u6cd5\uff0c2012\u5e74\u662f\u4e0a\u4e00\u4e2a\u6240\u8c13\u7684\u201c\u592a\u9633\u7eaa\u201d\u7684\u6700\u540e\u4e00\u5e74\uff0c\u800c2013\u5e74\u5219\u662f\u65b0\u7684\u201c\u592a\u9633\u7eaa\u201d\u7684\u5f00\u59cb\uff0c\u540e\u6765\u8fd9\u4ef6\u4e8b\u60c5\u88ab\u4ee5\u8bb9\u4f20\u8bb9\u7684\u65b9\u5f0f\u8bef\u4f20\u4e3a\u201d2012\u5e74\u662f\u739b\u96c5\u4eba\u9884\u8a00\u7684\u4e16\u754c\u672b\u65e5\u201c\u8fd9\u79cd\u8352\u8bde\u7684\u8bf4\u6cd5\uff0c\u4eca\u5929\u6211\u4eec\u53ef\u4ee5\u5927\u80c6\u7684\u731c\u6d4b\uff0c\u739b\u96c5\u6587\u660e\u4e4b\u6240\u4ee5\u53d1\u5c55\u7f13\u6162\u4f30\u8ba1\u4e5f\u4e0e\u4f7f\u7528\u4e86\u4e8c\u5341\u8fdb\u5236\u6709\u5173\uff09\u3002\u5bf9\u4e8e\u8ba1\u7b97\u673a\u6765\u8bf4\uff0c\u4e8c\u8fdb\u5236\u5728\u7269\u7406\u5668\u4ef6\u4e0a\u6765\u8bf4\u662f\u6700\u5bb9\u6613\u5b9e\u73b0\u7684\uff08\u9ad8\u7535\u538b\u8868\u793a1\uff0c\u4f4e\u7535\u538b\u8868\u793a0\uff09\uff0c\u4e8e\u662f\u5728\u201c\u51af\u00b7\u8bfa\u4f9d\u66fc\u7ed3\u6784\u201d\u7684\u8ba1\u7b97\u673a\u90fd\u4f7f\u7528\u4e86\u4e8c\u8fdb\u5236\u3002\u867d\u7136\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u80fd\u591f\u4f7f\u7528\u4e8c\u8fdb\u5236\u7684\u601d\u7ef4\u65b9\u5f0f\u6765\u5de5\u4f5c\uff0c\u4f46\u662f\u4e86\u89e3\u4e8c\u8fdb\u5236\u4ee5\u53ca\u5b83\u4e0e\u6211\u4eec\u751f\u6d3b\u4e2d\u7684\u5341\u8fdb\u5236\u4e4b\u95f4\u7684\u8f6c\u6362\u5173\u7cfb\uff0c\u4ee5\u53ca\u4e8c\u8fdb\u5236\u4e0e\u516b\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362\u5173\u7cfb\u8fd8\u662f\u6709\u5fc5\u8981\u7684\u3002\u5982\u679c\u4f60\u5bf9\u8fd9\u4e00\u70b9\u4e0d\u719f\u6089\uff0c\u53ef\u4ee5\u81ea\u884c\u4f7f\u7528 \u7ef4\u57fa\u767e\u79d1 \u6216\u8005 \u767e\u5ea6\u767e\u79d1 \u79d1\u666e\u4e00\u4e0b\u3002","title":"\u6307\u4ee4\u548c\u7a0b\u5e8f"},{"location":"new/2%E3%80%81%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/#_2","text":"\u5728\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\uff0c\u53d8\u91cf\u662f\u4e00\u79cd\u5b58\u50a8\u6570\u636e\u7684\u8f7d\u4f53\u3002\u8ba1\u7b97\u673a\u4e2d\u7684\u53d8\u91cf\u662f\u5b9e\u9645\u5b58\u5728\u7684\u6570\u636e\u6216\u8005\u8bf4\u662f\u5b58\u50a8\u5668\u4e2d\u5b58\u50a8\u6570\u636e\u7684\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\uff0c\u53d8\u91cf\u7684\u503c\u53ef\u4ee5\u88ab\u8bfb\u53d6\u548c\u4fee\u6539\uff0c\u8fd9\u662f\u6240\u6709\u8ba1\u7b97\u548c\u63a7\u5236\u7684\u57fa\u7840\u3002\u8ba1\u7b97\u673a\u80fd\u5904\u7406\u7684\u6570\u636e\u6709\u5f88\u591a\u4e2d\u7c7b\u578b\uff0c\u9664\u4e86\u6570\u503c\u4e4b\u5916\u8fd8\u53ef\u4ee5\u5904\u7406\u6587\u672c\u3001\u56fe\u5f62\u3001\u97f3\u9891\u3001\u89c6\u9891\u7b49\u5404\u79cd\u5404\u6837\u7684\u6570\u636e\uff0c\u90a3\u4e48\u4e0d\u540c\u7684\u6570\u636e\u5c31\u9700\u8981\u5b9a\u4e49\u4e0d\u540c\u7684\u5b58\u50a8\u7c7b\u578b\u3002Python\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u5f88\u591a\uff0c\u800c\u4e14\u4e5f\u5141\u8bb8\u6211\u4eec\u81ea\u5b9a\u4e49\u65b0\u7684\u6570\u636e\u7c7b\u578b\uff08\u8fd9\u4e00\u70b9\u5728\u540e\u9762\u4f1a\u8bb2\u5230\uff09\uff0c\u6211\u4eec\u5148\u4ecb\u7ecd\u51e0\u79cd\u5e38\u7528\u7684\u6570\u636e\u7c7b\u578b\u3002 \u6574\u578b\uff1aPython\u4e2d\u53ef\u4ee5\u5904\u7406\u4efb\u610f\u5927\u5c0f\u7684\u6574\u6570\uff08Python 2.x\u4e2d\u6709int\u548clong\u4e24\u79cd\u7c7b\u578b\u7684\u6574\u6570\uff0c\u4f46\u8fd9\u79cd\u533a\u5206\u5bf9Python\u6765\u8bf4\u610f\u4e49\u4e0d\u5927\uff0c\u56e0\u6b64\u5728Python 3.x\u4e2d\u6574\u6570\u53ea\u6709int\u8fd9\u4e00\u79cd\u4e86\uff09\uff0c\u800c\u4e14\u652f\u6301\u4e8c\u8fdb\u5236\uff08\u5982 0b100 \uff0c\u6362\u7b97\u6210\u5341\u8fdb\u5236\u662f4\uff09\u3001\u516b\u8fdb\u5236\uff08\u5982 0o100 \uff0c\u6362\u7b97\u6210\u5341\u8fdb\u5236\u662f64\uff09\u3001\u5341\u8fdb\u5236\uff08 100 \uff09\u548c\u5341\u516d\u8fdb\u5236\uff08 0x100 \uff0c\u6362\u7b97\u6210\u5341\u8fdb\u5236\u662f256\uff09\u7684\u8868\u793a\u6cd5\u3002 \u6d6e\u70b9\u578b\uff1a\u6d6e\u70b9\u6570\u4e5f\u5c31\u662f\u5c0f\u6570\uff0c\u4e4b\u6240\u4ee5\u79f0\u4e3a\u6d6e\u70b9\u6570\uff0c\u662f\u56e0\u4e3a\u6309\u7167\u79d1\u5b66\u8bb0\u6570\u6cd5\u8868\u793a\u65f6\uff0c\u4e00\u4e2a\u6d6e\u70b9\u6570\u7684\u5c0f\u6570\u70b9\u4f4d\u7f6e\u662f\u53ef\u53d8\u7684\uff0c\u6d6e\u70b9\u6570\u9664\u4e86\u6570\u5b66\u5199\u6cd5\uff08\u5982 123.456 \uff09\u4e4b\u5916\u8fd8\u652f\u6301\u79d1\u5b66\u8ba1\u6570\u6cd5\uff08\u5982 1.23456e2 \uff09\u3002 \u5b57\u7b26\u4e32\u578b\uff1a\u5b57\u7b26\u4e32\u662f\u4ee5\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u4efb\u610f\u6587\u672c\uff0c\u6bd4\u5982 'hello' \u548c \"hello\" ,\u5b57\u7b26\u4e32\u8fd8\u6709\u539f\u59cb\u5b57\u7b26\u4e32\u8868\u793a\u6cd5\u3001\u5b57\u8282\u5b57\u7b26\u4e32\u8868\u793a\u6cd5\u3001Unicode\u5b57\u7b26\u4e32\u8868\u793a\u6cd5\uff0c\u800c\u4e14\u53ef\u4ee5\u4e66\u5199\u6210\u591a\u884c\u7684\u5f62\u5f0f\uff08\u7528\u4e09\u4e2a\u5355\u5f15\u53f7\u6216\u4e09\u4e2a\u53cc\u5f15\u53f7\u5f00\u5934\uff0c\u4e09\u4e2a\u5355\u5f15\u53f7\u6216\u4e09\u4e2a\u53cc\u5f15\u53f7\u7ed3\u5c3e\uff09\u3002 \u5e03\u5c14\u578b\uff1a\u5e03\u5c14\u503c\u53ea\u6709 True \u3001 False \u4e24\u79cd\u503c\uff0c\u8981\u4e48\u662f True \uff0c\u8981\u4e48\u662f False \uff0c\u5728Python\u4e2d\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528 True \u3001 False \u8868\u793a\u5e03\u5c14\u503c\uff08\u8bf7\u6ce8\u610f\u5927\u5c0f\u5199\uff09\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5e03\u5c14\u8fd0\u7b97\u8ba1\u7b97\u51fa\u6765\uff08\u4f8b\u5982 3 < 5 \u4f1a\u4ea7\u751f\u5e03\u5c14\u503c True \uff0c\u800c 2 == 1 \u4f1a\u4ea7\u751f\u5e03\u5c14\u503c False \uff09\u3002 \u590d\u6570\u578b\uff1a\u5f62\u5982 3+5j \uff0c\u8ddf\u6570\u5b66\u4e0a\u7684\u590d\u6570\u8868\u793a\u4e00\u6837\uff0c\u552f\u4e00\u4e0d\u540c\u7684\u662f\u865a\u90e8\u7684 i \u6362\u6210\u4e86 j \u3002","title":"\u53d8\u91cf\u548c\u7c7b\u578b"},{"location":"new/2%E3%80%81%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/#_3","text":"\u5bf9\u4e8e\u6bcf\u4e2a\u53d8\u91cf\u6211\u4eec\u9700\u8981\u7ed9\u5b83\u53d6\u4e00\u4e2a\u540d\u5b57\uff0c\u5c31\u5982\u540c\u6211\u4eec\u6bcf\u4e2a\u4eba\u90fd\u6709\u5c5e\u4e8e\u81ea\u5df1\u7684\u54cd\u4eae\u7684\u540d\u5b57\u4e00\u6837\u3002\u5728Python\u4e2d\uff0c\u53d8\u91cf\u547d\u540d\u9700\u8981\u9075\u5faa\u4ee5\u4e0b\u8fd9\u4e9b\u5fc5\u987b\u9075\u5b88\u786c\u6027\u89c4\u5219\u548c\u5f3a\u70c8\u5efa\u8bae\u9075\u5b88\u7684\u975e\u786c\u6027\u89c4\u5219\u3002 \u786c\u6027\u89c4\u5219\uff1a \u53d8\u91cf\u540d\u7531\u5b57\u6bcd\uff08\u5e7f\u4e49\u7684Unicode\u5b57\u7b26\uff0c\u4e0d\u5305\u62ec\u7279\u6b8a\u5b57\u7b26\uff09\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\u6784\u6210\uff0c\u6570\u5b57\u4e0d\u80fd\u5f00\u5934\u3002 \u5927\u5c0f\u5199\u654f\u611f\uff08\u5927\u5199\u7684 a \u548c\u5c0f\u5199\u7684 A \u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u53d8\u91cf\uff09\u3002 \u4e0d\u8981\u8ddf\u5173\u952e\u5b57\uff08\u6709\u7279\u6b8a\u542b\u4e49\u7684\u5355\u8bcd\uff0c\u540e\u9762\u4f1a\u8bb2\u5230\uff09\u548c\u7cfb\u7edf\u4fdd\u7559\u5b57\uff08\u5982\u51fd\u6570\u3001\u6a21\u5757\u7b49\u7684\u540d\u5b57\uff09\u51b2\u7a81\u3002 PEP 8\u8981\u6c42\uff1a \u7528\u5c0f\u5199\u5b57\u6bcd\u62fc\u5199\uff0c\u591a\u4e2a\u5355\u8bcd\u7528\u4e0b\u5212\u7ebf\u8fde\u63a5\u3002 \u53d7\u4fdd\u62a4\u7684\u5b9e\u4f8b\u5c5e\u6027\u7528\u5355\u4e2a\u4e0b\u5212\u7ebf\u5f00\u5934\uff08\u540e\u9762\u4f1a\u8bb2\u5230\uff09\u3002 \u79c1\u6709\u7684\u5b9e\u4f8b\u5c5e\u6027\u7528\u4e24\u4e2a\u4e0b\u5212\u7ebf\u5f00\u5934\uff08\u540e\u9762\u4f1a\u8bb2\u5230\uff09\u3002 \u5f53\u7136\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u4e13\u4e1a\u7684\u7a0b\u5e8f\u5458\uff0c\u7ed9\u53d8\u91cf\uff08\u4e8b\u5b9e\u4e0a\u5e94\u8be5\u662f\u6240\u6709\u7684\u6807\u8bc6\u7b26\uff09\u547d\u540d\u65f6\u505a\u5230\u89c1\u540d\u77e5\u610f\u4e5f\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002","title":"\u53d8\u91cf\u547d\u540d"},{"location":"new/2%E3%80%81%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/#_4","text":"\u4e0b\u9762\u901a\u8fc7\u51e0\u4e2a\u4f8b\u5b50\u6765\u8bf4\u660e\u53d8\u91cf\u7684\u7c7b\u578b\u548c\u53d8\u91cf\u4f7f\u7528\u3002 \"\"\" \u4f7f\u7528\u53d8\u91cf\u4fdd\u5b58\u6570\u636e\u5e76\u8fdb\u884c\u7b97\u672f\u8fd0\u7b97 Version: 0.1 Author: \u9a86\u660a \"\"\" a = 321 b = 123 print(a + b) print(a - b) print(a * b) print(a / b) print(a // b) print(a % b) print(a ** b) \"\"\" \u4f7f\u7528input\u51fd\u6570\u8f93\u5165 \u4f7f\u7528int()\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362 \u7528\u5360\u4f4d\u7b26\u683c\u5f0f\u5316\u8f93\u51fa\u7684\u5b57\u7b26\u4e32 Version: 0.1 Author: \u9a86\u660a \"\"\" a = int(input('a = ')) b = int(input('b = ')) print('%d + %d = %d' % (a, b, a + b)) print('%d - %d = %d' % (a, b, a - b)) print('%d * %d = %d' % (a, b, a * b)) print('%d / %d = %f' % (a, b, a / b)) print('%d // %d = %d' % (a, b, a // b)) print('%d %% %d = %d' % (a, b, a % b)) print('%d ** %d = %d' % (a, b, a ** b)) \"\"\" \u4f7f\u7528type()\u68c0\u67e5\u53d8\u91cf\u7684\u7c7b\u578b Version: 0.1 Author: \u9a86\u660a Date: 2018-02-27 \"\"\" a = 100 b = 12.345 c = 1 + 5j d = 'hello, world' e = True print(type(a)) print(type(b)) print(type(c)) print(type(d)) print(type(e)) \u5728\u5bf9\u53d8\u91cf\u7c7b\u578b\u8fdb\u884c\u8f6c\u6362\u65f6\u53ef\u4ee5\u4f7f\u7528Python\u7684\u5185\u7f6e\u51fd\u6570\uff08\u51c6\u786e\u7684\u8bf4\u4e0b\u9762\u5217\u51fa\u7684\u5e76\u4e0d\u662f\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u51fd\u6570\uff0c\u800c\u662f\u540e\u9762\u6211\u4eec\u8981\u8bb2\u5230\u7684\u521b\u5efa\u5bf9\u8c61\u7684\u6784\u9020\u65b9\u6cd5\uff09\u3002 int()\uff1a\u5c06\u4e00\u4e2a\u6570\u503c\u6216\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6574\u6570\uff0c\u53ef\u4ee5\u6307\u5b9a\u8fdb\u5236\u3002 float()\uff1a\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6d6e\u70b9\u6570\u3002 str()\uff1a\u5c06\u6307\u5b9a\u7684\u5bf9\u8c61\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u5f62\u5f0f\uff0c\u53ef\u4ee5\u6307\u5b9a\u7f16\u7801\u3002 chr()\uff1a\u5c06\u6574\u6570\u8f6c\u6362\u6210\u8be5\u7f16\u7801\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\uff08\u4e00\u4e2a\u5b57\u7b26\uff09\u3002 ord()\uff1a\u5c06\u5b57\u7b26\u4e32\uff08\u4e00\u4e2a\u5b57\u7b26\uff09\u8f6c\u6362\u6210\u5bf9\u5e94\u7684\u7f16\u7801\uff08\u6574\u6570\uff09\u3002","title":"\u53d8\u91cf\u7684\u4f7f\u7528"},{"location":"new/2%E3%80%81%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/#_5","text":"Python\u652f\u6301\u591a\u79cd\u8fd0\u7b97\u7b26\uff0c\u4e0b\u8868\u5927\u81f4\u6309\u7167\u4f18\u5148\u7ea7\u4ece\u9ad8\u5230\u4f4e\u7684\u987a\u5e8f\u5217\u51fa\u4e86\u6240\u6709\u7684\u8fd0\u7b97\u7b26\uff0c\u6211\u4eec\u4f1a\u9646\u7eed\u4f7f\u7528\u5230\u5b83\u4eec\u3002 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 [] [:] \u4e0b\u6807\uff0c\u5207\u7247 ** \u6307\u6570 ~ + - \u6309\u4f4d\u53d6\u53cd, \u6b63\u8d1f\u53f7 * / % // \u4e58\uff0c\u9664\uff0c\u6a21\uff0c\u6574\u9664 + - \u52a0\uff0c\u51cf >> << \u53f3\u79fb\uff0c\u5de6\u79fb & \u6309\u4f4d\u4e0e ^ | \u6309\u4f4d\u5f02\u6216\uff0c\u6309\u4f4d\u6216 <= < > >= \u5c0f\u4e8e\u7b49\u4e8e\uff0c\u5c0f\u4e8e\uff0c\u5927\u4e8e\uff0c\u5927\u4e8e\u7b49\u4e8e == != \u7b49\u4e8e\uff0c\u4e0d\u7b49\u4e8e is is not \u8eab\u4efd\u8fd0\u7b97\u7b26 in not in \u6210\u5458\u8fd0\u7b97\u7b26 not or and \u903b\u8f91\u8fd0\u7b97\u7b26 = += -= *= /= %= //= **= &= |= ^= >>= <<= \uff08\u590d\u5408\uff09\u8d4b\u503c\u8fd0\u7b97\u7b26 \u8bf4\u660e\uff1a \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u5982\u679c\u641e\u4e0d\u6e05\u695a\u4f18\u5148\u7ea7\u53ef\u4ee5\u4f7f\u7528\u62ec\u53f7\u6765\u786e\u4fdd\u8fd0\u7b97\u7684\u6267\u884c\u987a\u5e8f\u3002 \u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u8fd0\u7b97\u7b26\u7684\u4f7f\u7528\u3002 \"\"\" \u8fd0\u7b97\u7b26\u7684\u4f7f\u7528 Version: 0.1 Author: \u9a86\u660a \"\"\" a = 5 b = 10 c = 3 d = 4 e = 5 a += b a -= c a *= d a /= e print(\"a = \", a) flag1 = 3 > 2 flag2 = 2 < 1 flag3 = flag1 and flag2 flag4 = flag1 or flag2 flag5 = not flag1 print(\"flag1 = \", flag1) print(\"flag2 = \", flag2) print(\"flag3 = \", flag3) print(\"flag4 = \", flag4) print(\"flag5 = \", flag5) print(flag1 is True) print(flag2 is not False)","title":"\u8fd0\u7b97\u7b26"},{"location":"new/2%E3%80%81%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/#_6","text":"","title":"\u7ec3\u4e60"},{"location":"new/2%E3%80%81%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/#1","text":"\"\"\" \u5c06\u534e\u6c0f\u6e29\u5ea6\u8f6c\u6362\u4e3a\u6444\u6c0f\u6e29\u5ea6 F = 1.8C + 32 Version: 0.1 Author: \u9a86\u660a \"\"\" f = float(input('\u8bf7\u8f93\u5165\u534e\u6c0f\u6e29\u5ea6: ')) c = (f - 32) / 1.8 print('%.1f\u534e\u6c0f\u5ea6 = %.1f\u6444\u6c0f\u5ea6' % (f, c))","title":"\u7ec3\u4e601\uff1a\u534e\u6c0f\u6e29\u5ea6\u8f6c\u6444\u6c0f\u6e29\u5ea6\u3002"},{"location":"new/2%E3%80%81%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/#2","text":"\"\"\" \u8f93\u5165\u534a\u5f84\u8ba1\u7b97\u5706\u7684\u5468\u957f\u548c\u9762\u79ef Version: 0.1 Author: \u9a86\u660a \"\"\" import math radius = float(input('\u8bf7\u8f93\u5165\u5706\u7684\u534a\u5f84: ')) perimeter = 2 * math.pi * radius area = math.pi * radius * radius print('\u5468\u957f: %.2f' % perimeter) print('\u9762\u79ef: %.2f' % area)","title":"\u7ec3\u4e602\uff1a\u8f93\u5165\u5706\u7684\u534a\u5f84\u8ba1\u7b97\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef\u3002"},{"location":"new/2%E3%80%81%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/#3","text":"\"\"\" \u8f93\u5165\u5e74\u4efd \u5982\u679c\u662f\u95f0\u5e74\u8f93\u51faTrue \u5426\u5219\u8f93\u51faFalse Version: 0.1 Author: \u9a86\u660a \"\"\" year = int(input('\u8bf7\u8f93\u5165\u5e74\u4efd: ')) # \u5982\u679c\u4ee3\u7801\u592a\u957f\u5199\u6210\u4e00\u884c\u4e0d\u4fbf\u4e8e\u9605\u8bfb \u53ef\u4ee5\u4f7f\u7528\\\u6216()\u6298\u884c is_leap = (year % 4 == 0 and year % 100 != 0 or year % 400 == 0) print(is_leap)","title":"\u7ec3\u4e603\uff1a\u8f93\u5165\u5e74\u4efd\u5224\u65ad\u662f\u4e0d\u662f\u95f0\u5e74\u3002"},{"location":"new/3%E3%80%81%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/","text":"Day03 - \u5206\u652f\u7ed3\u6784 \u5206\u652f\u7ed3\u6784\u7684\u5e94\u7528\u573a\u666f \u8fc4\u4eca\u4e3a\u6b62\uff0c\u6211\u4eec\u5199\u7684Python\u4ee3\u7801\u90fd\u662f\u4e00\u6761\u4e00\u6761\u8bed\u53e5\u987a\u5e8f\u6267\u884c\uff0c\u8fd9\u79cd\u7ed3\u6784\u7684\u4ee3\u7801\u6211\u4eec\u79f0\u4e4b\u4e3a\u987a\u5e8f\u7ed3\u6784\u3002\u7136\u800c\u4ec5\u6709\u987a\u5e8f\u7ed3\u6784\u5e76\u4e0d\u80fd\u89e3\u51b3\u6240\u6709\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u6211\u4eec\u8bbe\u8ba1\u4e00\u4e2a\u6e38\u620f\uff0c\u6e38\u620f\u7b2c\u4e00\u5173\u7684\u901a\u5173\u6761\u4ef6\u662f\u73a9\u5bb6\u83b7\u5f971000\u5206\uff0c\u90a3\u4e48\u5728\u5b8c\u6210\u672c\u5c40\u6e38\u620f\u540e\u6211\u4eec\u8981\u6839\u636e\u73a9\u5bb6\u5f97\u5230\u5206\u6570\u6765\u51b3\u5b9a\u7a76\u7adf\u662f\u8fdb\u5165\u7b2c\u4e8c\u5173\u8fd8\u662f\u544a\u8bc9\u73a9\u5bb6\u201cGame Over\u201d\uff0c\u8fd9\u91cc\u5c31\u4f1a\u4ea7\u751f\u4e24\u4e2a\u5206\u652f\uff0c\u800c\u4e14\u8fd9\u4e24\u4e2a\u5206\u652f\u53ea\u6709\u4e00\u4e2a\u4f1a\u88ab\u6267\u884c\uff0c\u8fd9\u5c31\u662f\u7a0b\u5e8f\u4e2d\u5206\u652f\u7ed3\u6784\u3002\u7c7b\u4f3c\u7684\u573a\u666f\u8fd8\u6709\u5f88\u591a\uff0c\u7ed9\u5927\u5bb6\u4e00\u5206\u949f\u7684\u65f6\u95f4\uff0c\u4f60\u5e94\u8be5\u53ef\u4ee5\u60f3\u5230\u81f3\u5c115\u4e2a\u4ee5\u4e0a\u8fd9\u6837\u7684\u4f8b\u5b50\uff0c\u8d76\u7d27\u8bd5\u4e00\u8bd5\u3002 if\u8bed\u53e5\u7684\u4f7f\u7528 \u5728Python\u4e2d\uff0c\u8981\u6784\u9020\u5206\u652f\u7ed3\u6784\u53ef\u4ee5\u4f7f\u7528 if \u3001 elif \u548c else \u5173\u952e\u5b57\u3002\u6240\u8c13\u5173\u952e\u5b57\u5c31\u662f\u6709\u7279\u6b8a\u542b\u4e49\u7684\u5355\u8bcd\uff0c\u50cf if \u548c else \u5c31\u662f\u4e13\u95e8\u7528\u4e8e\u6784\u9020\u5206\u652f\u7ed3\u6784\u7684\u5173\u952e\u5b57\uff0c\u5f88\u663e\u7136\u4f60\u4e0d\u80fd\u591f\u4f7f\u7528\u5b83\u4f5c\u4e3a\u53d8\u91cf\u540d\uff08\u4e8b\u5b9e\u4e0a\uff0c\u7528\u4f5c\u5176\u4ed6\u7684\u6807\u8bc6\u7b26\u4e5f\u662f\u4e0d\u53ef\u4ee5\uff09\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\u6f14\u793a\u4e86\u5982\u4f55\u6784\u9020\u4e00\u4e2a\u5206\u652f\u7ed3\u6784\u3002 \"\"\" \u7528\u6237\u8eab\u4efd\u9a8c\u8bc1 Version: 0.1 Author: \u9a86\u660a \"\"\" username = input('\u8bf7\u8f93\u5165\u7528\u6237\u540d: ') password = input('\u8bf7\u8f93\u5165\u53e3\u4ee4: ') # \u5982\u679c\u5e0c\u671b\u8f93\u5165\u53e3\u4ee4\u65f6 \u7ec8\u7aef\u4e2d\u6ca1\u6709\u56de\u663e \u53ef\u4ee5\u4f7f\u7528getpass\u6a21\u5757\u7684getpass\u51fd\u6570 # import getpass # password = getpass.getpass('\u8bf7\u8f93\u5165\u53e3\u4ee4: ') if username == 'admin' and password == '123456': print('\u8eab\u4efd\u9a8c\u8bc1\u6210\u529f!') else: print('\u8eab\u4efd\u9a8c\u8bc1\u5931\u8d25!') \u552f\u4e00\u9700\u8981\u8bf4\u660e\u7684\u662f\u548cC/C++\u3001Java\u7b49\u8bed\u8a00\u4e0d\u540c\uff0cPython\u4e2d\u6ca1\u6709\u7528\u82b1\u62ec\u53f7\u6765\u6784\u9020\u4ee3\u7801\u5757\u800c\u662f\u4f7f\u7528\u4e86\u7f29\u8fdb\u7684\u65b9\u5f0f\u6765\u8bbe\u7f6e\u4ee3\u7801\u7684\u5c42\u6b21\u7ed3\u6784\uff0c\u5982\u679c if \u6761\u4ef6\u6210\u7acb\u7684\u60c5\u51b5\u4e0b\u9700\u8981\u6267\u884c\u591a\u6761\u8bed\u53e5\uff0c\u53ea\u8981\u4fdd\u6301\u591a\u6761\u8bed\u53e5\u5177\u6709\u76f8\u540c\u7684\u7f29\u8fdb\u5c31\u53ef\u4ee5\u4e86\uff0c\u6362\u53e5\u8bdd\u8bf4\u8fde\u7eed\u7684\u4ee3\u7801\u5982\u679c\u53c8\u4fdd\u6301\u4e86\u76f8\u540c\u7684\u7f29\u8fdb\u90a3\u4e48\u5b83\u4eec\u5c5e\u4e8e\u540c\u4e00\u4e2a\u4ee3\u7801\u5757\uff0c\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u6267\u884c\u7684\u6574\u4f53\u3002 \u5f53\u7136\u5982\u679c\u8981\u6784\u9020\u51fa\u66f4\u591a\u7684\u5206\u652f\uff0c\u53ef\u4ee5\u4f7f\u7528 if\u2026elif\u2026else\u2026 \u7ed3\u6784\uff0c\u4f8b\u5982\u4e0b\u9762\u7684\u5206\u6bb5\u51fd\u6570\u6c42\u503c\u3002 $$f(x)=\\begin{cases} 3x-5&\\text{(x>1)}\\x+2&\\text{(-1}\\leq\\text{x}\\leq\\text{1)}\\5x+3&\\text {(x<-1)}\\end{cases}$$ \"\"\" \u5206\u6bb5\u51fd\u6570\u6c42\u503c 3x - 5 (x > 1) f(x) = x + 2 (-1 <= x <= 1) 5x + 3 (x < -1) Version: 0.1 Author: \u9a86\u660a \"\"\" x = float(input('x = ')) if x > 1: y = 3 * x - 5 elif x >= -1: y = x + 2 else: y = 5 * x + 3 print('f(%.2f) = %.2f' % (x, y)) \u5f53\u7136\u6839\u636e\u5b9e\u9645\u5f00\u53d1\u7684\u9700\u8981\uff0c\u5206\u652f\u7ed3\u6784\u662f\u53ef\u4ee5\u5d4c\u5957\u7684\uff0c\u4f8b\u5982\u5224\u65ad\u662f\u5426\u901a\u5173\u4ee5\u540e\u8fd8\u8981\u6839\u636e\u4f60\u83b7\u5f97\u7684\u5b9d\u7269\u6216\u8005\u9053\u5177\u7684\u6570\u91cf\u5bf9\u4f60\u7684\u8868\u73b0\u7ed9\u51fa\u7b49\u7ea7\uff08\u6bd4\u5982\u70b9\u4eae\u4e24\u9897\u6216\u4e09\u9897\u661f\u661f\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u5728 if \u7684\u5185\u90e8\u6784\u9020\u51fa\u4e00\u4e2a\u65b0\u7684\u5206\u652f\u7ed3\u6784\uff0c\u540c\u7406 elif \u548c else \u4e2d\u4e5f\u53ef\u4ee5\u518d\u6784\u9020\u65b0\u7684\u5206\u652f\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u5d4c\u5957\u7684\u5206\u652f\u7ed3\u6784\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0a\u9762\u7684\u4ee3\u7801\u4e5f\u53ef\u4ee5\u5199\u6210\u4e0b\u9762\u7684\u6837\u5b50\u3002 \"\"\" \u5206\u6bb5\u51fd\u6570\u6c42\u503c 3x - 5 (x > 1) f(x) = x + 2 (-1 <= x <= 1) 5x + 3 (x < -1) Version: 0.1 Author: \u9a86\u660a \"\"\" x = float(input('x = ')) if x > 1: y = 3 * x - 5 else: if x >= -1: y = x + 2 else: y = 5 * x + 3 print('f(%.2f) = %.2f' % (x, y)) \u8bf4\u660e\uff1a \u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u611f\u53d7\u4e00\u4e0b\u8fd9\u4e24\u79cd\u5199\u6cd5\u5230\u5e95\u662f\u54ea\u4e00\u79cd\u66f4\u597d\u3002\u5728\u4e4b\u524d\u6211\u4eec\u63d0\u5230\u7684Python\u4e4b\u7985\u4e2d\u6709\u8fd9\u4e48\u4e00\u53e5\u8bdd\u201cFlat is better than nested.\u201d\uff0c\u4e4b\u6240\u4ee5\u63d0\u51fa\u8fd9\u4e2a\u89c2\u70b9\u662f\u56e0\u4e3a\u5d4c\u5957\u7ed3\u6784\u7684\u5d4c\u5957\u5c42\u6b21\u591a\u4e86\u4e4b\u540e\u4f1a\u4e25\u91cd\u7684\u5f71\u54cd\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\uff0c\u5982\u679c\u53ef\u4ee5\u4f7f\u7528\u6241\u5e73\u5316\u7684\u7ed3\u6784\u5c31\u4e0d\u8981\u53bb\u7528\u5d4c\u5957\uff0c\u56e0\u6b64\u4e4b\u524d\u7684\u5199\u6cd5\u662f\u66f4\u597d\u7684\u505a\u6cd5\u3002 \u7ec3\u4e60 \u7ec3\u4e601\uff1a\u82f1\u5236\u5355\u4f4d\u4e0e\u516c\u5236\u5355\u4f4d\u4e92\u6362 \"\"\" \u82f1\u5236\u5355\u4f4d\u82f1\u5bf8\u548c\u516c\u5236\u5355\u4f4d\u5398\u7c73\u4e92\u6362 Version: 0.1 Author: \u9a86\u660a \"\"\" value = float(input('\u8bf7\u8f93\u5165\u957f\u5ea6: ')) unit = input('\u8bf7\u8f93\u5165\u5355\u4f4d: ') if unit == 'in' or unit == '\u82f1\u5bf8': print('%f\u82f1\u5bf8 = %f\u5398\u7c73' % (value, value * 2.54)) elif unit == 'cm' or unit == '\u5398\u7c73': print('%f\u5398\u7c73 = %f\u82f1\u5bf8' % (value, value / 2.54)) else: print('\u8bf7\u8f93\u5165\u6709\u6548\u7684\u5355\u4f4d') \u7ec3\u4e602\uff1a\u63b7\u9ab0\u5b50\u51b3\u5b9a\u505a\u4ec0\u4e48 \"\"\" \u63b7\u9ab0\u5b50\u51b3\u5b9a\u505a\u4ec0\u4e48\u4e8b\u60c5 Version: 0.1 Author: \u9a86\u660a \"\"\" from random import randint face = randint(1, 6) if face == 1: result = '\u5531\u9996\u6b4c' elif face == 2: result = '\u8df3\u4e2a\u821e' elif face == 3: result = '\u5b66\u72d7\u53eb' elif face == 4: result = '\u505a\u4fef\u5367\u6491' elif face == 5: result = '\u5ff5\u7ed5\u53e3\u4ee4' else: result = '\u8bb2\u51b7\u7b11\u8bdd' print(result) \u8bf4\u660e\uff1a \u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86random\u6a21\u5757\u7684randint\u51fd\u6570\u751f\u6210\u6307\u5b9a\u8303\u56f4\u7684\u968f\u673a\u6570\u6765\u6a21\u62df\u63b7\u9ab0\u5b50\u3002 \u7ec3\u4e603\uff1a\u767e\u5206\u5236\u6210\u7ee9\u8f6c\u7b49\u7ea7\u5236 \"\"\" \u767e\u5206\u5236\u6210\u7ee9\u8f6c\u7b49\u7ea7\u5236\u6210\u7ee9 90\u5206\u4ee5\u4e0a --> A 80\u5206~89\u5206 --> B 70\u5206~79\u5206 --> C 60\u5206~69\u5206 --> D 60\u5206\u4ee5\u4e0b --> E Version: 0.1 Author: \u9a86\u660a \"\"\" score = float(input('\u8bf7\u8f93\u5165\u6210\u7ee9: ')) if score >= 90: grade = 'A' elif score >= 80: grade = 'B' elif score >= 70: grade = 'C' elif score >= 60: grade = 'D' else: grade = 'E' print('\u5bf9\u5e94\u7684\u7b49\u7ea7\u662f:', grade) \u7ec3\u4e604\uff1a\u8f93\u5165\u4e09\u6761\u8fb9\u957f\u5982\u679c\u80fd\u6784\u6210\u4e09\u89d2\u5f62\u5c31\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef \"\"\" \u5224\u65ad\u8f93\u5165\u7684\u8fb9\u957f\u80fd\u5426\u6784\u6210\u4e09\u89d2\u5f62 \u5982\u679c\u80fd\u5219\u8ba1\u7b97\u51fa\u4e09\u89d2\u5f62\u7684\u5468\u957f\u548c\u9762\u79ef Version: 0.1 Author: \u9a86\u660a \"\"\" import math a = float(input('a = ')) b = float(input('b = ')) c = float(input('c = ')) if a + b > c and a + c > b and b + c > a: print('\u5468\u957f: %f' % (a + b + c)) p = (a + b + c) / 2 area = math.sqrt(p * (p - a) * (p - b) * (p - c)) print('\u9762\u79ef: %f' % (area)) else: print('\u4e0d\u80fd\u6784\u6210\u4e09\u89d2\u5f62') \u8bf4\u660e\uff1a \u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86 math \u6a21\u5757\u7684 sqrt \u51fd\u6570\u6765\u8ba1\u7b97\u5e73\u65b9\u6839\u3002\u7528\u8fb9\u957f\u8ba1\u7b97\u4e09\u89d2\u5f62\u9762\u79ef\u7684\u516c\u5f0f\u53eb\u505a \u6d77\u4f26\u516c\u5f0f \u3002 \u7ec3\u4e605\uff1a\u4e2a\u4eba\u6240\u5f97\u7a0e\u8ba1\u7b97\u5668\u3002 \"\"\" \u8f93\u5165\u6708\u6536\u5165\u548c\u4e94\u9669\u4e00\u91d1\u8ba1\u7b97\u4e2a\u4eba\u6240\u5f97\u7a0e Version: 0.1 Author: \u9a86\u660a \"\"\" salary = float(input('\u672c\u6708\u6536\u5165: ')) insurance = float(input('\u4e94\u9669\u4e00\u91d1: ')) diff = salary - insurance - 3500 if diff <= 0: rate = 0 deduction = 0 elif diff < 1500: rate = 0.03 deduction = 0 elif diff < 4500: rate = 0.1 deduction = 105 elif diff < 9000: rate = 0.2 deduction = 555 elif diff < 35000: rate = 0.25 deduction = 1005 elif diff < 55000: rate = 0.3 deduction = 2755 elif diff < 80000: rate = 0.35 deduction = 5505 else: rate = 0.45 deduction = 13505 tax = abs(diff * rate - deduction) print('\u4e2a\u4eba\u6240\u5f97\u7a0e: \uffe5%.2f\u5143' % tax) print('\u5b9e\u9645\u5230\u624b\u6536\u5165: \uffe5%.2f\u5143' % (diff + 3500 - tax)) \u8bf4\u660e\uff1a \u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86Python\u5185\u7f6e\u7684 abs() \u51fd\u6570\u53d6\u7edd\u5bf9\u503c\u6765\u5904\u7406 -0 \u7684\u95ee\u9898\u3002","title":"\u7b2c\u4e09\u5929"},{"location":"new/3%E3%80%81%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/#day03-","text":"","title":"Day03 - \u5206\u652f\u7ed3\u6784"},{"location":"new/3%E3%80%81%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/#_1","text":"\u8fc4\u4eca\u4e3a\u6b62\uff0c\u6211\u4eec\u5199\u7684Python\u4ee3\u7801\u90fd\u662f\u4e00\u6761\u4e00\u6761\u8bed\u53e5\u987a\u5e8f\u6267\u884c\uff0c\u8fd9\u79cd\u7ed3\u6784\u7684\u4ee3\u7801\u6211\u4eec\u79f0\u4e4b\u4e3a\u987a\u5e8f\u7ed3\u6784\u3002\u7136\u800c\u4ec5\u6709\u987a\u5e8f\u7ed3\u6784\u5e76\u4e0d\u80fd\u89e3\u51b3\u6240\u6709\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u6211\u4eec\u8bbe\u8ba1\u4e00\u4e2a\u6e38\u620f\uff0c\u6e38\u620f\u7b2c\u4e00\u5173\u7684\u901a\u5173\u6761\u4ef6\u662f\u73a9\u5bb6\u83b7\u5f971000\u5206\uff0c\u90a3\u4e48\u5728\u5b8c\u6210\u672c\u5c40\u6e38\u620f\u540e\u6211\u4eec\u8981\u6839\u636e\u73a9\u5bb6\u5f97\u5230\u5206\u6570\u6765\u51b3\u5b9a\u7a76\u7adf\u662f\u8fdb\u5165\u7b2c\u4e8c\u5173\u8fd8\u662f\u544a\u8bc9\u73a9\u5bb6\u201cGame Over\u201d\uff0c\u8fd9\u91cc\u5c31\u4f1a\u4ea7\u751f\u4e24\u4e2a\u5206\u652f\uff0c\u800c\u4e14\u8fd9\u4e24\u4e2a\u5206\u652f\u53ea\u6709\u4e00\u4e2a\u4f1a\u88ab\u6267\u884c\uff0c\u8fd9\u5c31\u662f\u7a0b\u5e8f\u4e2d\u5206\u652f\u7ed3\u6784\u3002\u7c7b\u4f3c\u7684\u573a\u666f\u8fd8\u6709\u5f88\u591a\uff0c\u7ed9\u5927\u5bb6\u4e00\u5206\u949f\u7684\u65f6\u95f4\uff0c\u4f60\u5e94\u8be5\u53ef\u4ee5\u60f3\u5230\u81f3\u5c115\u4e2a\u4ee5\u4e0a\u8fd9\u6837\u7684\u4f8b\u5b50\uff0c\u8d76\u7d27\u8bd5\u4e00\u8bd5\u3002","title":"\u5206\u652f\u7ed3\u6784\u7684\u5e94\u7528\u573a\u666f"},{"location":"new/3%E3%80%81%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/#if","text":"\u5728Python\u4e2d\uff0c\u8981\u6784\u9020\u5206\u652f\u7ed3\u6784\u53ef\u4ee5\u4f7f\u7528 if \u3001 elif \u548c else \u5173\u952e\u5b57\u3002\u6240\u8c13\u5173\u952e\u5b57\u5c31\u662f\u6709\u7279\u6b8a\u542b\u4e49\u7684\u5355\u8bcd\uff0c\u50cf if \u548c else \u5c31\u662f\u4e13\u95e8\u7528\u4e8e\u6784\u9020\u5206\u652f\u7ed3\u6784\u7684\u5173\u952e\u5b57\uff0c\u5f88\u663e\u7136\u4f60\u4e0d\u80fd\u591f\u4f7f\u7528\u5b83\u4f5c\u4e3a\u53d8\u91cf\u540d\uff08\u4e8b\u5b9e\u4e0a\uff0c\u7528\u4f5c\u5176\u4ed6\u7684\u6807\u8bc6\u7b26\u4e5f\u662f\u4e0d\u53ef\u4ee5\uff09\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\u6f14\u793a\u4e86\u5982\u4f55\u6784\u9020\u4e00\u4e2a\u5206\u652f\u7ed3\u6784\u3002 \"\"\" \u7528\u6237\u8eab\u4efd\u9a8c\u8bc1 Version: 0.1 Author: \u9a86\u660a \"\"\" username = input('\u8bf7\u8f93\u5165\u7528\u6237\u540d: ') password = input('\u8bf7\u8f93\u5165\u53e3\u4ee4: ') # \u5982\u679c\u5e0c\u671b\u8f93\u5165\u53e3\u4ee4\u65f6 \u7ec8\u7aef\u4e2d\u6ca1\u6709\u56de\u663e \u53ef\u4ee5\u4f7f\u7528getpass\u6a21\u5757\u7684getpass\u51fd\u6570 # import getpass # password = getpass.getpass('\u8bf7\u8f93\u5165\u53e3\u4ee4: ') if username == 'admin' and password == '123456': print('\u8eab\u4efd\u9a8c\u8bc1\u6210\u529f!') else: print('\u8eab\u4efd\u9a8c\u8bc1\u5931\u8d25!') \u552f\u4e00\u9700\u8981\u8bf4\u660e\u7684\u662f\u548cC/C++\u3001Java\u7b49\u8bed\u8a00\u4e0d\u540c\uff0cPython\u4e2d\u6ca1\u6709\u7528\u82b1\u62ec\u53f7\u6765\u6784\u9020\u4ee3\u7801\u5757\u800c\u662f\u4f7f\u7528\u4e86\u7f29\u8fdb\u7684\u65b9\u5f0f\u6765\u8bbe\u7f6e\u4ee3\u7801\u7684\u5c42\u6b21\u7ed3\u6784\uff0c\u5982\u679c if \u6761\u4ef6\u6210\u7acb\u7684\u60c5\u51b5\u4e0b\u9700\u8981\u6267\u884c\u591a\u6761\u8bed\u53e5\uff0c\u53ea\u8981\u4fdd\u6301\u591a\u6761\u8bed\u53e5\u5177\u6709\u76f8\u540c\u7684\u7f29\u8fdb\u5c31\u53ef\u4ee5\u4e86\uff0c\u6362\u53e5\u8bdd\u8bf4\u8fde\u7eed\u7684\u4ee3\u7801\u5982\u679c\u53c8\u4fdd\u6301\u4e86\u76f8\u540c\u7684\u7f29\u8fdb\u90a3\u4e48\u5b83\u4eec\u5c5e\u4e8e\u540c\u4e00\u4e2a\u4ee3\u7801\u5757\uff0c\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u6267\u884c\u7684\u6574\u4f53\u3002 \u5f53\u7136\u5982\u679c\u8981\u6784\u9020\u51fa\u66f4\u591a\u7684\u5206\u652f\uff0c\u53ef\u4ee5\u4f7f\u7528 if\u2026elif\u2026else\u2026 \u7ed3\u6784\uff0c\u4f8b\u5982\u4e0b\u9762\u7684\u5206\u6bb5\u51fd\u6570\u6c42\u503c\u3002 $$f(x)=\\begin{cases} 3x-5&\\text{(x>1)}\\x+2&\\text{(-1}\\leq\\text{x}\\leq\\text{1)}\\5x+3&\\text {(x<-1)}\\end{cases}$$ \"\"\" \u5206\u6bb5\u51fd\u6570\u6c42\u503c 3x - 5 (x > 1) f(x) = x + 2 (-1 <= x <= 1) 5x + 3 (x < -1) Version: 0.1 Author: \u9a86\u660a \"\"\" x = float(input('x = ')) if x > 1: y = 3 * x - 5 elif x >= -1: y = x + 2 else: y = 5 * x + 3 print('f(%.2f) = %.2f' % (x, y)) \u5f53\u7136\u6839\u636e\u5b9e\u9645\u5f00\u53d1\u7684\u9700\u8981\uff0c\u5206\u652f\u7ed3\u6784\u662f\u53ef\u4ee5\u5d4c\u5957\u7684\uff0c\u4f8b\u5982\u5224\u65ad\u662f\u5426\u901a\u5173\u4ee5\u540e\u8fd8\u8981\u6839\u636e\u4f60\u83b7\u5f97\u7684\u5b9d\u7269\u6216\u8005\u9053\u5177\u7684\u6570\u91cf\u5bf9\u4f60\u7684\u8868\u73b0\u7ed9\u51fa\u7b49\u7ea7\uff08\u6bd4\u5982\u70b9\u4eae\u4e24\u9897\u6216\u4e09\u9897\u661f\u661f\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u5728 if \u7684\u5185\u90e8\u6784\u9020\u51fa\u4e00\u4e2a\u65b0\u7684\u5206\u652f\u7ed3\u6784\uff0c\u540c\u7406 elif \u548c else \u4e2d\u4e5f\u53ef\u4ee5\u518d\u6784\u9020\u65b0\u7684\u5206\u652f\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u5d4c\u5957\u7684\u5206\u652f\u7ed3\u6784\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0a\u9762\u7684\u4ee3\u7801\u4e5f\u53ef\u4ee5\u5199\u6210\u4e0b\u9762\u7684\u6837\u5b50\u3002 \"\"\" \u5206\u6bb5\u51fd\u6570\u6c42\u503c 3x - 5 (x > 1) f(x) = x + 2 (-1 <= x <= 1) 5x + 3 (x < -1) Version: 0.1 Author: \u9a86\u660a \"\"\" x = float(input('x = ')) if x > 1: y = 3 * x - 5 else: if x >= -1: y = x + 2 else: y = 5 * x + 3 print('f(%.2f) = %.2f' % (x, y)) \u8bf4\u660e\uff1a \u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u611f\u53d7\u4e00\u4e0b\u8fd9\u4e24\u79cd\u5199\u6cd5\u5230\u5e95\u662f\u54ea\u4e00\u79cd\u66f4\u597d\u3002\u5728\u4e4b\u524d\u6211\u4eec\u63d0\u5230\u7684Python\u4e4b\u7985\u4e2d\u6709\u8fd9\u4e48\u4e00\u53e5\u8bdd\u201cFlat is better than nested.\u201d\uff0c\u4e4b\u6240\u4ee5\u63d0\u51fa\u8fd9\u4e2a\u89c2\u70b9\u662f\u56e0\u4e3a\u5d4c\u5957\u7ed3\u6784\u7684\u5d4c\u5957\u5c42\u6b21\u591a\u4e86\u4e4b\u540e\u4f1a\u4e25\u91cd\u7684\u5f71\u54cd\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\uff0c\u5982\u679c\u53ef\u4ee5\u4f7f\u7528\u6241\u5e73\u5316\u7684\u7ed3\u6784\u5c31\u4e0d\u8981\u53bb\u7528\u5d4c\u5957\uff0c\u56e0\u6b64\u4e4b\u524d\u7684\u5199\u6cd5\u662f\u66f4\u597d\u7684\u505a\u6cd5\u3002","title":"if\u8bed\u53e5\u7684\u4f7f\u7528"},{"location":"new/3%E3%80%81%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/#_2","text":"","title":"\u7ec3\u4e60"},{"location":"new/3%E3%80%81%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/#1","text":"\"\"\" \u82f1\u5236\u5355\u4f4d\u82f1\u5bf8\u548c\u516c\u5236\u5355\u4f4d\u5398\u7c73\u4e92\u6362 Version: 0.1 Author: \u9a86\u660a \"\"\" value = float(input('\u8bf7\u8f93\u5165\u957f\u5ea6: ')) unit = input('\u8bf7\u8f93\u5165\u5355\u4f4d: ') if unit == 'in' or unit == '\u82f1\u5bf8': print('%f\u82f1\u5bf8 = %f\u5398\u7c73' % (value, value * 2.54)) elif unit == 'cm' or unit == '\u5398\u7c73': print('%f\u5398\u7c73 = %f\u82f1\u5bf8' % (value, value / 2.54)) else: print('\u8bf7\u8f93\u5165\u6709\u6548\u7684\u5355\u4f4d')","title":"\u7ec3\u4e601\uff1a\u82f1\u5236\u5355\u4f4d\u4e0e\u516c\u5236\u5355\u4f4d\u4e92\u6362"},{"location":"new/3%E3%80%81%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/#2","text":"\"\"\" \u63b7\u9ab0\u5b50\u51b3\u5b9a\u505a\u4ec0\u4e48\u4e8b\u60c5 Version: 0.1 Author: \u9a86\u660a \"\"\" from random import randint face = randint(1, 6) if face == 1: result = '\u5531\u9996\u6b4c' elif face == 2: result = '\u8df3\u4e2a\u821e' elif face == 3: result = '\u5b66\u72d7\u53eb' elif face == 4: result = '\u505a\u4fef\u5367\u6491' elif face == 5: result = '\u5ff5\u7ed5\u53e3\u4ee4' else: result = '\u8bb2\u51b7\u7b11\u8bdd' print(result) \u8bf4\u660e\uff1a \u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86random\u6a21\u5757\u7684randint\u51fd\u6570\u751f\u6210\u6307\u5b9a\u8303\u56f4\u7684\u968f\u673a\u6570\u6765\u6a21\u62df\u63b7\u9ab0\u5b50\u3002","title":"\u7ec3\u4e602\uff1a\u63b7\u9ab0\u5b50\u51b3\u5b9a\u505a\u4ec0\u4e48"},{"location":"new/3%E3%80%81%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/#3","text":"\"\"\" \u767e\u5206\u5236\u6210\u7ee9\u8f6c\u7b49\u7ea7\u5236\u6210\u7ee9 90\u5206\u4ee5\u4e0a --> A 80\u5206~89\u5206 --> B 70\u5206~79\u5206 --> C 60\u5206~69\u5206 --> D 60\u5206\u4ee5\u4e0b --> E Version: 0.1 Author: \u9a86\u660a \"\"\" score = float(input('\u8bf7\u8f93\u5165\u6210\u7ee9: ')) if score >= 90: grade = 'A' elif score >= 80: grade = 'B' elif score >= 70: grade = 'C' elif score >= 60: grade = 'D' else: grade = 'E' print('\u5bf9\u5e94\u7684\u7b49\u7ea7\u662f:', grade)","title":"\u7ec3\u4e603\uff1a\u767e\u5206\u5236\u6210\u7ee9\u8f6c\u7b49\u7ea7\u5236"},{"location":"new/3%E3%80%81%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/#4","text":"\"\"\" \u5224\u65ad\u8f93\u5165\u7684\u8fb9\u957f\u80fd\u5426\u6784\u6210\u4e09\u89d2\u5f62 \u5982\u679c\u80fd\u5219\u8ba1\u7b97\u51fa\u4e09\u89d2\u5f62\u7684\u5468\u957f\u548c\u9762\u79ef Version: 0.1 Author: \u9a86\u660a \"\"\" import math a = float(input('a = ')) b = float(input('b = ')) c = float(input('c = ')) if a + b > c and a + c > b and b + c > a: print('\u5468\u957f: %f' % (a + b + c)) p = (a + b + c) / 2 area = math.sqrt(p * (p - a) * (p - b) * (p - c)) print('\u9762\u79ef: %f' % (area)) else: print('\u4e0d\u80fd\u6784\u6210\u4e09\u89d2\u5f62') \u8bf4\u660e\uff1a \u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86 math \u6a21\u5757\u7684 sqrt \u51fd\u6570\u6765\u8ba1\u7b97\u5e73\u65b9\u6839\u3002\u7528\u8fb9\u957f\u8ba1\u7b97\u4e09\u89d2\u5f62\u9762\u79ef\u7684\u516c\u5f0f\u53eb\u505a \u6d77\u4f26\u516c\u5f0f \u3002","title":"\u7ec3\u4e604\uff1a\u8f93\u5165\u4e09\u6761\u8fb9\u957f\u5982\u679c\u80fd\u6784\u6210\u4e09\u89d2\u5f62\u5c31\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef"},{"location":"new/3%E3%80%81%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/#5","text":"\"\"\" \u8f93\u5165\u6708\u6536\u5165\u548c\u4e94\u9669\u4e00\u91d1\u8ba1\u7b97\u4e2a\u4eba\u6240\u5f97\u7a0e Version: 0.1 Author: \u9a86\u660a \"\"\" salary = float(input('\u672c\u6708\u6536\u5165: ')) insurance = float(input('\u4e94\u9669\u4e00\u91d1: ')) diff = salary - insurance - 3500 if diff <= 0: rate = 0 deduction = 0 elif diff < 1500: rate = 0.03 deduction = 0 elif diff < 4500: rate = 0.1 deduction = 105 elif diff < 9000: rate = 0.2 deduction = 555 elif diff < 35000: rate = 0.25 deduction = 1005 elif diff < 55000: rate = 0.3 deduction = 2755 elif diff < 80000: rate = 0.35 deduction = 5505 else: rate = 0.45 deduction = 13505 tax = abs(diff * rate - deduction) print('\u4e2a\u4eba\u6240\u5f97\u7a0e: \uffe5%.2f\u5143' % tax) print('\u5b9e\u9645\u5230\u624b\u6536\u5165: \uffe5%.2f\u5143' % (diff + 3500 - tax)) \u8bf4\u660e\uff1a \u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86Python\u5185\u7f6e\u7684 abs() \u51fd\u6570\u53d6\u7edd\u5bf9\u503c\u6765\u5904\u7406 -0 \u7684\u95ee\u9898\u3002","title":"\u7ec3\u4e605\uff1a\u4e2a\u4eba\u6240\u5f97\u7a0e\u8ba1\u7b97\u5668\u3002"},{"location":"new/4%E3%80%81%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/","text":"Day04 - \u5faa\u73af\u7ed3\u6784 \u5faa\u73af\u7ed3\u6784\u7684\u5e94\u7528\u573a\u666f \u5982\u679c\u5728\u7a0b\u5e8f\u4e2d\u6211\u4eec\u9700\u8981\u91cd\u590d\u7684\u6267\u884c\u67d0\u6761\u6216\u67d0\u4e9b\u6307\u4ee4\uff0c\u4f8b\u5982\u7528\u7a0b\u5e8f\u63a7\u5236\u673a\u5668\u4eba\u8e22\u8db3\u7403\uff0c\u5982\u679c\u673a\u5668\u4eba\u6301\u7403\u800c\u4e14\u8fd8\u6ca1\u6709\u8fdb\u5165\u5c04\u95e8\u8303\u56f4\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u4e00\u76f4\u53d1\u51fa\u8ba9\u673a\u5668\u4eba\u5411\u7403\u95e8\u65b9\u5411\u5954\u8dd1\u7684\u6307\u4ee4\u3002\u5f53\u7136\u4f60\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\u4e86\uff0c\u521a\u624d\u7684\u63cf\u8ff0\u4e2d\u5176\u5b9e\u4e0d\u4ec5\u4ec5\u6709\u9700\u8981\u91cd\u590d\u7684\u52a8\u4f5c\uff0c\u8fd8\u6709\u6211\u4eec\u4e0a\u4e00\u4e2a\u7ae0\u8282\u8bb2\u5230\u7684\u5206\u652f\u7ed3\u6784\u3002\u518d\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u6bd4\u5982\u5728\u6211\u4eec\u7684\u7a0b\u5e8f\u4e2d\u8981\u5b9e\u73b0\u6bcf\u96941\u79d2\u4e2d\u5728\u5c4f\u5e55\u4e0a\u6253\u5370\u4e00\u4e2a\"hello, world\"\u8fd9\u6837\u7684\u5b57\u7b26\u4e32\u5e76\u6301\u7eed\u4e00\u4e2a\u5c0f\u65f6\uff0c\u6211\u4eec\u80af\u5b9a\u4e0d\u80fd\u591f\u5c06 print('hello, world') \u8fd9\u53e5\u4ee3\u7801\u5199\u4e0a3600\u904d\uff0c\u5982\u679c\u771f\u7684\u9700\u8981\u8fd9\u6837\u505a\u90a3\u4e48\u7f16\u7a0b\u7684\u5de5\u4f5c\u5c31\u592a\u65e0\u804a\u4e86\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u4e00\u4e0b\u5faa\u73af\u7ed3\u6784\uff0c\u6709\u4e86\u5faa\u73af\u7ed3\u6784\u6211\u4eec\u5c31\u53ef\u4ee5\u8f7b\u677e\u7684\u63a7\u5236\u67d0\u4ef6\u4e8b\u6216\u8005\u67d0\u4e9b\u4e8b\u91cd\u590d\u3001\u91cd\u590d\u3001\u518d\u91cd\u590d\u7684\u53d1\u751f\u3002\u5728Python\u4e2d\u6784\u9020\u5faa\u73af\u7ed3\u6784\u6709\u4e24\u79cd\u505a\u6cd5\uff0c\u4e00\u79cd\u662f for-in \u5faa\u73af\uff0c\u4e00\u79cd\u662f while \u5faa\u73af\u3002 for-in\u5faa\u73af \u5982\u679c\u660e\u786e\u7684\u77e5\u9053\u5faa\u73af\u6267\u884c\u7684\u6b21\u6570\u6216\u8005\u662f\u8981\u5bf9\u4e00\u4e2a\u5bb9\u5668\u8fdb\u884c\u8fed\u4ee3\uff08\u540e\u9762\u4f1a\u8bb2\u5230\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u63a8\u8350\u4f7f\u7528 for-in \u5faa\u73af\uff0c\u4f8b\u5982\u4e0b\u9762\u4ee3\u7801\u4e2d\u8ba1\u7b97$\\sum_{n=1}^{100}n$\u3002 \"\"\" \u7528for\u5faa\u73af\u5b9e\u73b01~100\u6c42\u548c Version: 0.1 Author: \u9a86\u660a \"\"\" sum = 0 for x in range(101): sum += x print(sum) \u9700\u8981\u8bf4\u660e\u7684\u662f\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684 range \u7c7b\u578b\uff0c range \u53ef\u4ee5\u7528\u6765\u4ea7\u751f\u4e00\u4e2a\u4e0d\u53d8\u7684\u6570\u503c\u5e8f\u5217\uff0c\u800c\u4e14\u8fd9\u4e2a\u5e8f\u5217\u901a\u5e38\u90fd\u662f\u7528\u5728\u5faa\u73af\u4e2d\u7684\uff0c\u4f8b\u5982\uff1a range(101) \u53ef\u4ee5\u4ea7\u751f\u4e00\u4e2a0\u5230100\u7684\u6574\u6570\u5e8f\u5217\u3002 range(1, 100) \u53ef\u4ee5\u4ea7\u751f\u4e00\u4e2a1\u523099\u7684\u6574\u6570\u5e8f\u5217\u3002 range(1, 100, 2) \u53ef\u4ee5\u4ea7\u751f\u4e00\u4e2a1\u523099\u7684\u5947\u6570\u5e8f\u5217\uff0c\u5176\u4e2d\u76842\u662f\u6b65\u957f\uff0c\u5373\u6570\u503c\u5e8f\u5217\u7684\u589e\u91cf\u3002 \u77e5\u9053\u4e86\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u5b9e\u73b01~100\u4e4b\u95f4\u7684\u5076\u6570\u6c42\u548c\u3002 \"\"\" \u7528for\u5faa\u73af\u5b9e\u73b01~100\u4e4b\u95f4\u7684\u5076\u6570\u6c42\u548c Version: 0.1 Author: \u9a86\u660a \"\"\" sum = 0 for x in range(2, 101, 2): sum += x print(sum) \u4e5f\u53ef\u4ee5\u901a\u8fc7\u5728\u5faa\u73af\u4e2d\u4f7f\u7528\u5206\u652f\u7ed3\u6784\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u76f8\u540c\u7684\u529f\u80fd\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 \"\"\" \u7528for\u5faa\u73af\u5b9e\u73b01~100\u4e4b\u95f4\u7684\u5076\u6570\u6c42\u548c Version: 0.1 Author: \u9a86\u660a \"\"\" sum = 0 for x in range(1, 101): if x % 2 == 0: sum += x print(sum) while\u5faa\u73af \u5982\u679c\u8981\u6784\u9020\u4e0d\u77e5\u9053\u5177\u4f53\u5faa\u73af\u6b21\u6570\u7684\u5faa\u73af\u7ed3\u6784\uff0c\u6211\u4eec\u63a8\u8350\u4f7f\u7528 while \u5faa\u73af\uff0c while \u5faa\u73af\u901a\u8fc7\u4e00\u4e2a\u80fd\u591f\u4ea7\u751f\u6216\u8f6c\u6362\u51fa bool \u503c\u7684\u8868\u8fbe\u5f0f\u6765\u63a7\u5236\u5faa\u73af\uff0c\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a True \u5faa\u73af\u7ee7\u7eed\uff0c\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a False \u5faa\u73af\u7ed3\u675f\u3002\u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u201c\u731c\u6570\u5b57\u201d\u7684\u5c0f\u6e38\u620f\uff08\u8ba1\u7b97\u673a\u51fa\u4e00\u4e2a1~100\u4e4b\u95f4\u7684\u968f\u673a\u6570\uff0c\u4eba\u8f93\u5165\u81ea\u5df1\u731c\u7684\u6570\u5b57\uff0c\u8ba1\u7b97\u673a\u7ed9\u51fa\u5bf9\u5e94\u7684\u63d0\u793a\u4fe1\u606f\uff0c\u76f4\u5230\u4eba\u731c\u51fa\u8ba1\u7b97\u673a\u51fa\u7684\u6570\u5b57\uff09\u6765\u770b\u770b\u5982\u4f55\u4f7f\u7528 while \u5faa\u73af\u3002 \"\"\" \u731c\u6570\u5b57\u6e38\u620f \u8ba1\u7b97\u673a\u51fa\u4e00\u4e2a1~100\u4e4b\u95f4\u7684\u968f\u673a\u6570\u7531\u4eba\u6765\u731c \u8ba1\u7b97\u673a\u6839\u636e\u4eba\u731c\u7684\u6570\u5b57\u5206\u522b\u7ed9\u51fa\u63d0\u793a\u5927\u4e00\u70b9/\u5c0f\u4e00\u70b9/\u731c\u5bf9\u4e86 Version: 0.1 Author: \u9a86\u660a \"\"\" import random answer = random.randint(1, 100) counter = 0 while True: counter += 1 number = int(input('\u8bf7\u8f93\u5165: ')) if number < answer: print('\u5927\u4e00\u70b9') elif number > answer: print('\u5c0f\u4e00\u70b9') else: print('\u606d\u559c\u4f60\u731c\u5bf9\u4e86!') break print('\u4f60\u603b\u5171\u731c\u4e86%d\u6b21' % counter) if counter > 7: print('\u4f60\u7684\u667a\u5546\u4f59\u989d\u660e\u663e\u4e0d\u8db3') \u8bf4\u660e\uff1a \u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86 break \u5173\u952e\u5b57\u6765\u63d0\u524d\u7ec8\u6b62\u5faa\u73af\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f break \u53ea\u80fd\u7ec8\u6b62\u5b83\u6240\u5728\u7684\u90a3\u4e2a\u5faa\u73af\uff0c\u8fd9\u4e00\u70b9\u5728\u4f7f\u7528\u5d4c\u5957\u7684\u5faa\u73af\u7ed3\u6784\uff08\u4e0b\u9762\u4f1a\u8bb2\u5230\uff09\u9700\u8981\u5f15\u8d77\u6ce8\u610f\u3002\u9664\u4e86 break \u4e4b\u5916\uff0c\u8fd8\u6709\u53e6\u4e00\u4e2a\u5173\u952e\u5b57\u662f continue \uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u653e\u5f03\u672c\u6b21\u5faa\u73af\u540e\u7eed\u7684\u4ee3\u7801\u76f4\u63a5\u8ba9\u5faa\u73af\u8fdb\u5165\u4e0b\u4e00\u8f6e\u3002 \u548c\u5206\u652f\u7ed3\u6784\u4e00\u6837\uff0c\u5faa\u73af\u7ed3\u6784\u4e5f\u662f\u53ef\u4ee5\u5d4c\u5957\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u5faa\u73af\u4e2d\u8fd8\u53ef\u4ee5\u6784\u9020\u5faa\u73af\u7ed3\u6784\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u901a\u8fc7\u5d4c\u5957\u7684\u5faa\u73af\u6765\u8f93\u51fa\u4e00\u4e2a\u4e5d\u4e5d\u4e58\u6cd5\u8868\u3002 \"\"\" \u8f93\u51fa\u4e58\u6cd5\u53e3\u8bc0\u8868(\u4e5d\u4e5d\u8868) Version: 0.1 Author: \u9a86\u660a \"\"\" for i in range(1, 10): for j in range(1, i + 1): print('%d*%d=%d' % (i, j, i * j), end='\\t') print() \u7ec3\u4e60 \u7ec3\u4e601\uff1a\u8f93\u5165\u4e00\u4e2a\u6570\u5224\u65ad\u662f\u4e0d\u662f\u7d20\u6570\u3002 \"\"\" \u8f93\u5165\u4e00\u4e2a\u6b63\u6574\u6570\u5224\u65ad\u5b83\u662f\u4e0d\u662f\u7d20\u6570 Version: 0.1 Author: \u9a86\u660a Date: 2018-03-01 \"\"\" from math import sqrt num = int(input('\u8bf7\u8f93\u5165\u4e00\u4e2a\u6b63\u6574\u6570: ')) end = int(sqrt(num)) is_prime = True for x in range(2, end + 1): if num % x == 0: is_prime = False break if is_prime and num != 1: print('%d\u662f\u7d20\u6570' % num) else: print('%d\u4e0d\u662f\u7d20\u6570' % num) \u7ec3\u4e602\uff1a\u8f93\u5165\u4e24\u4e2a\u6b63\u6574\u6570\uff0c\u8ba1\u7b97\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570\u3002 \"\"\" \u8f93\u5165\u4e24\u4e2a\u6b63\u6574\u6570\u8ba1\u7b97\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570 Version: 0.1 Author: \u9a86\u660a Date: 2018-03-01 \"\"\" x = int(input('x = ')) y = int(input('y = ')) if x > y: x, y = y, x for factor in range(x, 0, -1): if x % factor == 0 and y % factor == 0: print('%d\u548c%d\u7684\u6700\u5927\u516c\u7ea6\u6570\u662f%d' % (x, y, factor)) print('%d\u548c%d\u7684\u6700\u5c0f\u516c\u500d\u6570\u662f%d' % (x, y, x * y // factor)) break \u7ec3\u4e603\uff1a\u6253\u5370\u4e09\u89d2\u5f62\u56fe\u6848\u3002 \"\"\" \u6253\u5370\u5404\u79cd\u4e09\u89d2\u5f62\u56fe\u6848 * ** *** **** ***** * ** *** **** ***** * *** ***** ******* ********* Version: 0.1 Author: \u9a86\u660a \"\"\" row = int(input('\u8bf7\u8f93\u5165\u884c\u6570: ')) for i in range(row): for _ in range(i + 1): print('*', end='') print() for i in range(row): for j in range(row): if j < row - i - 1: print(' ', end='') else: print('*', end='') print() for i in range(row): for _ in range(row - i - 1): print(' ', end='') for _ in range(2 * i + 1): print('*', end='') print()","title":"\u7b2c\u56db\u5929"},{"location":"new/4%E3%80%81%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#day04-","text":"","title":"Day04 - \u5faa\u73af\u7ed3\u6784"},{"location":"new/4%E3%80%81%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#_1","text":"\u5982\u679c\u5728\u7a0b\u5e8f\u4e2d\u6211\u4eec\u9700\u8981\u91cd\u590d\u7684\u6267\u884c\u67d0\u6761\u6216\u67d0\u4e9b\u6307\u4ee4\uff0c\u4f8b\u5982\u7528\u7a0b\u5e8f\u63a7\u5236\u673a\u5668\u4eba\u8e22\u8db3\u7403\uff0c\u5982\u679c\u673a\u5668\u4eba\u6301\u7403\u800c\u4e14\u8fd8\u6ca1\u6709\u8fdb\u5165\u5c04\u95e8\u8303\u56f4\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u4e00\u76f4\u53d1\u51fa\u8ba9\u673a\u5668\u4eba\u5411\u7403\u95e8\u65b9\u5411\u5954\u8dd1\u7684\u6307\u4ee4\u3002\u5f53\u7136\u4f60\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\u4e86\uff0c\u521a\u624d\u7684\u63cf\u8ff0\u4e2d\u5176\u5b9e\u4e0d\u4ec5\u4ec5\u6709\u9700\u8981\u91cd\u590d\u7684\u52a8\u4f5c\uff0c\u8fd8\u6709\u6211\u4eec\u4e0a\u4e00\u4e2a\u7ae0\u8282\u8bb2\u5230\u7684\u5206\u652f\u7ed3\u6784\u3002\u518d\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u6bd4\u5982\u5728\u6211\u4eec\u7684\u7a0b\u5e8f\u4e2d\u8981\u5b9e\u73b0\u6bcf\u96941\u79d2\u4e2d\u5728\u5c4f\u5e55\u4e0a\u6253\u5370\u4e00\u4e2a\"hello, world\"\u8fd9\u6837\u7684\u5b57\u7b26\u4e32\u5e76\u6301\u7eed\u4e00\u4e2a\u5c0f\u65f6\uff0c\u6211\u4eec\u80af\u5b9a\u4e0d\u80fd\u591f\u5c06 print('hello, world') \u8fd9\u53e5\u4ee3\u7801\u5199\u4e0a3600\u904d\uff0c\u5982\u679c\u771f\u7684\u9700\u8981\u8fd9\u6837\u505a\u90a3\u4e48\u7f16\u7a0b\u7684\u5de5\u4f5c\u5c31\u592a\u65e0\u804a\u4e86\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u4e00\u4e0b\u5faa\u73af\u7ed3\u6784\uff0c\u6709\u4e86\u5faa\u73af\u7ed3\u6784\u6211\u4eec\u5c31\u53ef\u4ee5\u8f7b\u677e\u7684\u63a7\u5236\u67d0\u4ef6\u4e8b\u6216\u8005\u67d0\u4e9b\u4e8b\u91cd\u590d\u3001\u91cd\u590d\u3001\u518d\u91cd\u590d\u7684\u53d1\u751f\u3002\u5728Python\u4e2d\u6784\u9020\u5faa\u73af\u7ed3\u6784\u6709\u4e24\u79cd\u505a\u6cd5\uff0c\u4e00\u79cd\u662f for-in \u5faa\u73af\uff0c\u4e00\u79cd\u662f while \u5faa\u73af\u3002","title":"\u5faa\u73af\u7ed3\u6784\u7684\u5e94\u7528\u573a\u666f"},{"location":"new/4%E3%80%81%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#for-in","text":"\u5982\u679c\u660e\u786e\u7684\u77e5\u9053\u5faa\u73af\u6267\u884c\u7684\u6b21\u6570\u6216\u8005\u662f\u8981\u5bf9\u4e00\u4e2a\u5bb9\u5668\u8fdb\u884c\u8fed\u4ee3\uff08\u540e\u9762\u4f1a\u8bb2\u5230\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u63a8\u8350\u4f7f\u7528 for-in \u5faa\u73af\uff0c\u4f8b\u5982\u4e0b\u9762\u4ee3\u7801\u4e2d\u8ba1\u7b97$\\sum_{n=1}^{100}n$\u3002 \"\"\" \u7528for\u5faa\u73af\u5b9e\u73b01~100\u6c42\u548c Version: 0.1 Author: \u9a86\u660a \"\"\" sum = 0 for x in range(101): sum += x print(sum) \u9700\u8981\u8bf4\u660e\u7684\u662f\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684 range \u7c7b\u578b\uff0c range \u53ef\u4ee5\u7528\u6765\u4ea7\u751f\u4e00\u4e2a\u4e0d\u53d8\u7684\u6570\u503c\u5e8f\u5217\uff0c\u800c\u4e14\u8fd9\u4e2a\u5e8f\u5217\u901a\u5e38\u90fd\u662f\u7528\u5728\u5faa\u73af\u4e2d\u7684\uff0c\u4f8b\u5982\uff1a range(101) \u53ef\u4ee5\u4ea7\u751f\u4e00\u4e2a0\u5230100\u7684\u6574\u6570\u5e8f\u5217\u3002 range(1, 100) \u53ef\u4ee5\u4ea7\u751f\u4e00\u4e2a1\u523099\u7684\u6574\u6570\u5e8f\u5217\u3002 range(1, 100, 2) \u53ef\u4ee5\u4ea7\u751f\u4e00\u4e2a1\u523099\u7684\u5947\u6570\u5e8f\u5217\uff0c\u5176\u4e2d\u76842\u662f\u6b65\u957f\uff0c\u5373\u6570\u503c\u5e8f\u5217\u7684\u589e\u91cf\u3002 \u77e5\u9053\u4e86\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u5b9e\u73b01~100\u4e4b\u95f4\u7684\u5076\u6570\u6c42\u548c\u3002 \"\"\" \u7528for\u5faa\u73af\u5b9e\u73b01~100\u4e4b\u95f4\u7684\u5076\u6570\u6c42\u548c Version: 0.1 Author: \u9a86\u660a \"\"\" sum = 0 for x in range(2, 101, 2): sum += x print(sum) \u4e5f\u53ef\u4ee5\u901a\u8fc7\u5728\u5faa\u73af\u4e2d\u4f7f\u7528\u5206\u652f\u7ed3\u6784\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u76f8\u540c\u7684\u529f\u80fd\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 \"\"\" \u7528for\u5faa\u73af\u5b9e\u73b01~100\u4e4b\u95f4\u7684\u5076\u6570\u6c42\u548c Version: 0.1 Author: \u9a86\u660a \"\"\" sum = 0 for x in range(1, 101): if x % 2 == 0: sum += x print(sum)","title":"for-in\u5faa\u73af"},{"location":"new/4%E3%80%81%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#while","text":"\u5982\u679c\u8981\u6784\u9020\u4e0d\u77e5\u9053\u5177\u4f53\u5faa\u73af\u6b21\u6570\u7684\u5faa\u73af\u7ed3\u6784\uff0c\u6211\u4eec\u63a8\u8350\u4f7f\u7528 while \u5faa\u73af\uff0c while \u5faa\u73af\u901a\u8fc7\u4e00\u4e2a\u80fd\u591f\u4ea7\u751f\u6216\u8f6c\u6362\u51fa bool \u503c\u7684\u8868\u8fbe\u5f0f\u6765\u63a7\u5236\u5faa\u73af\uff0c\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a True \u5faa\u73af\u7ee7\u7eed\uff0c\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a False \u5faa\u73af\u7ed3\u675f\u3002\u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u201c\u731c\u6570\u5b57\u201d\u7684\u5c0f\u6e38\u620f\uff08\u8ba1\u7b97\u673a\u51fa\u4e00\u4e2a1~100\u4e4b\u95f4\u7684\u968f\u673a\u6570\uff0c\u4eba\u8f93\u5165\u81ea\u5df1\u731c\u7684\u6570\u5b57\uff0c\u8ba1\u7b97\u673a\u7ed9\u51fa\u5bf9\u5e94\u7684\u63d0\u793a\u4fe1\u606f\uff0c\u76f4\u5230\u4eba\u731c\u51fa\u8ba1\u7b97\u673a\u51fa\u7684\u6570\u5b57\uff09\u6765\u770b\u770b\u5982\u4f55\u4f7f\u7528 while \u5faa\u73af\u3002 \"\"\" \u731c\u6570\u5b57\u6e38\u620f \u8ba1\u7b97\u673a\u51fa\u4e00\u4e2a1~100\u4e4b\u95f4\u7684\u968f\u673a\u6570\u7531\u4eba\u6765\u731c \u8ba1\u7b97\u673a\u6839\u636e\u4eba\u731c\u7684\u6570\u5b57\u5206\u522b\u7ed9\u51fa\u63d0\u793a\u5927\u4e00\u70b9/\u5c0f\u4e00\u70b9/\u731c\u5bf9\u4e86 Version: 0.1 Author: \u9a86\u660a \"\"\" import random answer = random.randint(1, 100) counter = 0 while True: counter += 1 number = int(input('\u8bf7\u8f93\u5165: ')) if number < answer: print('\u5927\u4e00\u70b9') elif number > answer: print('\u5c0f\u4e00\u70b9') else: print('\u606d\u559c\u4f60\u731c\u5bf9\u4e86!') break print('\u4f60\u603b\u5171\u731c\u4e86%d\u6b21' % counter) if counter > 7: print('\u4f60\u7684\u667a\u5546\u4f59\u989d\u660e\u663e\u4e0d\u8db3') \u8bf4\u660e\uff1a \u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86 break \u5173\u952e\u5b57\u6765\u63d0\u524d\u7ec8\u6b62\u5faa\u73af\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f break \u53ea\u80fd\u7ec8\u6b62\u5b83\u6240\u5728\u7684\u90a3\u4e2a\u5faa\u73af\uff0c\u8fd9\u4e00\u70b9\u5728\u4f7f\u7528\u5d4c\u5957\u7684\u5faa\u73af\u7ed3\u6784\uff08\u4e0b\u9762\u4f1a\u8bb2\u5230\uff09\u9700\u8981\u5f15\u8d77\u6ce8\u610f\u3002\u9664\u4e86 break \u4e4b\u5916\uff0c\u8fd8\u6709\u53e6\u4e00\u4e2a\u5173\u952e\u5b57\u662f continue \uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u653e\u5f03\u672c\u6b21\u5faa\u73af\u540e\u7eed\u7684\u4ee3\u7801\u76f4\u63a5\u8ba9\u5faa\u73af\u8fdb\u5165\u4e0b\u4e00\u8f6e\u3002 \u548c\u5206\u652f\u7ed3\u6784\u4e00\u6837\uff0c\u5faa\u73af\u7ed3\u6784\u4e5f\u662f\u53ef\u4ee5\u5d4c\u5957\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u5faa\u73af\u4e2d\u8fd8\u53ef\u4ee5\u6784\u9020\u5faa\u73af\u7ed3\u6784\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u901a\u8fc7\u5d4c\u5957\u7684\u5faa\u73af\u6765\u8f93\u51fa\u4e00\u4e2a\u4e5d\u4e5d\u4e58\u6cd5\u8868\u3002 \"\"\" \u8f93\u51fa\u4e58\u6cd5\u53e3\u8bc0\u8868(\u4e5d\u4e5d\u8868) Version: 0.1 Author: \u9a86\u660a \"\"\" for i in range(1, 10): for j in range(1, i + 1): print('%d*%d=%d' % (i, j, i * j), end='\\t') print()","title":"while\u5faa\u73af"},{"location":"new/4%E3%80%81%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#_2","text":"","title":"\u7ec3\u4e60"},{"location":"new/4%E3%80%81%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#1","text":"\"\"\" \u8f93\u5165\u4e00\u4e2a\u6b63\u6574\u6570\u5224\u65ad\u5b83\u662f\u4e0d\u662f\u7d20\u6570 Version: 0.1 Author: \u9a86\u660a Date: 2018-03-01 \"\"\" from math import sqrt num = int(input('\u8bf7\u8f93\u5165\u4e00\u4e2a\u6b63\u6574\u6570: ')) end = int(sqrt(num)) is_prime = True for x in range(2, end + 1): if num % x == 0: is_prime = False break if is_prime and num != 1: print('%d\u662f\u7d20\u6570' % num) else: print('%d\u4e0d\u662f\u7d20\u6570' % num)","title":"\u7ec3\u4e601\uff1a\u8f93\u5165\u4e00\u4e2a\u6570\u5224\u65ad\u662f\u4e0d\u662f\u7d20\u6570\u3002"},{"location":"new/4%E3%80%81%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#2","text":"\"\"\" \u8f93\u5165\u4e24\u4e2a\u6b63\u6574\u6570\u8ba1\u7b97\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570 Version: 0.1 Author: \u9a86\u660a Date: 2018-03-01 \"\"\" x = int(input('x = ')) y = int(input('y = ')) if x > y: x, y = y, x for factor in range(x, 0, -1): if x % factor == 0 and y % factor == 0: print('%d\u548c%d\u7684\u6700\u5927\u516c\u7ea6\u6570\u662f%d' % (x, y, factor)) print('%d\u548c%d\u7684\u6700\u5c0f\u516c\u500d\u6570\u662f%d' % (x, y, x * y // factor)) break","title":"\u7ec3\u4e602\uff1a\u8f93\u5165\u4e24\u4e2a\u6b63\u6574\u6570\uff0c\u8ba1\u7b97\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570\u3002"},{"location":"new/4%E3%80%81%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#3","text":"\"\"\" \u6253\u5370\u5404\u79cd\u4e09\u89d2\u5f62\u56fe\u6848 * ** *** **** ***** * ** *** **** ***** * *** ***** ******* ********* Version: 0.1 Author: \u9a86\u660a \"\"\" row = int(input('\u8bf7\u8f93\u5165\u884c\u6570: ')) for i in range(row): for _ in range(i + 1): print('*', end='') print() for i in range(row): for j in range(row): if j < row - i - 1: print(' ', end='') else: print('*', end='') print() for i in range(row): for _ in range(row - i - 1): print(' ', end='') for _ in range(2 * i + 1): print('*', end='') print()","title":"\u7ec3\u4e603\uff1a\u6253\u5370\u4e09\u89d2\u5f62\u56fe\u6848\u3002"},{"location":"new/5%E3%80%81%E6%80%BB%E7%BB%93%E5%92%8C%E7%BB%83%E4%B9%A0/","text":"\u7ec3\u4e60 \u7ec3\u4e60\u6e05\u5355 \u5bfb\u627e \u201c\u6c34\u4ed9\u82b1\u6570\u201d \u3002 \u5bfb\u627e \u201c\u5b8c\u7f8e\u6570\u201d \u3002 \u201c\u767e\u94b1\u767e\u9e21\u201d \u95ee\u9898\u3002 \u751f\u6210 \u201c\u6590\u6ce2\u62c9\u5207\u6570\u5217\u201d \u3002 Craps\u8d4c\u535a\u6e38\u620f\u3002","title":"\u7b2c\u4e94\u5929"},{"location":"new/5%E3%80%81%E6%80%BB%E7%BB%93%E5%92%8C%E7%BB%83%E4%B9%A0/#_1","text":"","title":"\u7ec3\u4e60"},{"location":"new/5%E3%80%81%E6%80%BB%E7%BB%93%E5%92%8C%E7%BB%83%E4%B9%A0/#_2","text":"\u5bfb\u627e \u201c\u6c34\u4ed9\u82b1\u6570\u201d \u3002 \u5bfb\u627e \u201c\u5b8c\u7f8e\u6570\u201d \u3002 \u201c\u767e\u94b1\u767e\u9e21\u201d \u95ee\u9898\u3002 \u751f\u6210 \u201c\u6590\u6ce2\u62c9\u5207\u6570\u5217\u201d \u3002 Craps\u8d4c\u535a\u6e38\u620f\u3002","title":"\u7ec3\u4e60\u6e05\u5355"},{"location":"new/6%E3%80%81%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/","text":"\u51fd\u6570\u548c\u6a21\u5757\u7684\u4f7f\u7528 \u5728\u8bb2\u89e3\u672c\u7ae0\u8282\u7684\u5185\u5bb9\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u7814\u7a76\u4e00\u9053\u6570\u5b66\u9898\uff0c\u8bf7\u8bf4\u51fa\u4e0b\u9762\u7684\u65b9\u7a0b\u6709\u591a\u5c11\u7ec4\u6b63\u6574\u6570\u89e3\u3002 $$x_1 + x_2 + x_3 + x_4 = 8$$ \u4e8b\u5b9e\u4e0a\uff0c\u4e0a\u9762\u7684\u95ee\u9898\u7b49\u540c\u4e8e\u5c068\u4e2a\u82f9\u679c\u5206\u6210\u56db\u7ec4\u6bcf\u7ec4\u81f3\u5c11\u4e00\u4e2a\u82f9\u679c\u6709\u591a\u5c11\u79cd\u65b9\u6848\u3002\u60f3\u5230\u8fd9\u4e00\u70b9\u95ee\u9898\u7684\u7b54\u6848\u5c31\u547c\u4e4b\u6b32\u51fa\u4e86\u3002 $$C_M^N =\\frac{M!}{N!(M-N)!}, \\text{(M=7, N=3)} $$ \u53ef\u4ee5\u7528Python\u7684\u7a0b\u5e8f\u6765\u8ba1\u7b97\u51fa\u8fd9\u4e2a\u503c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 \"\"\" \u8f93\u5165M\u548cN\u8ba1\u7b97C(M,N) \"\"\" m = int(input('m = ')) n = int(input('n = ')) fm = 1 for num in range(1, m + 1): fm *= num fn = 1 for num in range(1, n + 1): fn *= num fmn = 1 for num in range(1, m - n + 1): fmn *= num print(fm // fn // fmn) \u51fd\u6570\u7684\u4f5c\u7528 \u4e0d\u77e5\u9053\u5927\u5bb6\u662f\u5426\u6ce8\u610f\u5230\uff0c\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u505a\u4e863\u6b21\u6c42\u9636\u4e58\uff0c\u8fd9\u6837\u7684\u4ee3\u7801\u5b9e\u9645\u4e0a\u5c31\u662f\u91cd\u590d\u4ee3\u7801\u3002\u7f16\u7a0b\u5927\u5e08Martin Fowler\u5148\u751f\u66fe\u7ecf\u8bf4\u8fc7\uff1a\u201c\u4ee3\u7801\u6709\u5f88\u591a\u79cd\u574f\u5473\u9053\uff0c\u91cd\u590d\u662f\u6700\u574f\u7684\u4e00\u79cd\uff01\u201d\uff0c\u8981\u5199\u51fa\u9ad8\u8d28\u91cf\u7684\u4ee3\u7801\u9996\u5148\u8981\u89e3\u51b3\u7684\u5c31\u662f\u91cd\u590d\u4ee3\u7801\u7684\u95ee\u9898\u3002\u5bf9\u4e8e\u4e0a\u9762\u7684\u4ee3\u7801\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8ba1\u7b97\u9636\u4e58\u7684\u529f\u80fd\u5c01\u88c5\u5230\u4e00\u4e2a\u79f0\u4e4b\u4e3a\u201c\u51fd\u6570\u201d\u7684\u529f\u80fd\u6a21\u5757\u4e2d\uff0c\u5728\u9700\u8981\u8ba1\u7b97\u9636\u4e58\u7684\u5730\u65b9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u201c\u8c03\u7528\u201d\u8fd9\u4e2a\u201c\u51fd\u6570\u201d\u5c31\u53ef\u4ee5\u4e86\u3002 \u5b9a\u4e49\u51fd\u6570 \u5728Python\u4e2d\u53ef\u4ee5\u4f7f\u7528 def \u5173\u952e\u5b57\u6765\u5b9a\u4e49\u51fd\u6570\uff0c\u548c\u53d8\u91cf\u4e00\u6837\u6bcf\u4e2a\u51fd\u6570\u4e5f\u6709\u4e00\u4e2a\u54cd\u4eae\u7684\u540d\u5b57\uff0c\u800c\u4e14\u547d\u540d\u89c4\u5219\u8ddf\u53d8\u91cf\u7684\u547d\u540d\u89c4\u5219\u662f\u4e00\u81f4\u7684\u3002\u5728\u51fd\u6570\u540d\u540e\u9762\u7684\u5706\u62ec\u53f7\u4e2d\u53ef\u4ee5\u653e\u7f6e\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u53c2\u6570\uff0c\u8fd9\u4e00\u70b9\u548c\u6570\u5b66\u4e0a\u7684\u51fd\u6570\u975e\u5e38\u76f8\u4f3c\uff0c\u7a0b\u5e8f\u4e2d\u51fd\u6570\u7684\u53c2\u6570\u5c31\u76f8\u5f53\u4e8e\u662f\u6570\u5b66\u4e0a\u8bf4\u7684\u51fd\u6570\u7684\u81ea\u53d8\u91cf\uff0c\u800c\u51fd\u6570\u6267\u884c\u5b8c\u6210\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 return \u5173\u952e\u5b57\u6765\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u8fd9\u76f8\u5f53\u4e8e\u6570\u5b66\u4e0a\u8bf4\u7684\u51fd\u6570\u7684\u56e0\u53d8\u91cf\u3002 \u5728\u4e86\u89e3\u4e86\u5982\u4f55\u5b9a\u4e49\u51fd\u6570\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e0a\u9762\u7684\u4ee3\u7801\u8fdb\u884c\u91cd\u6784\uff0c\u6240\u8c13\u91cd\u6784\u5c31\u662f\u5728\u4e0d\u5f71\u54cd\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u7684\u524d\u63d0\u4e0b\u5bf9\u4ee3\u7801\u7684\u7ed3\u6784\u8fdb\u884c\u8c03\u6574\uff0c\u91cd\u6784\u4e4b\u540e\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 def factorial(num): \"\"\" \u6c42\u9636\u4e58 :param num: \u975e\u8d1f\u6574\u6570 :return: num\u7684\u9636\u4e58 \"\"\" result = 1 for n in range(1, num + 1): result *= n return result m = int(input('m = ')) n = int(input('n = ')) # \u5f53\u9700\u8981\u8ba1\u7b97\u9636\u4e58\u7684\u65f6\u5019\u4e0d\u7528\u518d\u5199\u5faa\u73af\u6c42\u9636\u4e58\u800c\u662f\u76f4\u63a5\u8c03\u7528\u5df2\u7ecf\u5b9a\u4e49\u597d\u7684\u51fd\u6570 print(factorial(m) // factorial(n) // factorial(m - n)) \u8bf4\u660e\uff1a Python\u7684math\u6a21\u5757\u4e2d\u5176\u5b9e\u5df2\u7ecf\u6709\u4e00\u4e2afactorial\u51fd\u6570\u4e86\uff0c\u4e8b\u5b9e\u4e0a\u8981\u8ba1\u7b97\u9636\u4e58\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u73b0\u6210\u7684\u51fd\u6570\u800c\u4e0d\u7528\u81ea\u5df1\u5b9a\u4e49\u3002\u4e0b\u9762\u4f8b\u5b50\u4e2d\u7684\u67d0\u4e9b\u51fd\u6570\u5176\u5b9ePython\u4e2d\u4e5f\u662f\u5185\u7f6e\u4e86\uff0c\u6211\u4eec\u8fd9\u91cc\u662f\u4e3a\u4e86\u8bb2\u89e3\u51fd\u6570\u7684\u5b9a\u4e49\u548c\u4f7f\u7528\u624d\u628a\u5b83\u4eec\u53c8\u5b9e\u73b0\u4e86\u4e00\u904d\uff0c\u5b9e\u9645\u5f00\u53d1\u4e2d\u4e0d\u5efa\u8bae\u505a\u8fd9\u79cd\u4f4e\u7ea7\u7684\u91cd\u590d\u6027\u7684\u5de5\u4f5c\u3002 \u51fd\u6570\u7684\u53c2\u6570 \u51fd\u6570\u662f\u7edd\u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u4e2d\u90fd\u652f\u6301\u7684\u4e00\u4e2a\u4ee3\u7801\u7684\u201c\u6784\u5efa\u5757\u201d\uff0c\u4f46\u662fPython\u4e2d\u7684\u51fd\u6570\u4e0e\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\u8fd8\u662f\u6709\u5f88\u591a\u4e0d\u592a\u76f8\u540c\u7684\u5730\u65b9\uff0c\u5176\u4e2d\u4e00\u4e2a\u663e\u8457\u7684\u533a\u522b\u5c31\u662fPython\u5bf9\u51fd\u6570\u53c2\u6570\u7684\u5904\u7406\u3002\u5728Python\u4e2d\uff0c\u51fd\u6570\u7684\u53c2\u6570\u53ef\u4ee5\u6709\u9ed8\u8ba4\u503c\uff0c\u4e5f\u652f\u6301\u4f7f\u7528\u53ef\u53d8\u53c2\u6570\uff0c\u6240\u4ee5Python\u5e76\u4e0d\u9700\u8981\u50cf\u5176\u4ed6\u8bed\u8a00\u4e00\u6837\u652f\u6301 \u51fd\u6570\u7684\u91cd\u8f7d \uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u7684\u65f6\u5019\u53ef\u4ee5\u8ba9\u5b83\u6709\u591a\u79cd\u4e0d\u540c\u7684\u4f7f\u7528\u65b9\u5f0f\uff0c\u4e0b\u9762\u662f\u4e24\u4e2a\u5c0f\u4f8b\u5b50\u3002 from random import randint def roll_dice(n=2): \"\"\" \u6447\u8272\u5b50 :param n: \u8272\u5b50\u7684\u4e2a\u6570 :return: n\u9897\u8272\u5b50\u70b9\u6570\u4e4b\u548c \"\"\" total = 0 for _ in range(n): total += randint(1, 6) return total def add(a=0, b=0, c=0): return a + b + c # \u5982\u679c\u6ca1\u6709\u6307\u5b9a\u53c2\u6570\u90a3\u4e48\u4f7f\u7528\u9ed8\u8ba4\u503c\u6447\u4e24\u9897\u8272\u5b50 print(roll_dice()) # \u6447\u4e09\u9897\u8272\u5b50 print(roll_dice(3)) print(add()) print(add(1)) print(add(1, 2)) print(add(1, 2, 3)) # \u4f20\u9012\u53c2\u6570\u65f6\u53ef\u4ee5\u4e0d\u6309\u7167\u8bbe\u5b9a\u7684\u987a\u5e8f\u8fdb\u884c\u4f20\u9012 print(add(c=50, a=100, b=200)) \u6211\u4eec\u7ed9\u4e0a\u9762\u4e24\u4e2a\u51fd\u6570\u7684\u53c2\u6570\u90fd\u8bbe\u5b9a\u4e86\u9ed8\u8ba4\u503c\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u5982\u679c\u5728\u8c03\u7528\u51fd\u6570\u7684\u65f6\u5019\u5982\u679c\u6ca1\u6709\u4f20\u5165\u5bf9\u5e94\u53c2\u6570\u7684\u503c\u65f6\u5c06\u4f7f\u7528\u8be5\u53c2\u6570\u7684\u9ed8\u8ba4\u503c\uff0c\u6240\u4ee5\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u6211\u4eec\u53ef\u4ee5\u7528\u5404\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u53bb\u8c03\u7528 add \u51fd\u6570\uff0c\u8fd9\u8ddf\u5176\u4ed6\u5f88\u591a\u8bed\u8a00\u4e2d\u51fd\u6570\u91cd\u8f7d\u7684\u6548\u679c\u662f\u4e00\u81f4\u7684\u3002 \u5176\u5b9e\u4e0a\u9762\u7684 add \u51fd\u6570\u8fd8\u6709\u66f4\u597d\u7684\u5b9e\u73b0\u65b9\u6848\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u80fd\u4f1a\u5bf90\u4e2a\u6216\u591a\u4e2a\u53c2\u6570\u8fdb\u884c\u52a0\u6cd5\u8fd0\u7b97\uff0c\u800c\u5177\u4f53\u6709\u591a\u5c11\u4e2a\u53c2\u6570\u662f\u7531\u8c03\u7528\u8005\u6765\u51b3\u5b9a\uff0c\u6211\u4eec\u4f5c\u4e3a\u51fd\u6570\u7684\u8bbe\u8ba1\u8005\u5bf9\u8fd9\u4e00\u70b9\u662f\u4e00\u65e0\u6240\u77e5\u7684\uff0c\u56e0\u6b64\u5728\u4e0d\u786e\u5b9a\u53c2\u6570\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u53ef\u53d8\u53c2\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 # \u5728\u53c2\u6570\u540d\u524d\u9762\u7684*\u8868\u793aargs\u662f\u4e00\u4e2a\u53ef\u53d8\u53c2\u6570 # \u5373\u5728\u8c03\u7528add\u51fd\u6570\u65f6\u53ef\u4ee5\u4f20\u51650\u4e2a\u6216\u591a\u4e2a\u53c2\u6570 def add(*args): total = 0 for val in args: total += val return total print(add()) print(add(1)) print(add(1, 2)) print(add(1, 2, 3)) print(add(1, 3, 5, 7, 9)) \u7528\u6a21\u5757\u7ba1\u7406\u51fd\u6570 \u5bf9\u4e8e\u4efb\u4f55\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\u6765\u8bf4\uff0c\u7ed9\u53d8\u91cf\u3001\u51fd\u6570\u8fd9\u6837\u7684\u6807\u8bc6\u7b26\u8d77\u540d\u5b57\u90fd\u662f\u4e00\u4e2a\u8ba9\u4eba\u5934\u75bc\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u6211\u4eec\u4f1a\u9047\u5230\u547d\u540d\u51b2\u7a81\u8fd9\u79cd\u5c34\u5c2c\u7684\u60c5\u51b5\u3002\u6700\u7b80\u5355\u7684\u573a\u666f\u5c31\u662f\u5728\u540c\u4e00\u4e2a.py\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86\u4e24\u4e2a\u540c\u540d\u51fd\u6570\uff0c\u7531\u4e8ePython\u6ca1\u6709\u51fd\u6570\u91cd\u8f7d\u7684\u6982\u5ff5\uff0c\u90a3\u4e48\u540e\u9762\u7684\u5b9a\u4e49\u4f1a\u8986\u76d6\u4e4b\u524d\u7684\u5b9a\u4e49\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u4e24\u4e2a\u51fd\u6570\u540c\u540d\u51fd\u6570\u5b9e\u9645\u4e0a\u53ea\u6709\u4e00\u4e2a\u662f\u5b58\u5728\u7684\u3002 def foo(): print('hello, world!') def foo(): print('goodbye, world!') # \u4e0b\u9762\u7684\u4ee3\u7801\u4f1a\u8f93\u51fa\u4ec0\u4e48\u5462\uff1f foo() \u5f53\u7136\u4e0a\u9762\u7684\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u80fd\u907f\u514d\uff0c\u4f46\u662f\u5982\u679c\u9879\u76ee\u662f\u7531\u591a\u4eba\u534f\u4f5c\u8fdb\u884c\u56e2\u961f\u5f00\u53d1\u7684\u65f6\u5019\uff0c\u56e2\u961f\u4e2d\u53ef\u80fd\u6709\u591a\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5b9a\u4e49\u4e86\u540d\u4e3a foo \u7684\u51fd\u6570\uff0c\u90a3\u4e48\u600e\u4e48\u89e3\u51b3\u8fd9\u79cd\u547d\u540d\u51b2\u7a81\u5462\uff1f\u7b54\u6848\u5176\u5b9e\u5f88\u7b80\u5355\uff0cPython\u4e2d\u6bcf\u4e2a\u6587\u4ef6\u5c31\u4ee3\u8868\u4e86\u4e00\u4e2a\u6a21\u5757\uff08module\uff09\uff0c\u6211\u4eec\u5728\u4e0d\u540c\u7684\u6a21\u5757\u4e2d\u53ef\u4ee5\u6709\u540c\u540d\u7684\u51fd\u6570\uff0c\u5728\u4f7f\u7528\u51fd\u6570\u7684\u65f6\u5019\u6211\u4eec\u901a\u8fc7 import \u5173\u952e\u5b57\u5bfc\u5165\u6307\u5b9a\u7684\u6a21\u5757\u5c31\u53ef\u4ee5\u533a\u5206\u5230\u5e95\u8981\u4f7f\u7528\u7684\u662f\u54ea\u4e2a\u6a21\u5757\u4e2d\u7684 foo \u51fd\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 module1.py def foo(): print('hello, world!') module2.py def foo(): print('goodbye, world!') test.py from module1 import foo # \u8f93\u51fahello, world! foo() from module2 import foo # \u8f93\u51fagoodbye, world! foo() \u4e5f\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u6240\u793a\u7684\u65b9\u5f0f\u6765\u533a\u5206\u5230\u5e95\u8981\u4f7f\u7528\u54ea\u4e00\u4e2a foo \u51fd\u6570\u3002 test.py import module1 as m1 import module2 as m2 m1.foo() m2.foo() \u4f46\u662f\u5982\u679c\u5c06\u4ee3\u7801\u5199\u6210\u4e86\u4e0b\u9762\u7684\u6837\u5b50\uff0c\u90a3\u4e48\u7a0b\u5e8f\u4e2d\u8c03\u7528\u7684\u662f\u6700\u540e\u5bfc\u5165\u7684\u90a3\u4e2a foo \uff0c\u56e0\u4e3a\u540e\u5bfc\u5165\u7684foo\u8986\u76d6\u4e86\u4e4b\u524d\u5bfc\u5165\u7684 foo \u3002 test.py from module1 import foo from module2 import foo # \u8f93\u51fagoodbye, world! foo() test.py from module2 import foo from module1 import foo # \u8f93\u51fahello, world! foo() \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u5982\u679c\u6211\u4eec\u5bfc\u5165\u7684\u6a21\u5757\u9664\u4e86\u5b9a\u4e49\u51fd\u6570\u4e4b\u5916\u8fd8\u4e2d\u6709\u53ef\u4ee5\u6267\u884c\u4ee3\u7801\uff0c\u90a3\u4e48Python\u89e3\u91ca\u5668\u5728\u5bfc\u5165\u8fd9\u4e2a\u6a21\u5757\u65f6\u5c31\u4f1a\u6267\u884c\u8fd9\u4e9b\u4ee3\u7801\uff0c\u4e8b\u5b9e\u4e0a\u6211\u4eec\u53ef\u80fd\u5e76\u4e0d\u5e0c\u671b\u5982\u6b64\uff0c\u56e0\u6b64\u5982\u679c\u6211\u4eec\u5728\u6a21\u5757\u4e2d\u7f16\u5199\u4e86\u6267\u884c\u4ee3\u7801\uff0c\u6700\u597d\u662f\u5c06\u8fd9\u4e9b\u6267\u884c\u4ee3\u7801\u653e\u5165\u5982\u4e0b\u6240\u793a\u7684\u6761\u4ef6\u4e2d\uff0c\u8fd9\u6837\u7684\u8bdd\u9664\u975e\u76f4\u63a5\u8fd0\u884c\u8be5\u6a21\u5757\uff0cif\u6761\u4ef6\u4e0b\u7684\u8fd9\u4e9b\u4ee3\u7801\u662f\u4e0d\u4f1a\u6267\u884c\u7684\uff0c\u56e0\u4e3a\u53ea\u6709\u76f4\u63a5\u6267\u884c\u7684\u6a21\u5757\u7684\u540d\u5b57\u624d\u662f\u201c__main__\u201d\u3002 module3.py def foo(): pass def bar(): pass # __name__\u662fPython\u4e2d\u4e00\u4e2a\u9690\u542b\u7684\u53d8\u91cf\u5b83\u4ee3\u8868\u4e86\u6a21\u5757\u7684\u540d\u5b57 # \u53ea\u6709\u88abPython\u89e3\u91ca\u5668\u76f4\u63a5\u6267\u884c\u7684\u6a21\u5757\u7684\u540d\u5b57\u624d\u662f__main__ if __name__ == '__main__': print('call foo()') foo() print('call bar()') bar() test.py import module3 # \u5bfc\u5165module3\u65f6 \u4e0d\u4f1a\u6267\u884c\u6a21\u5757\u4e2dif\u6761\u4ef6\u6210\u7acb\u65f6\u7684\u4ee3\u7801 \u56e0\u4e3a\u6a21\u5757\u7684\u540d\u5b57\u662fmodule3\u800c\u4e0d\u662f__main__ \u7ec3\u4e60 \u7ec3\u4e601\uff1a\u5b9e\u73b0\u8ba1\u7b97\u6c42\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570\u7684\u51fd\u6570\u3002 def gcd(x, y): (x, y) = (y, x) if x > y else (x, y) for factor in range(x, 0, -1): if x % factor == 0 and y % factor == 0: return factor def lcm(x, y): return x * y // gcd(x, y) \u7ec3\u4e602\uff1a\u5b9e\u73b0\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u4e0d\u662f\u56de\u6587\u6570\u7684\u51fd\u6570\u3002 def is_palindrome(num): temp = num total = 0 while temp > 0: total = total * 10 + temp % 10 temp //= 10 return total == num \u7ec3\u4e603\uff1a\u5b9e\u73b0\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u4e0d\u662f\u7d20\u6570\u7684\u51fd\u6570\u3002 def is_prime(num): for factor in range(2, num): if num % factor == 0: return False return True if num != 1 else False \u7ec3\u4e604\uff1a\u5199\u4e00\u4e2a\u7a0b\u5e8f\u5224\u65ad\u8f93\u5165\u7684\u6b63\u6574\u6570\u662f\u4e0d\u662f\u56de\u6587\u7d20\u6570\u3002 if __name__ == '__main__': num = int(input('\u8bf7\u8f93\u5165\u6b63\u6574\u6570: ')) if is_palindrome(num) and is_prime(num): print('%d\u662f\u56de\u6587\u7d20\u6570' % num) \u901a\u8fc7\u4e0a\u9762\u7684\u7a0b\u5e8f\u53ef\u4ee5\u770b\u51fa\uff0c\u5f53\u6211\u4eec\u5c06\u4ee3\u7801\u4e2d\u91cd\u590d\u51fa\u73b0\u7684\u548c\u76f8\u5bf9\u72ec\u7acb\u7684\u529f\u80fd\u62bd\u53d6\u6210\u51fd\u6570\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u7ec4\u5408\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u6765\u89e3\u51b3\u66f4\u4e3a\u590d\u6742\u7684\u95ee\u9898\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u5b9a\u4e49\u548c\u4f7f\u7528\u51fd\u6570\u7684\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u539f\u56e0\u3002 \u6700\u540e\uff0c\u6211\u4eec\u6765\u8ba8\u8bba\u4e00\u4e0bPython\u4e2d\u6709\u5173\u53d8\u91cf\u4f5c\u7528\u57df\u7684\u95ee\u9898\u3002 def foo(): b = 'hello' def bar(): # Python\u4e2d\u53ef\u4ee5\u5728\u51fd\u6570\u5185\u90e8\u518d\u5b9a\u4e49\u51fd\u6570 c = True print(a) print(b) print(c) bar() # print(c) # NameError: name 'c' is not defined if __name__ == '__main__': a = 100 # print(b) # NameError: name 'b' is not defined foo() \u4e0a\u9762\u7684\u4ee3\u7801\u80fd\u591f\u987a\u5229\u7684\u6267\u884c\u5e76\u4e14\u6253\u5370\u51fa100\u548c\u201chello\u201d\uff0c\u4f46\u6211\u4eec\u6ce8\u610f\u5230\u4e86\uff0c\u5728 bar \u51fd\u6570\u7684\u5185\u90e8\u5e76\u6ca1\u6709\u5b9a\u4e49 a \u548c b \u4e24\u4e2a\u53d8\u91cf\uff0c\u90a3\u4e48 a \u548c b \u662f\u4ece\u54ea\u91cc\u6765\u7684\u3002\u6211\u4eec\u5728\u4e0a\u9762\u4ee3\u7801\u7684 if \u5206\u652f\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d8\u91cf a \uff0c\u8fd9\u662f\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff08global variable\uff09\uff0c\u5c5e\u4e8e\u5168\u5c40\u4f5c\u7528\u57df\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u5b9a\u4e49\u5728\u4efb\u4f55\u4e00\u4e2a\u51fd\u6570\u4e2d\u3002\u5728\u4e0a\u9762\u7684 foo \u51fd\u6570\u4e2d\u6211\u4eec\u5b9a\u4e49\u4e86\u53d8\u91cf b \uff0c\u8fd9\u662f\u4e00\u4e2a\u5b9a\u4e49\u5728\u51fd\u6570\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf\uff08local variable\uff09\uff0c\u5c5e\u4e8e\u5c40\u90e8\u4f5c\u7528\u57df\uff0c\u5728 foo \u51fd\u6570\u7684\u5916\u90e8\u5e76\u4e0d\u80fd\u8bbf\u95ee\u5230\u5b83\uff1b\u4f46\u5bf9\u4e8e foo \u51fd\u6570\u5185\u90e8\u7684 bar \u51fd\u6570\u6765\u8bf4\uff0c\u53d8\u91cf b \u5c5e\u4e8e\u5d4c\u5957\u4f5c\u7528\u57df\uff0c\u5728 bar \u51fd\u6570\u4e2d\u6211\u4eec\u662f\u53ef\u4ee5\u8bbf\u95ee\u5230\u5b83\u7684\u3002 bar \u51fd\u6570\u4e2d\u7684\u53d8\u91cf c \u5c5e\u4e8e\u5c40\u90e8\u4f5c\u7528\u57df\uff0c\u5728 bar \u51fd\u6570\u4e4b\u5916\u662f\u65e0\u6cd5\u8bbf\u95ee\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0cPython\u67e5\u627e\u4e00\u4e2a\u53d8\u91cf\u65f6\u4f1a\u6309\u7167\u201c\u5c40\u90e8\u4f5c\u7528\u57df\u201d\u3001\u201c\u5d4c\u5957\u4f5c\u7528\u57df\u201d\u3001\u201c\u5168\u5c40\u4f5c\u7528\u57df\u201d\u548c\u201c\u5185\u7f6e\u4f5c\u7528\u57df\u201d\u7684\u987a\u5e8f\u8fdb\u884c\u641c\u7d22\uff0c\u524d\u4e09\u8005\u6211\u4eec\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u5df2\u7ecf\u770b\u5230\u4e86\uff0c\u6240\u8c13\u7684\u201c\u5185\u7f6e\u4f5c\u7528\u57df\u201d\u5c31\u662fPython\u5185\u7f6e\u7684\u90a3\u4e9b\u9690\u542b\u6807\u8bc6\u7b26 min \u3001 len \u7b49\u90fd\u5c5e\u4e8e\u5185\u7f6e\u4f5c\u7528\u57df\uff09\u3002 \u518d\u770b\u770b\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\uff0c\u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u51fd\u6570\u8c03\u7528\u4fee\u6539\u5168\u5c40\u53d8\u91cf a \u7684\u503c\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u505a\u4e0d\u5230\u7684\u3002 def foo(): a = 200 print(a) # 200 if __name__ == '__main__': a = 100 foo() print(a) # 100 \u5728\u8c03\u7528 foo \u51fd\u6570\u540e\uff0c\u6211\u4eec\u53d1\u73b0 a \u7684\u503c\u4ecd\u7136\u662f100\uff0c\u8fd9\u662f\u56e0\u4e3a\u5f53\u6211\u4eec\u5728\u51fd\u6570 foo \u4e2d\u5199 a = 200 \u7684\u65f6\u5019\uff0c\u662f\u91cd\u65b0\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u5b57\u4e3a a \u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u5b83\u8ddf\u5168\u5c40\u4f5c\u7528\u57df\u7684 a \u5e76\u4e0d\u662f\u540c\u4e00\u4e2a\u53d8\u91cf\uff0c\u56e0\u4e3a\u5c40\u90e8\u4f5c\u7528\u57df\u4e2d\u6709\u4e86\u81ea\u5df1\u7684\u53d8\u91cf a \uff0c\u56e0\u6b64 foo \u51fd\u6570\u4e0d\u518d\u641c\u7d22\u5168\u5c40\u4f5c\u7528\u57df\u4e2d\u7684 a \u3002\u5982\u679c\u6211\u4eec\u5e0c\u671b\u5728 foo \u51fd\u6570\u4e2d\u4fee\u6539\u5168\u5c40\u4f5c\u7528\u57df\u4e2d\u7684 a \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 def foo(): global a a = 200 print(a) # 200 if __name__ == '__main__': a = 100 foo() print(a) # 200 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 global \u5173\u952e\u5b57\u6765\u6307\u793a foo \u51fd\u6570\u4e2d\u7684\u53d8\u91cf a \u6765\u81ea\u4e8e\u5168\u5c40\u4f5c\u7528\u57df\uff0c\u5982\u679c\u5168\u5c40\u4f5c\u7528\u57df\u4e2d\u6ca1\u6709 a \uff0c\u90a3\u4e48\u4e0b\u9762\u4e00\u884c\u7684\u4ee3\u7801\u5c31\u4f1a\u5b9a\u4e49\u53d8\u91cf a \u5e76\u5c06\u5176\u7f6e\u4e8e\u5168\u5c40\u4f5c\u7528\u57df\u3002\u540c\u7406\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u51fd\u6570\u5185\u90e8\u7684\u51fd\u6570\u80fd\u591f\u4fee\u6539\u5d4c\u5957\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf\uff0c\u53ef\u4ee5\u4f7f\u7528 nonlocal \u5173\u952e\u5b57\u6765\u6307\u793a\u53d8\u91cf\u6765\u81ea\u4e8e\u5d4c\u5957\u4f5c\u7528\u57df\uff0c\u8bf7\u5927\u5bb6\u81ea\u884c\u8bd5\u9a8c\u3002 \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u51cf\u5c11\u5bf9\u5168\u5c40\u53d8\u91cf\u7684\u4f7f\u7528\uff0c\u56e0\u4e3a\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u548c\u5f71\u54cd\u8fc7\u4e8e\u5e7f\u6cdb\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u610f\u6599\u4e4b\u5916\u7684\u4fee\u6539\u548c\u4f7f\u7528\uff0c\u9664\u6b64\u4e4b\u5916\u5168\u5c40\u53d8\u91cf\u6bd4\u5c40\u90e8\u53d8\u91cf\u62e5\u6709\u66f4\u957f\u7684\u751f\u547d\u5468\u671f\uff0c\u53ef\u80fd\u5bfc\u81f4\u5bf9\u8c61\u5360\u7528\u7684\u5185\u5b58\u957f\u65f6\u95f4\u65e0\u6cd5\u88ab \u5783\u573e\u56de\u6536 \u3002\u4e8b\u5b9e\u4e0a\uff0c\u51cf\u5c11\u5bf9\u5168\u5c40\u53d8\u91cf\u7684\u4f7f\u7528\uff0c\u4e5f\u662f\u964d\u4f4e\u4ee3\u7801\u4e4b\u95f4\u8026\u5408\u5ea6\u7684\u4e00\u4e2a\u91cd\u8981\u4e3e\u63aa\uff0c\u540c\u65f6\u4e5f\u662f\u5bf9 \u8fea\u7c73\u7279\u6cd5\u5219 \u7684\u8df5\u884c\u3002\u51cf\u5c11\u5168\u5c40\u53d8\u91cf\u7684\u4f7f\u7528\u5c31\u610f\u5473\u7740\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u8ba9\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5728\u51fd\u6570\u7684\u5185\u90e8\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u5e0c\u671b\u5c06\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u5ef6\u957f\uff0c\u4f7f\u5176\u5728\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\u4f9d\u7136\u53ef\u4ee5\u8bbf\u95ee\uff0c\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u4f7f\u7528 \u95ed\u5305 \uff0c\u8fd9\u4e2a\u6211\u4eec\u5728\u540e\u7eed\u7684\u5185\u5bb9\u4e2d\u8fdb\u884c\u8bb2\u89e3\u3002 \u8bf4\u660e \uff1a\u5f88\u591a\u4eba\u7ecf\u5e38\u4f1a\u5c06\u201c\u95ed\u5305\u201d\u4e00\u8bcd\u548c \u201c\u533f\u540d\u51fd\u6570\u201d \u6df7\u4e3a\u4e00\u8c08\uff0c\u4f46\u5b9e\u9645\u4e0a\u5b83\u4eec\u662f\u4e0d\u540c\u7684\u6982\u5ff5\uff0c\u5982\u679c\u60f3\u63d0\u524d\u4e86\u89e3\u8fd9\u4e2a\u6982\u5ff5\uff0c\u63a8\u8350\u770b\u770b \u7ef4\u57fa\u767e\u79d1 \u6216\u8005 \u77e5\u4e4e \u4e0a\u5bf9\u8fd9\u4e2a\u6982\u5ff5\u7684\u8ba8\u8bba\u3002 \u8bf4\u4e86\u90a3\u4e48\u591a\uff0c\u5176\u5b9e\u7ed3\u8bba\u5f88\u7b80\u5355\uff0c\u4ece\u73b0\u5728\u5f00\u59cb\u6211\u4eec\u53ef\u4ee5\u5c06Python\u4ee3\u7801\u6309\u7167\u4e0b\u9762\u7684\u683c\u5f0f\u8fdb\u884c\u4e66\u5199\uff0c\u8fd9\u4e00\u70b9\u70b9\u7684\u6539\u8fdb\u5176\u5b9e\u5c31\u662f\u5728\u6211\u4eec\u7406\u89e3\u4e86\u51fd\u6570\u548c\u4f5c\u7528\u57df\u7684\u57fa\u7840\u4e0a\u8de8\u51fa\u7684\u5de8\u5927\u7684\u4e00\u6b65\u3002 def main(): # Todo: Add your code here pass if __name__ == '__main__': main()","title":"\u7b2c\u516d\u5929"},{"location":"new/6%E3%80%81%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/#_1","text":"\u5728\u8bb2\u89e3\u672c\u7ae0\u8282\u7684\u5185\u5bb9\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u7814\u7a76\u4e00\u9053\u6570\u5b66\u9898\uff0c\u8bf7\u8bf4\u51fa\u4e0b\u9762\u7684\u65b9\u7a0b\u6709\u591a\u5c11\u7ec4\u6b63\u6574\u6570\u89e3\u3002 $$x_1 + x_2 + x_3 + x_4 = 8$$ \u4e8b\u5b9e\u4e0a\uff0c\u4e0a\u9762\u7684\u95ee\u9898\u7b49\u540c\u4e8e\u5c068\u4e2a\u82f9\u679c\u5206\u6210\u56db\u7ec4\u6bcf\u7ec4\u81f3\u5c11\u4e00\u4e2a\u82f9\u679c\u6709\u591a\u5c11\u79cd\u65b9\u6848\u3002\u60f3\u5230\u8fd9\u4e00\u70b9\u95ee\u9898\u7684\u7b54\u6848\u5c31\u547c\u4e4b\u6b32\u51fa\u4e86\u3002 $$C_M^N =\\frac{M!}{N!(M-N)!}, \\text{(M=7, N=3)} $$ \u53ef\u4ee5\u7528Python\u7684\u7a0b\u5e8f\u6765\u8ba1\u7b97\u51fa\u8fd9\u4e2a\u503c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 \"\"\" \u8f93\u5165M\u548cN\u8ba1\u7b97C(M,N) \"\"\" m = int(input('m = ')) n = int(input('n = ')) fm = 1 for num in range(1, m + 1): fm *= num fn = 1 for num in range(1, n + 1): fn *= num fmn = 1 for num in range(1, m - n + 1): fmn *= num print(fm // fn // fmn)","title":"\u51fd\u6570\u548c\u6a21\u5757\u7684\u4f7f\u7528"},{"location":"new/6%E3%80%81%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/#_2","text":"\u4e0d\u77e5\u9053\u5927\u5bb6\u662f\u5426\u6ce8\u610f\u5230\uff0c\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u505a\u4e863\u6b21\u6c42\u9636\u4e58\uff0c\u8fd9\u6837\u7684\u4ee3\u7801\u5b9e\u9645\u4e0a\u5c31\u662f\u91cd\u590d\u4ee3\u7801\u3002\u7f16\u7a0b\u5927\u5e08Martin Fowler\u5148\u751f\u66fe\u7ecf\u8bf4\u8fc7\uff1a\u201c\u4ee3\u7801\u6709\u5f88\u591a\u79cd\u574f\u5473\u9053\uff0c\u91cd\u590d\u662f\u6700\u574f\u7684\u4e00\u79cd\uff01\u201d\uff0c\u8981\u5199\u51fa\u9ad8\u8d28\u91cf\u7684\u4ee3\u7801\u9996\u5148\u8981\u89e3\u51b3\u7684\u5c31\u662f\u91cd\u590d\u4ee3\u7801\u7684\u95ee\u9898\u3002\u5bf9\u4e8e\u4e0a\u9762\u7684\u4ee3\u7801\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8ba1\u7b97\u9636\u4e58\u7684\u529f\u80fd\u5c01\u88c5\u5230\u4e00\u4e2a\u79f0\u4e4b\u4e3a\u201c\u51fd\u6570\u201d\u7684\u529f\u80fd\u6a21\u5757\u4e2d\uff0c\u5728\u9700\u8981\u8ba1\u7b97\u9636\u4e58\u7684\u5730\u65b9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u201c\u8c03\u7528\u201d\u8fd9\u4e2a\u201c\u51fd\u6570\u201d\u5c31\u53ef\u4ee5\u4e86\u3002","title":"\u51fd\u6570\u7684\u4f5c\u7528"},{"location":"new/6%E3%80%81%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/#_3","text":"\u5728Python\u4e2d\u53ef\u4ee5\u4f7f\u7528 def \u5173\u952e\u5b57\u6765\u5b9a\u4e49\u51fd\u6570\uff0c\u548c\u53d8\u91cf\u4e00\u6837\u6bcf\u4e2a\u51fd\u6570\u4e5f\u6709\u4e00\u4e2a\u54cd\u4eae\u7684\u540d\u5b57\uff0c\u800c\u4e14\u547d\u540d\u89c4\u5219\u8ddf\u53d8\u91cf\u7684\u547d\u540d\u89c4\u5219\u662f\u4e00\u81f4\u7684\u3002\u5728\u51fd\u6570\u540d\u540e\u9762\u7684\u5706\u62ec\u53f7\u4e2d\u53ef\u4ee5\u653e\u7f6e\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u53c2\u6570\uff0c\u8fd9\u4e00\u70b9\u548c\u6570\u5b66\u4e0a\u7684\u51fd\u6570\u975e\u5e38\u76f8\u4f3c\uff0c\u7a0b\u5e8f\u4e2d\u51fd\u6570\u7684\u53c2\u6570\u5c31\u76f8\u5f53\u4e8e\u662f\u6570\u5b66\u4e0a\u8bf4\u7684\u51fd\u6570\u7684\u81ea\u53d8\u91cf\uff0c\u800c\u51fd\u6570\u6267\u884c\u5b8c\u6210\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 return \u5173\u952e\u5b57\u6765\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u8fd9\u76f8\u5f53\u4e8e\u6570\u5b66\u4e0a\u8bf4\u7684\u51fd\u6570\u7684\u56e0\u53d8\u91cf\u3002 \u5728\u4e86\u89e3\u4e86\u5982\u4f55\u5b9a\u4e49\u51fd\u6570\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e0a\u9762\u7684\u4ee3\u7801\u8fdb\u884c\u91cd\u6784\uff0c\u6240\u8c13\u91cd\u6784\u5c31\u662f\u5728\u4e0d\u5f71\u54cd\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u7684\u524d\u63d0\u4e0b\u5bf9\u4ee3\u7801\u7684\u7ed3\u6784\u8fdb\u884c\u8c03\u6574\uff0c\u91cd\u6784\u4e4b\u540e\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 def factorial(num): \"\"\" \u6c42\u9636\u4e58 :param num: \u975e\u8d1f\u6574\u6570 :return: num\u7684\u9636\u4e58 \"\"\" result = 1 for n in range(1, num + 1): result *= n return result m = int(input('m = ')) n = int(input('n = ')) # \u5f53\u9700\u8981\u8ba1\u7b97\u9636\u4e58\u7684\u65f6\u5019\u4e0d\u7528\u518d\u5199\u5faa\u73af\u6c42\u9636\u4e58\u800c\u662f\u76f4\u63a5\u8c03\u7528\u5df2\u7ecf\u5b9a\u4e49\u597d\u7684\u51fd\u6570 print(factorial(m) // factorial(n) // factorial(m - n)) \u8bf4\u660e\uff1a Python\u7684math\u6a21\u5757\u4e2d\u5176\u5b9e\u5df2\u7ecf\u6709\u4e00\u4e2afactorial\u51fd\u6570\u4e86\uff0c\u4e8b\u5b9e\u4e0a\u8981\u8ba1\u7b97\u9636\u4e58\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u73b0\u6210\u7684\u51fd\u6570\u800c\u4e0d\u7528\u81ea\u5df1\u5b9a\u4e49\u3002\u4e0b\u9762\u4f8b\u5b50\u4e2d\u7684\u67d0\u4e9b\u51fd\u6570\u5176\u5b9ePython\u4e2d\u4e5f\u662f\u5185\u7f6e\u4e86\uff0c\u6211\u4eec\u8fd9\u91cc\u662f\u4e3a\u4e86\u8bb2\u89e3\u51fd\u6570\u7684\u5b9a\u4e49\u548c\u4f7f\u7528\u624d\u628a\u5b83\u4eec\u53c8\u5b9e\u73b0\u4e86\u4e00\u904d\uff0c\u5b9e\u9645\u5f00\u53d1\u4e2d\u4e0d\u5efa\u8bae\u505a\u8fd9\u79cd\u4f4e\u7ea7\u7684\u91cd\u590d\u6027\u7684\u5de5\u4f5c\u3002","title":"\u5b9a\u4e49\u51fd\u6570"},{"location":"new/6%E3%80%81%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/#_4","text":"\u51fd\u6570\u662f\u7edd\u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u4e2d\u90fd\u652f\u6301\u7684\u4e00\u4e2a\u4ee3\u7801\u7684\u201c\u6784\u5efa\u5757\u201d\uff0c\u4f46\u662fPython\u4e2d\u7684\u51fd\u6570\u4e0e\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\u8fd8\u662f\u6709\u5f88\u591a\u4e0d\u592a\u76f8\u540c\u7684\u5730\u65b9\uff0c\u5176\u4e2d\u4e00\u4e2a\u663e\u8457\u7684\u533a\u522b\u5c31\u662fPython\u5bf9\u51fd\u6570\u53c2\u6570\u7684\u5904\u7406\u3002\u5728Python\u4e2d\uff0c\u51fd\u6570\u7684\u53c2\u6570\u53ef\u4ee5\u6709\u9ed8\u8ba4\u503c\uff0c\u4e5f\u652f\u6301\u4f7f\u7528\u53ef\u53d8\u53c2\u6570\uff0c\u6240\u4ee5Python\u5e76\u4e0d\u9700\u8981\u50cf\u5176\u4ed6\u8bed\u8a00\u4e00\u6837\u652f\u6301 \u51fd\u6570\u7684\u91cd\u8f7d \uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u7684\u65f6\u5019\u53ef\u4ee5\u8ba9\u5b83\u6709\u591a\u79cd\u4e0d\u540c\u7684\u4f7f\u7528\u65b9\u5f0f\uff0c\u4e0b\u9762\u662f\u4e24\u4e2a\u5c0f\u4f8b\u5b50\u3002 from random import randint def roll_dice(n=2): \"\"\" \u6447\u8272\u5b50 :param n: \u8272\u5b50\u7684\u4e2a\u6570 :return: n\u9897\u8272\u5b50\u70b9\u6570\u4e4b\u548c \"\"\" total = 0 for _ in range(n): total += randint(1, 6) return total def add(a=0, b=0, c=0): return a + b + c # \u5982\u679c\u6ca1\u6709\u6307\u5b9a\u53c2\u6570\u90a3\u4e48\u4f7f\u7528\u9ed8\u8ba4\u503c\u6447\u4e24\u9897\u8272\u5b50 print(roll_dice()) # \u6447\u4e09\u9897\u8272\u5b50 print(roll_dice(3)) print(add()) print(add(1)) print(add(1, 2)) print(add(1, 2, 3)) # \u4f20\u9012\u53c2\u6570\u65f6\u53ef\u4ee5\u4e0d\u6309\u7167\u8bbe\u5b9a\u7684\u987a\u5e8f\u8fdb\u884c\u4f20\u9012 print(add(c=50, a=100, b=200)) \u6211\u4eec\u7ed9\u4e0a\u9762\u4e24\u4e2a\u51fd\u6570\u7684\u53c2\u6570\u90fd\u8bbe\u5b9a\u4e86\u9ed8\u8ba4\u503c\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u5982\u679c\u5728\u8c03\u7528\u51fd\u6570\u7684\u65f6\u5019\u5982\u679c\u6ca1\u6709\u4f20\u5165\u5bf9\u5e94\u53c2\u6570\u7684\u503c\u65f6\u5c06\u4f7f\u7528\u8be5\u53c2\u6570\u7684\u9ed8\u8ba4\u503c\uff0c\u6240\u4ee5\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u6211\u4eec\u53ef\u4ee5\u7528\u5404\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u53bb\u8c03\u7528 add \u51fd\u6570\uff0c\u8fd9\u8ddf\u5176\u4ed6\u5f88\u591a\u8bed\u8a00\u4e2d\u51fd\u6570\u91cd\u8f7d\u7684\u6548\u679c\u662f\u4e00\u81f4\u7684\u3002 \u5176\u5b9e\u4e0a\u9762\u7684 add \u51fd\u6570\u8fd8\u6709\u66f4\u597d\u7684\u5b9e\u73b0\u65b9\u6848\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u80fd\u4f1a\u5bf90\u4e2a\u6216\u591a\u4e2a\u53c2\u6570\u8fdb\u884c\u52a0\u6cd5\u8fd0\u7b97\uff0c\u800c\u5177\u4f53\u6709\u591a\u5c11\u4e2a\u53c2\u6570\u662f\u7531\u8c03\u7528\u8005\u6765\u51b3\u5b9a\uff0c\u6211\u4eec\u4f5c\u4e3a\u51fd\u6570\u7684\u8bbe\u8ba1\u8005\u5bf9\u8fd9\u4e00\u70b9\u662f\u4e00\u65e0\u6240\u77e5\u7684\uff0c\u56e0\u6b64\u5728\u4e0d\u786e\u5b9a\u53c2\u6570\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u53ef\u53d8\u53c2\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 # \u5728\u53c2\u6570\u540d\u524d\u9762\u7684*\u8868\u793aargs\u662f\u4e00\u4e2a\u53ef\u53d8\u53c2\u6570 # \u5373\u5728\u8c03\u7528add\u51fd\u6570\u65f6\u53ef\u4ee5\u4f20\u51650\u4e2a\u6216\u591a\u4e2a\u53c2\u6570 def add(*args): total = 0 for val in args: total += val return total print(add()) print(add(1)) print(add(1, 2)) print(add(1, 2, 3)) print(add(1, 3, 5, 7, 9))","title":"\u51fd\u6570\u7684\u53c2\u6570"},{"location":"new/6%E3%80%81%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/#_5","text":"\u5bf9\u4e8e\u4efb\u4f55\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\u6765\u8bf4\uff0c\u7ed9\u53d8\u91cf\u3001\u51fd\u6570\u8fd9\u6837\u7684\u6807\u8bc6\u7b26\u8d77\u540d\u5b57\u90fd\u662f\u4e00\u4e2a\u8ba9\u4eba\u5934\u75bc\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u6211\u4eec\u4f1a\u9047\u5230\u547d\u540d\u51b2\u7a81\u8fd9\u79cd\u5c34\u5c2c\u7684\u60c5\u51b5\u3002\u6700\u7b80\u5355\u7684\u573a\u666f\u5c31\u662f\u5728\u540c\u4e00\u4e2a.py\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86\u4e24\u4e2a\u540c\u540d\u51fd\u6570\uff0c\u7531\u4e8ePython\u6ca1\u6709\u51fd\u6570\u91cd\u8f7d\u7684\u6982\u5ff5\uff0c\u90a3\u4e48\u540e\u9762\u7684\u5b9a\u4e49\u4f1a\u8986\u76d6\u4e4b\u524d\u7684\u5b9a\u4e49\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u4e24\u4e2a\u51fd\u6570\u540c\u540d\u51fd\u6570\u5b9e\u9645\u4e0a\u53ea\u6709\u4e00\u4e2a\u662f\u5b58\u5728\u7684\u3002 def foo(): print('hello, world!') def foo(): print('goodbye, world!') # \u4e0b\u9762\u7684\u4ee3\u7801\u4f1a\u8f93\u51fa\u4ec0\u4e48\u5462\uff1f foo() \u5f53\u7136\u4e0a\u9762\u7684\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u80fd\u907f\u514d\uff0c\u4f46\u662f\u5982\u679c\u9879\u76ee\u662f\u7531\u591a\u4eba\u534f\u4f5c\u8fdb\u884c\u56e2\u961f\u5f00\u53d1\u7684\u65f6\u5019\uff0c\u56e2\u961f\u4e2d\u53ef\u80fd\u6709\u591a\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5b9a\u4e49\u4e86\u540d\u4e3a foo \u7684\u51fd\u6570\uff0c\u90a3\u4e48\u600e\u4e48\u89e3\u51b3\u8fd9\u79cd\u547d\u540d\u51b2\u7a81\u5462\uff1f\u7b54\u6848\u5176\u5b9e\u5f88\u7b80\u5355\uff0cPython\u4e2d\u6bcf\u4e2a\u6587\u4ef6\u5c31\u4ee3\u8868\u4e86\u4e00\u4e2a\u6a21\u5757\uff08module\uff09\uff0c\u6211\u4eec\u5728\u4e0d\u540c\u7684\u6a21\u5757\u4e2d\u53ef\u4ee5\u6709\u540c\u540d\u7684\u51fd\u6570\uff0c\u5728\u4f7f\u7528\u51fd\u6570\u7684\u65f6\u5019\u6211\u4eec\u901a\u8fc7 import \u5173\u952e\u5b57\u5bfc\u5165\u6307\u5b9a\u7684\u6a21\u5757\u5c31\u53ef\u4ee5\u533a\u5206\u5230\u5e95\u8981\u4f7f\u7528\u7684\u662f\u54ea\u4e2a\u6a21\u5757\u4e2d\u7684 foo \u51fd\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 module1.py def foo(): print('hello, world!') module2.py def foo(): print('goodbye, world!') test.py from module1 import foo # \u8f93\u51fahello, world! foo() from module2 import foo # \u8f93\u51fagoodbye, world! foo() \u4e5f\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u6240\u793a\u7684\u65b9\u5f0f\u6765\u533a\u5206\u5230\u5e95\u8981\u4f7f\u7528\u54ea\u4e00\u4e2a foo \u51fd\u6570\u3002 test.py import module1 as m1 import module2 as m2 m1.foo() m2.foo() \u4f46\u662f\u5982\u679c\u5c06\u4ee3\u7801\u5199\u6210\u4e86\u4e0b\u9762\u7684\u6837\u5b50\uff0c\u90a3\u4e48\u7a0b\u5e8f\u4e2d\u8c03\u7528\u7684\u662f\u6700\u540e\u5bfc\u5165\u7684\u90a3\u4e2a foo \uff0c\u56e0\u4e3a\u540e\u5bfc\u5165\u7684foo\u8986\u76d6\u4e86\u4e4b\u524d\u5bfc\u5165\u7684 foo \u3002 test.py from module1 import foo from module2 import foo # \u8f93\u51fagoodbye, world! foo() test.py from module2 import foo from module1 import foo # \u8f93\u51fahello, world! foo() \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u5982\u679c\u6211\u4eec\u5bfc\u5165\u7684\u6a21\u5757\u9664\u4e86\u5b9a\u4e49\u51fd\u6570\u4e4b\u5916\u8fd8\u4e2d\u6709\u53ef\u4ee5\u6267\u884c\u4ee3\u7801\uff0c\u90a3\u4e48Python\u89e3\u91ca\u5668\u5728\u5bfc\u5165\u8fd9\u4e2a\u6a21\u5757\u65f6\u5c31\u4f1a\u6267\u884c\u8fd9\u4e9b\u4ee3\u7801\uff0c\u4e8b\u5b9e\u4e0a\u6211\u4eec\u53ef\u80fd\u5e76\u4e0d\u5e0c\u671b\u5982\u6b64\uff0c\u56e0\u6b64\u5982\u679c\u6211\u4eec\u5728\u6a21\u5757\u4e2d\u7f16\u5199\u4e86\u6267\u884c\u4ee3\u7801\uff0c\u6700\u597d\u662f\u5c06\u8fd9\u4e9b\u6267\u884c\u4ee3\u7801\u653e\u5165\u5982\u4e0b\u6240\u793a\u7684\u6761\u4ef6\u4e2d\uff0c\u8fd9\u6837\u7684\u8bdd\u9664\u975e\u76f4\u63a5\u8fd0\u884c\u8be5\u6a21\u5757\uff0cif\u6761\u4ef6\u4e0b\u7684\u8fd9\u4e9b\u4ee3\u7801\u662f\u4e0d\u4f1a\u6267\u884c\u7684\uff0c\u56e0\u4e3a\u53ea\u6709\u76f4\u63a5\u6267\u884c\u7684\u6a21\u5757\u7684\u540d\u5b57\u624d\u662f\u201c__main__\u201d\u3002 module3.py def foo(): pass def bar(): pass # __name__\u662fPython\u4e2d\u4e00\u4e2a\u9690\u542b\u7684\u53d8\u91cf\u5b83\u4ee3\u8868\u4e86\u6a21\u5757\u7684\u540d\u5b57 # \u53ea\u6709\u88abPython\u89e3\u91ca\u5668\u76f4\u63a5\u6267\u884c\u7684\u6a21\u5757\u7684\u540d\u5b57\u624d\u662f__main__ if __name__ == '__main__': print('call foo()') foo() print('call bar()') bar() test.py import module3 # \u5bfc\u5165module3\u65f6 \u4e0d\u4f1a\u6267\u884c\u6a21\u5757\u4e2dif\u6761\u4ef6\u6210\u7acb\u65f6\u7684\u4ee3\u7801 \u56e0\u4e3a\u6a21\u5757\u7684\u540d\u5b57\u662fmodule3\u800c\u4e0d\u662f__main__","title":"\u7528\u6a21\u5757\u7ba1\u7406\u51fd\u6570"},{"location":"new/6%E3%80%81%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/#_6","text":"","title":"\u7ec3\u4e60"},{"location":"new/6%E3%80%81%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/#1","text":"def gcd(x, y): (x, y) = (y, x) if x > y else (x, y) for factor in range(x, 0, -1): if x % factor == 0 and y % factor == 0: return factor def lcm(x, y): return x * y // gcd(x, y)","title":"\u7ec3\u4e601\uff1a\u5b9e\u73b0\u8ba1\u7b97\u6c42\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570\u7684\u51fd\u6570\u3002"},{"location":"new/6%E3%80%81%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/#2","text":"def is_palindrome(num): temp = num total = 0 while temp > 0: total = total * 10 + temp % 10 temp //= 10 return total == num","title":"\u7ec3\u4e602\uff1a\u5b9e\u73b0\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u4e0d\u662f\u56de\u6587\u6570\u7684\u51fd\u6570\u3002"},{"location":"new/6%E3%80%81%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/#3","text":"def is_prime(num): for factor in range(2, num): if num % factor == 0: return False return True if num != 1 else False","title":"\u7ec3\u4e603\uff1a\u5b9e\u73b0\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u4e0d\u662f\u7d20\u6570\u7684\u51fd\u6570\u3002"},{"location":"new/6%E3%80%81%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/#4","text":"if __name__ == '__main__': num = int(input('\u8bf7\u8f93\u5165\u6b63\u6574\u6570: ')) if is_palindrome(num) and is_prime(num): print('%d\u662f\u56de\u6587\u7d20\u6570' % num) \u901a\u8fc7\u4e0a\u9762\u7684\u7a0b\u5e8f\u53ef\u4ee5\u770b\u51fa\uff0c\u5f53\u6211\u4eec\u5c06\u4ee3\u7801\u4e2d\u91cd\u590d\u51fa\u73b0\u7684\u548c\u76f8\u5bf9\u72ec\u7acb\u7684\u529f\u80fd\u62bd\u53d6\u6210\u51fd\u6570\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u7ec4\u5408\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u6765\u89e3\u51b3\u66f4\u4e3a\u590d\u6742\u7684\u95ee\u9898\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u5b9a\u4e49\u548c\u4f7f\u7528\u51fd\u6570\u7684\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u539f\u56e0\u3002 \u6700\u540e\uff0c\u6211\u4eec\u6765\u8ba8\u8bba\u4e00\u4e0bPython\u4e2d\u6709\u5173\u53d8\u91cf\u4f5c\u7528\u57df\u7684\u95ee\u9898\u3002 def foo(): b = 'hello' def bar(): # Python\u4e2d\u53ef\u4ee5\u5728\u51fd\u6570\u5185\u90e8\u518d\u5b9a\u4e49\u51fd\u6570 c = True print(a) print(b) print(c) bar() # print(c) # NameError: name 'c' is not defined if __name__ == '__main__': a = 100 # print(b) # NameError: name 'b' is not defined foo() \u4e0a\u9762\u7684\u4ee3\u7801\u80fd\u591f\u987a\u5229\u7684\u6267\u884c\u5e76\u4e14\u6253\u5370\u51fa100\u548c\u201chello\u201d\uff0c\u4f46\u6211\u4eec\u6ce8\u610f\u5230\u4e86\uff0c\u5728 bar \u51fd\u6570\u7684\u5185\u90e8\u5e76\u6ca1\u6709\u5b9a\u4e49 a \u548c b \u4e24\u4e2a\u53d8\u91cf\uff0c\u90a3\u4e48 a \u548c b \u662f\u4ece\u54ea\u91cc\u6765\u7684\u3002\u6211\u4eec\u5728\u4e0a\u9762\u4ee3\u7801\u7684 if \u5206\u652f\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d8\u91cf a \uff0c\u8fd9\u662f\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff08global variable\uff09\uff0c\u5c5e\u4e8e\u5168\u5c40\u4f5c\u7528\u57df\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u5b9a\u4e49\u5728\u4efb\u4f55\u4e00\u4e2a\u51fd\u6570\u4e2d\u3002\u5728\u4e0a\u9762\u7684 foo \u51fd\u6570\u4e2d\u6211\u4eec\u5b9a\u4e49\u4e86\u53d8\u91cf b \uff0c\u8fd9\u662f\u4e00\u4e2a\u5b9a\u4e49\u5728\u51fd\u6570\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf\uff08local variable\uff09\uff0c\u5c5e\u4e8e\u5c40\u90e8\u4f5c\u7528\u57df\uff0c\u5728 foo \u51fd\u6570\u7684\u5916\u90e8\u5e76\u4e0d\u80fd\u8bbf\u95ee\u5230\u5b83\uff1b\u4f46\u5bf9\u4e8e foo \u51fd\u6570\u5185\u90e8\u7684 bar \u51fd\u6570\u6765\u8bf4\uff0c\u53d8\u91cf b \u5c5e\u4e8e\u5d4c\u5957\u4f5c\u7528\u57df\uff0c\u5728 bar \u51fd\u6570\u4e2d\u6211\u4eec\u662f\u53ef\u4ee5\u8bbf\u95ee\u5230\u5b83\u7684\u3002 bar \u51fd\u6570\u4e2d\u7684\u53d8\u91cf c \u5c5e\u4e8e\u5c40\u90e8\u4f5c\u7528\u57df\uff0c\u5728 bar \u51fd\u6570\u4e4b\u5916\u662f\u65e0\u6cd5\u8bbf\u95ee\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0cPython\u67e5\u627e\u4e00\u4e2a\u53d8\u91cf\u65f6\u4f1a\u6309\u7167\u201c\u5c40\u90e8\u4f5c\u7528\u57df\u201d\u3001\u201c\u5d4c\u5957\u4f5c\u7528\u57df\u201d\u3001\u201c\u5168\u5c40\u4f5c\u7528\u57df\u201d\u548c\u201c\u5185\u7f6e\u4f5c\u7528\u57df\u201d\u7684\u987a\u5e8f\u8fdb\u884c\u641c\u7d22\uff0c\u524d\u4e09\u8005\u6211\u4eec\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u5df2\u7ecf\u770b\u5230\u4e86\uff0c\u6240\u8c13\u7684\u201c\u5185\u7f6e\u4f5c\u7528\u57df\u201d\u5c31\u662fPython\u5185\u7f6e\u7684\u90a3\u4e9b\u9690\u542b\u6807\u8bc6\u7b26 min \u3001 len \u7b49\u90fd\u5c5e\u4e8e\u5185\u7f6e\u4f5c\u7528\u57df\uff09\u3002 \u518d\u770b\u770b\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\uff0c\u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u51fd\u6570\u8c03\u7528\u4fee\u6539\u5168\u5c40\u53d8\u91cf a \u7684\u503c\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u505a\u4e0d\u5230\u7684\u3002 def foo(): a = 200 print(a) # 200 if __name__ == '__main__': a = 100 foo() print(a) # 100 \u5728\u8c03\u7528 foo \u51fd\u6570\u540e\uff0c\u6211\u4eec\u53d1\u73b0 a \u7684\u503c\u4ecd\u7136\u662f100\uff0c\u8fd9\u662f\u56e0\u4e3a\u5f53\u6211\u4eec\u5728\u51fd\u6570 foo \u4e2d\u5199 a = 200 \u7684\u65f6\u5019\uff0c\u662f\u91cd\u65b0\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u5b57\u4e3a a \u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u5b83\u8ddf\u5168\u5c40\u4f5c\u7528\u57df\u7684 a \u5e76\u4e0d\u662f\u540c\u4e00\u4e2a\u53d8\u91cf\uff0c\u56e0\u4e3a\u5c40\u90e8\u4f5c\u7528\u57df\u4e2d\u6709\u4e86\u81ea\u5df1\u7684\u53d8\u91cf a \uff0c\u56e0\u6b64 foo \u51fd\u6570\u4e0d\u518d\u641c\u7d22\u5168\u5c40\u4f5c\u7528\u57df\u4e2d\u7684 a \u3002\u5982\u679c\u6211\u4eec\u5e0c\u671b\u5728 foo \u51fd\u6570\u4e2d\u4fee\u6539\u5168\u5c40\u4f5c\u7528\u57df\u4e2d\u7684 a \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 def foo(): global a a = 200 print(a) # 200 if __name__ == '__main__': a = 100 foo() print(a) # 200 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 global \u5173\u952e\u5b57\u6765\u6307\u793a foo \u51fd\u6570\u4e2d\u7684\u53d8\u91cf a \u6765\u81ea\u4e8e\u5168\u5c40\u4f5c\u7528\u57df\uff0c\u5982\u679c\u5168\u5c40\u4f5c\u7528\u57df\u4e2d\u6ca1\u6709 a \uff0c\u90a3\u4e48\u4e0b\u9762\u4e00\u884c\u7684\u4ee3\u7801\u5c31\u4f1a\u5b9a\u4e49\u53d8\u91cf a \u5e76\u5c06\u5176\u7f6e\u4e8e\u5168\u5c40\u4f5c\u7528\u57df\u3002\u540c\u7406\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u51fd\u6570\u5185\u90e8\u7684\u51fd\u6570\u80fd\u591f\u4fee\u6539\u5d4c\u5957\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf\uff0c\u53ef\u4ee5\u4f7f\u7528 nonlocal \u5173\u952e\u5b57\u6765\u6307\u793a\u53d8\u91cf\u6765\u81ea\u4e8e\u5d4c\u5957\u4f5c\u7528\u57df\uff0c\u8bf7\u5927\u5bb6\u81ea\u884c\u8bd5\u9a8c\u3002 \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u51cf\u5c11\u5bf9\u5168\u5c40\u53d8\u91cf\u7684\u4f7f\u7528\uff0c\u56e0\u4e3a\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u548c\u5f71\u54cd\u8fc7\u4e8e\u5e7f\u6cdb\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u610f\u6599\u4e4b\u5916\u7684\u4fee\u6539\u548c\u4f7f\u7528\uff0c\u9664\u6b64\u4e4b\u5916\u5168\u5c40\u53d8\u91cf\u6bd4\u5c40\u90e8\u53d8\u91cf\u62e5\u6709\u66f4\u957f\u7684\u751f\u547d\u5468\u671f\uff0c\u53ef\u80fd\u5bfc\u81f4\u5bf9\u8c61\u5360\u7528\u7684\u5185\u5b58\u957f\u65f6\u95f4\u65e0\u6cd5\u88ab \u5783\u573e\u56de\u6536 \u3002\u4e8b\u5b9e\u4e0a\uff0c\u51cf\u5c11\u5bf9\u5168\u5c40\u53d8\u91cf\u7684\u4f7f\u7528\uff0c\u4e5f\u662f\u964d\u4f4e\u4ee3\u7801\u4e4b\u95f4\u8026\u5408\u5ea6\u7684\u4e00\u4e2a\u91cd\u8981\u4e3e\u63aa\uff0c\u540c\u65f6\u4e5f\u662f\u5bf9 \u8fea\u7c73\u7279\u6cd5\u5219 \u7684\u8df5\u884c\u3002\u51cf\u5c11\u5168\u5c40\u53d8\u91cf\u7684\u4f7f\u7528\u5c31\u610f\u5473\u7740\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u8ba9\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5728\u51fd\u6570\u7684\u5185\u90e8\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u5e0c\u671b\u5c06\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u5ef6\u957f\uff0c\u4f7f\u5176\u5728\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\u4f9d\u7136\u53ef\u4ee5\u8bbf\u95ee\uff0c\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u4f7f\u7528 \u95ed\u5305 \uff0c\u8fd9\u4e2a\u6211\u4eec\u5728\u540e\u7eed\u7684\u5185\u5bb9\u4e2d\u8fdb\u884c\u8bb2\u89e3\u3002 \u8bf4\u660e \uff1a\u5f88\u591a\u4eba\u7ecf\u5e38\u4f1a\u5c06\u201c\u95ed\u5305\u201d\u4e00\u8bcd\u548c \u201c\u533f\u540d\u51fd\u6570\u201d \u6df7\u4e3a\u4e00\u8c08\uff0c\u4f46\u5b9e\u9645\u4e0a\u5b83\u4eec\u662f\u4e0d\u540c\u7684\u6982\u5ff5\uff0c\u5982\u679c\u60f3\u63d0\u524d\u4e86\u89e3\u8fd9\u4e2a\u6982\u5ff5\uff0c\u63a8\u8350\u770b\u770b \u7ef4\u57fa\u767e\u79d1 \u6216\u8005 \u77e5\u4e4e \u4e0a\u5bf9\u8fd9\u4e2a\u6982\u5ff5\u7684\u8ba8\u8bba\u3002 \u8bf4\u4e86\u90a3\u4e48\u591a\uff0c\u5176\u5b9e\u7ed3\u8bba\u5f88\u7b80\u5355\uff0c\u4ece\u73b0\u5728\u5f00\u59cb\u6211\u4eec\u53ef\u4ee5\u5c06Python\u4ee3\u7801\u6309\u7167\u4e0b\u9762\u7684\u683c\u5f0f\u8fdb\u884c\u4e66\u5199\uff0c\u8fd9\u4e00\u70b9\u70b9\u7684\u6539\u8fdb\u5176\u5b9e\u5c31\u662f\u5728\u6211\u4eec\u7406\u89e3\u4e86\u51fd\u6570\u548c\u4f5c\u7528\u57df\u7684\u57fa\u7840\u4e0a\u8de8\u51fa\u7684\u5de8\u5927\u7684\u4e00\u6b65\u3002 def main(): # Todo: Add your code here pass if __name__ == '__main__': main()","title":"\u7ec3\u4e604\uff1a\u5199\u4e00\u4e2a\u7a0b\u5e8f\u5224\u65ad\u8f93\u5165\u7684\u6b63\u6574\u6570\u662f\u4e0d\u662f\u56de\u6587\u7d20\u6570\u3002"},{"location":"new/7%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","text":"\u5b57\u7b26\u4e32\u548c\u5e38\u7528\u6570\u636e\u7ed3\u6784 \u4f7f\u7528\u5b57\u7b26\u4e32 \u7b2c\u4e8c\u6b21\u4e16\u754c\u5927\u6218\u4fc3\u4f7f\u4e86\u73b0\u4ee3\u7535\u5b50\u8ba1\u7b97\u673a\u7684\u8bde\u751f\uff0c\u5f53\u521d\u7684\u60f3\u6cd5\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u7528\u8ba1\u7b97\u673a\u6765\u8ba1\u7b97\u5bfc\u5f39\u7684\u5f39\u9053\uff0c\u56e0\u6b64\u5728\u8ba1\u7b97\u673a\u521a\u521a\u8bde\u751f\u7684\u90a3\u4e2a\u5e74\u4ee3\uff0c\u8ba1\u7b97\u673a\u5904\u7406\u7684\u4fe1\u606f\u4e3b\u8981\u662f\u6570\u503c\uff0c\u800c\u4e16\u754c\u4e0a\u7684\u7b2c\u4e00\u53f0\u7535\u5b50\u8ba1\u7b97\u673aENIAC\u6bcf\u79d2\u949f\u80fd\u591f\u5b8c\u6210\u7ea65000\u6b21\u6d6e\u70b9\u8fd0\u7b97\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u867d\u7136\u5bf9\u6570\u503c\u8fd0\u7b97\u4ecd\u7136\u662f\u8ba1\u7b97\u673a\u65e5\u5e38\u5de5\u4f5c\u4e2d\u6700\u4e3a\u91cd\u8981\u7684\u4e8b\u60c5\u4e4b\u4e00\uff0c\u4f46\u662f\u4eca\u5929\u7684\u8ba1\u7b97\u673a\u5904\u7406\u5f97\u66f4\u591a\u7684\u6570\u636e\u90fd\u662f\u4ee5\u6587\u672c\u4fe1\u606f\u7684\u65b9\u5f0f\u5b58\u5728\u7684\uff0c\u800cPython\u8868\u793a\u6587\u672c\u4fe1\u606f\u7684\u65b9\u5f0f\u6211\u4eec\u5728\u5f88\u65e9\u4ee5\u524d\u5c31\u8bf4\u8fc7\u4e86\uff0c\u90a3\u5c31\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u3002\u6240\u8c13 \u5b57\u7b26\u4e32 \uff0c\u5c31\u662f\u7531\u96f6\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u6709\u9650\u5e8f\u5217\uff0c\u4e00\u822c\u8bb0\u4e3a $${\\displaystyle s=a_{1}a_{2}\\dots a_{n}(0\\leq n \\leq \\infty)}$$ \u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u4e86\u89e3\u5b57\u7b26\u4e32\u7684\u4f7f\u7528\u3002 def main(): str1 = 'hello, world!' # \u901a\u8fc7len\u51fd\u6570\u8ba1\u7b97\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 print(len(str1)) # 13 # \u83b7\u5f97\u5b57\u7b26\u4e32\u9996\u5b57\u6bcd\u5927\u5199\u7684\u62f7\u8d1d print(str1.capitalize()) # Hello, world! # \u83b7\u5f97\u5b57\u7b26\u4e32\u53d8\u5927\u5199\u540e\u7684\u62f7\u8d1d print(str1.upper()) # HELLO, WORLD! # \u4ece\u5b57\u7b26\u4e32\u4e2d\u67e5\u627e\u5b50\u4e32\u6240\u5728\u4f4d\u7f6e print(str1.find('or')) # 8 print(str1.find('shit')) # -1 # \u4e0efind\u7c7b\u4f3c\u4f46\u627e\u4e0d\u5230\u5b50\u4e32\u65f6\u4f1a\u5f15\u53d1\u5f02\u5e38 # print(str1.index('or')) # print(str1.index('shit')) # \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u5f00\u5934 print(str1.startswith('He')) # False print(str1.startswith('hel')) # True # \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u7ed3\u5c3e print(str1.endswith('!')) # True # \u5c06\u5b57\u7b26\u4e32\u4ee5\u6307\u5b9a\u7684\u5bbd\u5ea6\u5c45\u4e2d\u5e76\u5728\u4e24\u4fa7\u586b\u5145\u6307\u5b9a\u7684\u5b57\u7b26 print(str1.center(50, '*')) # \u5c06\u5b57\u7b26\u4e32\u4ee5\u6307\u5b9a\u7684\u5bbd\u5ea6\u9760\u53f3\u653e\u7f6e\u5de6\u4fa7\u586b\u5145\u6307\u5b9a\u7684\u5b57\u7b26 print(str1.rjust(50, ' ')) str2 = 'abc123456' # \u4ece\u5b57\u7b26\u4e32\u4e2d\u53d6\u51fa\u6307\u5b9a\u4f4d\u7f6e\u7684\u5b57\u7b26(\u4e0b\u6807\u8fd0\u7b97) print(str2[2]) # c # \u5b57\u7b26\u4e32\u5207\u7247(\u4ece\u6307\u5b9a\u7684\u5f00\u59cb\u7d22\u5f15\u5230\u6307\u5b9a\u7684\u7ed3\u675f\u7d22\u5f15) print(str2[2:5]) # c12 print(str2[2:]) # c123456 print(str2[2::2]) # c246 print(str2[::2]) # ac246 print(str2[::-1]) # 654321cba print(str2[-3:-1]) # 45 # \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u7531\u6570\u5b57\u6784\u6210 print(str2.isdigit()) # False # \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u5b57\u6bcd\u6784\u6210 print(str2.isalpha()) # False # \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6570\u5b57\u548c\u5b57\u6bcd\u6784\u6210 print(str2.isalnum()) # True str3 = ' jackfrued@126.com ' print(str3) # \u83b7\u5f97\u5b57\u7b26\u4e32\u4fee\u526a\u5de6\u53f3\u4e24\u4fa7\u7a7a\u683c\u7684\u62f7\u8d1d print(str3.strip()) if __name__ == '__main__': main() \u9664\u4e86\u5b57\u7b26\u4e32\uff0cPython\u8fd8\u5185\u7f6e\u4e86\u591a\u79cd\u7c7b\u578b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5982\u679c\u8981\u5728\u7a0b\u5e8f\u4e2d\u4fdd\u5b58\u548c\u64cd\u4f5c\u6570\u636e\uff0c\u7edd\u5927\u591a\u6570\u65f6\u5019\u53ef\u4ee5\u5229\u7528\u73b0\u6709\u7684\u6570\u636e\u7ed3\u6784\u6765\u5b9e\u73b0\uff0c\u6700\u5e38\u7528\u7684\u5305\u62ec\u5217\u8868\u3001\u5143\u7ec4\u3001\u96c6\u5408\u548c\u5b57\u5178\u3002 \u4f7f\u7528\u5217\u8868 \u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5b9a\u4e49\u5217\u8868\u3001\u4f7f\u7528\u4e0b\u6807\u8bbf\u95ee\u5217\u8868\u5143\u7d20\u4ee5\u53ca\u6dfb\u52a0\u548c\u5220\u9664\u5143\u7d20\u7684\u64cd\u4f5c\u3002 def main(): list1 = [1, 3, 5, 7, 100] print(list1)1, 3, 5, 7, 100 list2 = ['hello'] * 5 print(list2)hello hello hello hello hello # \u8ba1\u7b97\u5217\u8868\u957f\u5ea6(\u5143\u7d20\u4e2a\u6570) print(len(list1))5 # \u4e0b\u6807(\u7d22\u5f15)\u8fd0\u7b97 print(list1[0])1 print(list1[4])7 # print(list1[5]) # IndexError: list index out of range print(list1[-1])100 print(list1[-3])5 list1[2] = 300 print(list1)1 300 5 7 100 # \u6dfb\u52a0\u5143\u7d20 list1.append(200) list1.insert(1, 400) list1 += [1000, 2000] print(list1) print(len(list1)) # \u5220\u9664\u5143\u7d20 list1.remove(3) if 1234 in list1: list1.remove(1234) del list1[0] print(list1) # \u6e05\u7a7a\u5217\u8868\u5143\u7d20 list1.clear() print(list1) if __name__ == '__main__': main() \u548c\u5b57\u7b26\u4e32\u4e00\u6837\uff0c\u5217\u8868\u4e5f\u53ef\u4ee5\u505a\u5207\u7247\u64cd\u4f5c\uff0c\u901a\u8fc7\u5207\u7247\u64cd\u4f5c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u5217\u8868\u7684\u590d\u5236\u6216\u8005\u5c06\u5217\u8868\u4e2d\u7684\u4e00\u90e8\u5206\u53d6\u51fa\u6765\u521b\u5efa\u51fa\u65b0\u7684\u5217\u8868\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 def main(): fruits = ['grape', 'apple', 'strawberry', 'waxberry'] fruits += ['pitaya', 'pear', 'mango'] # \u5faa\u73af\u904d\u5386\u5217\u8868\u5143\u7d20 for fruit in fruits: print(fruit.title(), end=' ') print() # \u5217\u8868\u5207\u7247 fruits2 = fruits[1:4] print(fruits2) # fruit3 = fruits # \u6ca1\u6709\u590d\u5236\u5217\u8868\u53ea\u521b\u5efa\u4e86\u65b0\u7684\u5f15\u7528 # \u53ef\u4ee5\u901a\u8fc7\u5b8c\u6574\u5207\u7247\u64cd\u4f5c\u6765\u590d\u5236\u5217\u8868 fruits3 = fruits[:] print(fruits3) fruits4 = fruits[-3:-1] print(fruits4) # \u53ef\u4ee5\u901a\u8fc7\u53cd\u5411\u5207\u7247\u64cd\u4f5c\u6765\u83b7\u5f97\u5012\u8f6c\u540e\u7684\u5217\u8868\u7684\u62f7\u8d1d fruits5 = fruits[::-1] print(fruits5) if __name__ == '__main__': main() \u4e0b\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\u4e86\u5bf9\u5217\u8868\u7684\u6392\u5e8f\u64cd\u4f5c\u3002 def main(): list1 = ['orange', 'apple', 'zoo', 'internationalization', 'blueberry'] list2 = sorted(list1) # sorted\u51fd\u6570\u8fd4\u56de\u5217\u8868\u6392\u5e8f\u540e\u7684\u62f7\u8d1d\u4e0d\u4f1a\u4fee\u6539\u4f20\u5165\u7684\u5217\u8868 # \u51fd\u6570\u7684\u8bbe\u8ba1\u5c31\u5e94\u8be5\u50cfsorted\u51fd\u6570\u4e00\u6837\u5c3d\u53ef\u80fd\u4e0d\u4ea7\u751f\u526f\u4f5c\u7528 list3 = sorted(list1, reverse=True) # \u901a\u8fc7key\u5173\u952e\u5b57\u53c2\u6570\u6307\u5b9a\u6839\u636e\u5b57\u7b26\u4e32\u957f\u5ea6\u8fdb\u884c\u6392\u5e8f\u800c\u4e0d\u662f\u9ed8\u8ba4\u7684\u5b57\u6bcd\u8868\u987a\u5e8f list4 = sorted(list1, key=len) print(list1) print(list2) print(list3) print(list4) # \u7ed9\u5217\u8868\u5bf9\u8c61\u53d1\u51fa\u6392\u5e8f\u6d88\u606f\u76f4\u63a5\u5728\u5217\u8868\u5bf9\u8c61\u4e0a\u8fdb\u884c\u6392\u5e8f list1.sort(reverse=True) print(list1) if __name__ == '__main__': main() \u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5217\u8868\u7684\u751f\u6210\u5f0f\u8bed\u6cd5\u6765\u521b\u5efa\u5217\u8868\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import sys def main(): f = [x for x in range(1, 10)] print(f) f = [x + y for x in 'ABCDE' for y in '1234567'] print(f) # \u7528\u5217\u8868\u7684\u751f\u6210\u8868\u8fbe\u5f0f\u8bed\u6cd5\u521b\u5efa\u5217\u8868\u5bb9\u5668 # \u7528\u8fd9\u79cd\u8bed\u6cd5\u521b\u5efa\u5217\u8868\u4e4b\u540e\u5143\u7d20\u5df2\u7ecf\u51c6\u5907\u5c31\u7eea\u6240\u4ee5\u9700\u8981\u8017\u8d39\u8f83\u591a\u7684\u5185\u5b58\u7a7a\u95f4 f = [x ** 2 for x in range(1, 1000)] print(sys.getsizeof(f)) # \u67e5\u770b\u5bf9\u8c61\u5360\u7528\u5185\u5b58\u7684\u5b57\u8282\u6570 print(f) # \u8bf7\u6ce8\u610f\u4e0b\u9762\u7684\u4ee3\u7801\u521b\u5efa\u7684\u4e0d\u662f\u4e00\u4e2a\u5217\u8868\u800c\u662f\u4e00\u4e2a\u751f\u6210\u5668\u5bf9\u8c61 # \u901a\u8fc7\u751f\u6210\u5668\u53ef\u4ee5\u83b7\u53d6\u5230\u6570\u636e\u4f46\u5b83\u4e0d\u5360\u7528\u989d\u5916\u7684\u7a7a\u95f4\u5b58\u50a8\u6570\u636e # \u6bcf\u6b21\u9700\u8981\u6570\u636e\u7684\u65f6\u5019\u5c31\u901a\u8fc7\u5185\u90e8\u7684\u8fd0\u7b97\u5f97\u5230\u6570\u636e(\u9700\u8981\u82b1\u8d39\u989d\u5916\u7684\u65f6\u95f4) f = (x ** 2 for x in range(1, 1000)) print(sys.getsizeof(f)) # \u76f8\u6bd4\u751f\u6210\u5f0f\u751f\u6210\u5668\u4e0d\u5360\u7528\u5b58\u50a8\u6570\u636e\u7684\u7a7a\u95f4 print(f) for val in f: print(val) if __name__ == '__main__': main() \u9664\u4e86\u4e0a\u9762\u63d0\u5230\u7684\u751f\u6210\u5668\u8bed\u6cd5\uff0cPython\u4e2d\u8fd8\u6709\u53e6\u5916\u4e00\u79cd\u5b9a\u4e49\u751f\u6210\u5668\u7684\u65b9\u5f0f\uff0c\u5c31\u662f\u901a\u8fc7 yield \u5173\u952e\u5b57\u5c06\u4e00\u4e2a\u666e\u901a\u51fd\u6570\u6539\u9020\u6210\u751f\u6210\u5668\u51fd\u6570\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5b9e\u73b0\u4e00\u4e2a\u751f\u6210 \u6590\u6ce2\u62c9\u5207\u6570\u5217 \u7684\u751f\u6210\u5668\u3002\u6240\u8c13\u6590\u6ce2\u62c9\u5207\u6570\u5217\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762 \u9012\u5f52 \u7684\u65b9\u6cd5\u6765\u8fdb\u884c\u5b9a\u4e49\uff1a $${\\displaystyle F_{0}=0}$$ $${\\displaystyle F_{1}=1}$$ $${\\displaystyle F_{n}=F_{n-1}+F_{n-2}}({n}\\geq{2})$$ def fib(n): a, b = 0, 1 for _ in range(n): a, b = b, a + b yield a def main(): for val in fib(20): print(val) if __name__ == '__main__': main() \u4f7f\u7528\u5143\u7ec4 Python \u7684\u5143\u7ec4\u4e0e\u5217\u8868\u7c7b\u4f3c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5143\u7ec4\u7684\u5143\u7d20\u4e0d\u80fd\u4fee\u6539\uff0c\u5728\u524d\u9762\u7684\u4ee3\u7801\u4e2d\u6211\u4eec\u5df2\u7ecf\u4e0d\u6b62\u4e00\u6b21\u4f7f\u7528\u8fc7\u5143\u7ec4\u4e86\u3002\u987e\u540d\u601d\u4e49\uff0c\u6211\u4eec\u628a\u591a\u4e2a\u5143\u7d20\u7ec4\u5408\u5230\u4e00\u8d77\u5c31\u5f62\u6210\u4e86\u4e00\u4e2a\u5143\u7ec4\uff0c\u6240\u4ee5\u5b83\u548c\u5217\u8868\u4e00\u6837\u53ef\u4ee5\u4fdd\u5b58\u591a\u6761\u6570\u636e\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5b9a\u4e49\u548c\u4f7f\u7528\u5143\u7ec4\u3002 def main(): # \u5b9a\u4e49\u5143\u7ec4 t = ('\u9a86\u660a', 38, True, '\u56db\u5ddd\u6210\u90fd') print(t) # \u83b7\u53d6\u5143\u7ec4\u4e2d\u7684\u5143\u7d20 print(t[0]) print(t[3]) # \u904d\u5386\u5143\u7ec4\u4e2d\u7684\u503c for member in t: print(member) # \u91cd\u65b0\u7ed9\u5143\u7ec4\u8d4b\u503c # t[0] = '\u738b\u5927\u9524' # TypeError # \u53d8\u91cft\u91cd\u65b0\u5f15\u7528\u4e86\u65b0\u7684\u5143\u7ec4\u539f\u6765\u7684\u5143\u7ec4\u5c06\u88ab\u5783\u573e\u56de\u6536 t = ('\u738b\u5927\u9524', 20, True, '\u4e91\u5357\u6606\u660e') print(t) # \u5c06\u5143\u7ec4\u8f6c\u6362\u6210\u5217\u8868 person = list(t) print(person) # \u5217\u8868\u662f\u53ef\u4ee5\u4fee\u6539\u5b83\u7684\u5143\u7d20\u7684 person[0] = '\u674e\u5c0f\u9f99' person[1] = 25 print(person) # \u5c06\u5217\u8868\u8f6c\u6362\u6210\u5143\u7ec4 fruits_list = ['apple', 'banana', 'orange'] fruits_tuple = tuple(fruits_list) print(fruits_tuple) if __name__ == '__main__': main() \u8fd9\u91cc\u6709\u4e00\u4e2a\u975e\u5e38\u503c\u5f97\u63a2\u8ba8\u7684\u95ee\u9898\uff0c\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u5217\u8868\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u9700\u8981\u5143\u7ec4\u8fd9\u6837\u7684\u7c7b\u578b\u5462\uff1f \u5143\u7ec4\u4e2d\u7684\u5143\u7d20\u662f\u65e0\u6cd5\u4fee\u6539\u7684\uff0c\u4e8b\u5b9e\u4e0a\u6211\u4eec\u5728\u9879\u76ee\u4e2d\u5c24\u5176\u662f \u591a\u7ebf\u7a0b \u73af\u5883\uff08\u540e\u9762\u4f1a\u8bb2\u5230\uff09\u4e2d\u53ef\u80fd\u66f4\u559c\u6b22\u4f7f\u7528\u7684\u662f\u90a3\u4e9b\u4e0d\u53d8\u5bf9\u8c61\uff08\u4e00\u65b9\u9762\u56e0\u4e3a\u5bf9\u8c61\u72b6\u6001\u4e0d\u80fd\u4fee\u6539\uff0c\u6240\u4ee5\u53ef\u4ee5\u907f\u514d\u7531\u6b64\u5f15\u8d77\u7684\u4e0d\u5fc5\u8981\u7684\u7a0b\u5e8f\u9519\u8bef\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u4e00\u4e2a\u4e0d\u53d8\u7684\u5bf9\u8c61\u8981\u6bd4\u53ef\u53d8\u7684\u5bf9\u8c61\u66f4\u52a0\u5bb9\u6613\u7ef4\u62a4\uff1b\u53e6\u4e00\u65b9\u9762\u56e0\u4e3a\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u7ebf\u7a0b\u80fd\u591f\u4fee\u6539\u4e0d\u53d8\u5bf9\u8c61\u7684\u5185\u90e8\u72b6\u6001\uff0c\u4e00\u4e2a\u4e0d\u53d8\u5bf9\u8c61\u81ea\u52a8\u5c31\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7701\u6389\u5904\u7406\u540c\u6b65\u5316\u7684\u5f00\u9500\u3002\u4e00\u4e2a\u4e0d\u53d8\u5bf9\u8c61\u53ef\u4ee5\u65b9\u4fbf\u7684\u88ab\u5171\u4eab\u8bbf\u95ee\uff09\u3002\u6240\u4ee5\u7ed3\u8bba\u5c31\u662f\uff1a\u5982\u679c\u4e0d\u9700\u8981\u5bf9\u5143\u7d20\u8fdb\u884c\u6dfb\u52a0\u3001\u5220\u9664\u3001\u4fee\u6539\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5143\u7ec4\uff0c\u5f53\u7136\u5982\u679c\u4e00\u4e2a\u65b9\u6cd5\u8981\u8fd4\u56de\u591a\u4e2a\u503c\uff0c\u4f7f\u7528\u5143\u7ec4\u4e5f\u662f\u4e0d\u9519\u7684\u9009\u62e9\u3002 \u5143\u7ec4\u5728\u521b\u5efa\u65f6\u95f4\u548c\u5360\u7528\u7684\u7a7a\u95f4\u4e0a\u9762\u90fd\u4f18\u4e8e\u5217\u8868\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528sys\u6a21\u5757\u7684getsizeof\u51fd\u6570\u6765\u68c0\u67e5\u5b58\u50a8\u540c\u6837\u7684\u5143\u7d20\u7684\u5143\u7ec4\u548c\u5217\u8868\u5404\u81ea\u5360\u7528\u4e86\u591a\u5c11\u5185\u5b58\u7a7a\u95f4\uff0c\u8fd9\u4e2a\u5f88\u5bb9\u6613\u505a\u5230\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728ipython\u4e2d\u4f7f\u7528\u9b54\u6cd5\u6307\u4ee4%timeit\u6765\u5206\u6790\u521b\u5efa\u540c\u6837\u5185\u5bb9\u7684\u5143\u7ec4\u548c\u5217\u8868\u6240\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u4e0b\u56fe\u662f\u6211\u7684macOS\u7cfb\u7edf\u4e0a\u6d4b\u8bd5\u7684\u7ed3\u679c\u3002 \u4f7f\u7528\u96c6\u5408 Python\u4e2d\u7684\u96c6\u5408\u8ddf\u6570\u5b66\u4e0a\u7684\u96c6\u5408\u662f\u4e00\u81f4\u7684\uff0c\u4e0d\u5141\u8bb8\u6709\u91cd\u590d\u5143\u7d20\uff0c\u800c\u4e14\u53ef\u4ee5\u8fdb\u884c\u4ea4\u96c6\u3001\u5e76\u96c6\u3001\u5dee\u96c6\u7b49\u8fd0\u7b97\u3002 def main(): set1 = {1, 2, 3, 3, 3, 2} print(set1) print('Length =', len(set1)) set2 = set(range(1, 10)) print(set2) set1.add(4) set1.add(5) set2.update([11, 12]) print(set1) print(set2) set2.discard(5) # remove\u7684\u5143\u7d20\u5982\u679c\u4e0d\u5b58\u5728\u4f1a\u5f15\u53d1KeyError if 4 in set2: set2.remove(4) print(set2) # \u904d\u5386\u96c6\u5408\u5bb9\u5668 for elem in set2: print(elem ** 2, end=' ') print() # \u5c06\u5143\u7ec4\u8f6c\u6362\u6210\u96c6\u5408 set3 = set((1, 2, 3, 3, 2, 1)) print(set3.pop()) print(set3) # \u96c6\u5408\u7684\u4ea4\u96c6\u3001\u5e76\u96c6\u3001\u5dee\u96c6\u3001\u5bf9\u79f0\u5dee\u8fd0\u7b97 print(set1 & set2) # print(set1.intersection(set2)) print(set1 | set2) # print(set1.union(set2)) print(set1 - set2) # print(set1.difference(set2)) print(set1 ^ set2) # print(set1.symmetric_difference(set2)) # \u5224\u65ad\u5b50\u96c6\u548c\u8d85\u96c6 print(set2 <= set1) # print(set2.issubset(set1)) print(set3 <= set1) # print(set3.issubset(set1)) print(set1 >= set2) # print(set1.issuperset(set2)) print(set1 >= set3) # print(set1.issuperset(set3)) if __name__ == '__main__': main() \u8bf4\u660e \uff1aPython\u4e2d\u5141\u8bb8\u901a\u8fc7\u4e00\u4e9b\u7279\u6b8a\u7684\u65b9\u6cd5\u6765\u4e3a\u67d0\u79cd\u7c7b\u578b\u6216\u6570\u636e\u7ed3\u6784\u81ea\u5b9a\u4e49\u8fd0\u7b97\u7b26\uff08\u540e\u9762\u7684\u7ae0\u8282\u4e2d\u4f1a\u8bb2\u5230\uff09\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u6211\u4eec\u5bf9\u96c6\u5408\u8fdb\u884c\u8fd0\u7b97\u7684\u65f6\u5019\u53ef\u4ee5\u8c03\u7528\u96c6\u5408\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5bf9\u5e94\u7684\u8fd0\u7b97\u7b26\uff0c\u4f8b\u5982 & \u8fd0\u7b97\u7b26\u8ddfintersection\u65b9\u6cd5\u7684\u4f5c\u7528\u5c31\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u4f7f\u7528\u8fd0\u7b97\u7b26\u8ba9\u4ee3\u7801\u66f4\u52a0\u76f4\u89c2\u3002 \u4f7f\u7528\u5b57\u5178 \u5b57\u5178\u662f\u53e6\u4e00\u79cd\u53ef\u53d8\u5bb9\u5668\u6a21\u578b\uff0c\u7c7b\u4f3c\u4e8e\u6211\u4eec\u751f\u6d3b\u4e2d\u4f7f\u7528\u7684\u5b57\u5178\uff0c\u5b83\u53ef\u4ee5\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u5bf9\u8c61\uff0c\u4e0e\u5217\u8868\u3001\u96c6\u5408\u4e0d\u540c\u7684\u662f\uff0c\u5b57\u5178\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u7531\u4e00\u4e2a\u952e\u548c\u4e00\u4e2a\u503c\u7ec4\u6210\u7684\u201c\u952e\u503c\u5bf9\u201d\uff0c\u952e\u548c\u503c\u901a\u8fc7\u5192\u53f7\u5206\u5f00\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5b9a\u4e49\u548c\u4f7f\u7528\u5b57\u5178\u3002 def main(): scores = {'\u9a86\u660a': 95, '\u767d\u5143\u82b3': 78, '\u72c4\u4ec1\u6770': 82} # \u901a\u8fc7\u952e\u53ef\u4ee5\u83b7\u53d6\u5b57\u5178\u4e2d\u5bf9\u5e94\u7684\u503c print(scores['\u9a86\u660a']) print(scores['\u72c4\u4ec1\u6770']) # \u5bf9\u5b57\u5178\u8fdb\u884c\u904d\u5386(\u904d\u5386\u7684\u5176\u5b9e\u662f\u952e\u518d\u901a\u8fc7\u952e\u53d6\u5bf9\u5e94\u7684\u503c) for elem in scores: print('%s\\t--->\\t%d' % (elem, scores[elem])) # \u66f4\u65b0\u5b57\u5178\u4e2d\u7684\u5143\u7d20 scores['\u767d\u5143\u82b3'] = 65 scores['\u8bf8\u845b\u738b\u6717'] = 71 scores.update(\u51b7\u9762=67, \u65b9\u542f\u9e64=85) print(scores) if '\u6b66\u5219\u5929' in scores: print(scores['\u6b66\u5219\u5929']) print(scores.get('\u6b66\u5219\u5929')) # get\u65b9\u6cd5\u4e5f\u662f\u901a\u8fc7\u952e\u83b7\u53d6\u5bf9\u5e94\u7684\u503c\u4f46\u662f\u53ef\u4ee5\u8bbe\u7f6e\u9ed8\u8ba4\u503c print(scores.get('\u6b66\u5219\u5929', 60)) # \u5220\u9664\u5b57\u5178\u4e2d\u7684\u5143\u7d20 print(scores.popitem()) print(scores.popitem()) print(scores.pop('\u9a86\u660a', 100)) # \u6e05\u7a7a\u5b57\u5178 scores.clear() print(scores) if __name__ == '__main__': main() \u7ec3\u4e60 \u7ec3\u4e601\uff1a\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u8dd1\u9a6c\u706f\u6587\u5b57 import os import time def main(): content = '\u5317\u4eac\u6b22\u8fce\u4f60\u4e3a\u4f60\u5f00\u5929\u8f9f\u5730\u2026\u2026\u2026\u2026' while True: # \u6e05\u7406\u5c4f\u5e55\u4e0a\u7684\u8f93\u51fa os.system('cls') # os.system('clear') print(content) # \u4f11\u7720200\u6beb\u79d2 time.sleep(0.2) content = content[1:] + content[0] if __name__ == '__main__': main() \u7ec3\u4e602\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u51fd\u6570\u4ea7\u751f\u6307\u5b9a\u957f\u5ea6\u7684\u9a8c\u8bc1\u7801\uff0c\u9a8c\u8bc1\u7801\u7531\u5927\u5c0f\u5199\u5b57\u6bcd\u548c\u6570\u5b57\u6784\u6210\u3002 import random def generate_code(code_len=4): \"\"\" \u751f\u6210\u6307\u5b9a\u957f\u5ea6\u7684\u9a8c\u8bc1\u7801 :param code_len: \u9a8c\u8bc1\u7801\u7684\u957f\u5ea6(\u9ed8\u8ba44\u4e2a\u5b57\u7b26) :return: \u7531\u5927\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u548c\u6570\u5b57\u6784\u6210\u7684\u968f\u673a\u9a8c\u8bc1\u7801 \"\"\" all_chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ' last_pos = len(all_chars) - 1 code = '' for _ in range(code_len): index = random.randint(0, last_pos) code += all_chars[index] return code \u7ec3\u4e603\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u7ed9\u5b9a\u6587\u4ef6\u540d\u7684\u540e\u7f00\u540d\u3002 def get_suffix(filename, has_dot=False): \"\"\" \u83b7\u53d6\u6587\u4ef6\u540d\u7684\u540e\u7f00\u540d :param filename: \u6587\u4ef6\u540d :param has_dot: \u8fd4\u56de\u7684\u540e\u7f00\u540d\u662f\u5426\u9700\u8981\u5e26\u70b9 :return: \u6587\u4ef6\u7684\u540e\u7f00\u540d \"\"\" pos = filename.rfind('.') if 0 < pos < len(filename) - 1: index = pos if has_dot else pos + 1 return filename[index:] else: return '' \u7ec3\u4e604\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u4f20\u5165\u7684\u5217\u8868\u4e2d\u6700\u5927\u548c\u7b2c\u4e8c\u5927\u7684\u5143\u7d20\u7684\u503c\u3002 def max2(x): m1, m2 = (x[0], x[1]) if x[0] > x[1] else (x[1], x[0]) for index in range(2, len(x)): if x[index] > m1: m2 = m1 m1 = x[index] elif x[index] > m2: m2 = x[index] return m1, m2 \u7ec3\u4e605\uff1a\u8ba1\u7b97\u6307\u5b9a\u7684\u5e74\u6708\u65e5\u662f\u8fd9\u4e00\u5e74\u7684\u7b2c\u51e0\u5929 def is_leap_year(year): \"\"\" \u5224\u65ad\u6307\u5b9a\u7684\u5e74\u4efd\u662f\u4e0d\u662f\u95f0\u5e74 :param year: \u5e74\u4efd :return: \u95f0\u5e74\u8fd4\u56deTrue\u5e73\u5e74\u8fd4\u56deFalse \"\"\" return year % 4 == 0 and year % 100 != 0 or year % 400 == 0 def which_day(year, month, date): \"\"\" \u8ba1\u7b97\u4f20\u5165\u7684\u65e5\u671f\u662f\u8fd9\u4e00\u5e74\u7684\u7b2c\u51e0\u5929 :param year: \u5e74 :param month: \u6708 :param date: \u65e5 :return: \u7b2c\u51e0\u5929 \"\"\" days_of_month = [ [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31] ][is_leap_year(year)] total = 0 for index in range(month - 1): total += days_of_month[index] return total + date def main(): print(which_day(1980, 11, 28)) print(which_day(1981, 12, 31)) print(which_day(2018, 1, 1)) print(which_day(2016, 3, 1)) if __name__ == '__main__': main() \u7ec3\u4e606\uff1a\u6253\u5370 \u6768\u8f89\u4e09\u89d2 \u3002 def main(): num = int(input('Number of rows: ')) yh = [[]] * num for row in range(len(yh)): yh[row] = [None] * (row + 1) for col in range(len(yh[row])): if col == 0 or col == row: yh[row][col] = 1 else: yh[row][col] = yh[row - 1][col] + yh[row - 1][col - 1] print(yh[row][col], end='\\t') print() if __name__ == '__main__': main() \u7efc\u5408\u6848\u4f8b \u6848\u4f8b1\uff1a\u53cc\u8272\u7403\u9009\u53f7 from random import randrange, randint, sample def display(balls): \"\"\" \u8f93\u51fa\u5217\u8868\u4e2d\u7684\u53cc\u8272\u7403\u53f7\u7801 \"\"\" for index, ball in enumerate(balls): if index == len(balls) - 1: print('|', end=' ') print('%02d' % ball, end=' ') print() def random_select(): \"\"\" \u968f\u673a\u9009\u62e9\u4e00\u7ec4\u53f7\u7801 \"\"\" red_balls = [x for x in range(1, 34)] selected_balls = [] selected_balls = sample(red_balls, 6) selected_balls.sort() selected_balls.append(randint(1, 16)) return selected_balls def main(): n = int(input('\u673a\u9009\u51e0\u6ce8: ')) for _ in range(n): display(random_select()) if __name__ == '__main__': main() \u8bf4\u660e \uff1a\u4e0a\u9762\u4f7f\u7528random\u6a21\u5757\u7684sample\u51fd\u6570\u6765\u5b9e\u73b0\u4ece\u5217\u8868\u4e2d\u9009\u62e9\u4e0d\u91cd\u590d\u7684n\u4e2a\u5143\u7d20\u3002 \u7efc\u5408\u6848\u4f8b2\uff1a \u7ea6\u745f\u592b\u73af\u95ee\u9898 \"\"\" \u300a\u5e78\u8fd0\u7684\u57fa\u7763\u5f92\u300b \u670915\u4e2a\u57fa\u7763\u5f92\u548c15\u4e2a\u975e\u57fa\u7763\u5f92\u5728\u6d77\u4e0a\u9047\u9669\uff0c\u4e3a\u4e86\u80fd\u8ba9\u4e00\u90e8\u5206\u4eba\u6d3b\u4e0b\u6765\u4e0d\u5f97\u4e0d\u5c06\u5176\u4e2d15\u4e2a\u4eba\u6254\u5230\u6d77\u91cc\u9762\u53bb\uff0c\u6709\u4e2a\u4eba\u60f3\u4e86\u4e2a\u529e\u6cd5\u5c31\u662f\u5927\u5bb6\u56f4\u6210\u4e00\u4e2a\u5708\uff0c\u7531\u67d0\u4e2a\u4eba\u5f00\u59cb\u4ece1\u62a5\u6570\uff0c\u62a5\u52309\u7684\u4eba\u5c31\u6254\u5230\u6d77\u91cc\u9762\uff0c\u4ed6\u540e\u9762\u7684\u4eba\u63a5\u7740\u4ece1\u5f00\u59cb\u62a5\u6570\uff0c\u62a5\u52309\u7684\u4eba\u7ee7\u7eed\u6254\u5230\u6d77\u91cc\u9762\uff0c\u76f4\u5230\u6254\u638915\u4e2a\u4eba\u3002\u7531\u4e8e\u4e0a\u5e1d\u7684\u4fdd\u4f51\uff0c15\u4e2a\u57fa\u7763\u5f92\u90fd\u5e78\u514d\u4e8e\u96be\uff0c\u95ee\u8fd9\u4e9b\u4eba\u6700\u5f00\u59cb\u662f\u600e\u4e48\u7ad9\u7684\uff0c\u54ea\u4e9b\u4f4d\u7f6e\u662f\u57fa\u7763\u5f92\u54ea\u4e9b\u4f4d\u7f6e\u662f\u975e\u57fa\u7763\u5f92\u3002 \"\"\" def main(): persons = [True] * 30 counter, index, number = 0, 0, 0 while counter < 15: if persons[index]: number += 1 if number == 9: persons[index] = False counter += 1 number = 0 index += 1 index %= 30 for person in persons: print('\u57fa' if person else '\u975e', end='') if __name__ == '__main__': main() \u7efc\u5408\u6848\u4f8b3\uff1a \u4e95\u5b57\u68cb \u6e38\u620f import os def print_board(board): print(board['TL'] + '|' + board['TM'] + '|' + board['TR']) print('-+-+-') print(board['ML'] + '|' + board['MM'] + '|' + board['MR']) print('-+-+-') print(board['BL'] + '|' + board['BM'] + '|' + board['BR']) def main(): init_board = { 'TL': ' ', 'TM': ' ', 'TR': ' ', 'ML': ' ', 'MM': ' ', 'MR': ' ', 'BL': ' ', 'BM': ' ', 'BR': ' ' } begin = True while begin: curr_board = init_board.copy() begin = False turn = 'x' counter = 0 os.system('clear') print_board(curr_board) while counter < 9: move = input('\u8f6e\u5230%s\u8d70\u68cb, \u8bf7\u8f93\u5165\u4f4d\u7f6e: ' % turn) if curr_board[move] == ' ': counter += 1 curr_board[move] = turn if turn == 'x': turn = 'o' else: turn = 'x' os.system('clear') print_board(curr_board) choice = input('\u518d\u73a9\u4e00\u5c40?(yes|no)') begin = choice == 'yes' if __name__ == '__main__': main() \u8bf4\u660e \uff1a\u6700\u540e\u8fd9\u4e2a\u6848\u4f8b\u6765\u81ea \u300aPython\u7f16\u7a0b\u5feb\u901f\u4e0a\u624b:\u8ba9\u7e41\u7410\u5de5\u4f5c\u81ea\u52a8\u5316\u300b \u4e00\u4e66\uff08\u8fd9\u672c\u4e66\u5bf9\u6709\u7f16\u7a0b\u57fa\u7840\u60f3\u8fc5\u901f\u4f7f\u7528Python\u5c06\u65e5\u5e38\u5de5\u4f5c\u81ea\u52a8\u5316\u7684\u4eba\u6765\u8bf4\u8fd8\u662f\u4e0d\u9519\u7684\u9009\u62e9\uff09\uff0c\u5bf9\u4ee3\u7801\u505a\u4e86\u4e00\u70b9\u70b9\u7684\u8c03\u6574\u3002","title":"\u7b2c\u4e03\u5929"},{"location":"new/7%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_1","text":"","title":"\u5b57\u7b26\u4e32\u548c\u5e38\u7528\u6570\u636e\u7ed3\u6784"},{"location":"new/7%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_2","text":"\u7b2c\u4e8c\u6b21\u4e16\u754c\u5927\u6218\u4fc3\u4f7f\u4e86\u73b0\u4ee3\u7535\u5b50\u8ba1\u7b97\u673a\u7684\u8bde\u751f\uff0c\u5f53\u521d\u7684\u60f3\u6cd5\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u7528\u8ba1\u7b97\u673a\u6765\u8ba1\u7b97\u5bfc\u5f39\u7684\u5f39\u9053\uff0c\u56e0\u6b64\u5728\u8ba1\u7b97\u673a\u521a\u521a\u8bde\u751f\u7684\u90a3\u4e2a\u5e74\u4ee3\uff0c\u8ba1\u7b97\u673a\u5904\u7406\u7684\u4fe1\u606f\u4e3b\u8981\u662f\u6570\u503c\uff0c\u800c\u4e16\u754c\u4e0a\u7684\u7b2c\u4e00\u53f0\u7535\u5b50\u8ba1\u7b97\u673aENIAC\u6bcf\u79d2\u949f\u80fd\u591f\u5b8c\u6210\u7ea65000\u6b21\u6d6e\u70b9\u8fd0\u7b97\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u867d\u7136\u5bf9\u6570\u503c\u8fd0\u7b97\u4ecd\u7136\u662f\u8ba1\u7b97\u673a\u65e5\u5e38\u5de5\u4f5c\u4e2d\u6700\u4e3a\u91cd\u8981\u7684\u4e8b\u60c5\u4e4b\u4e00\uff0c\u4f46\u662f\u4eca\u5929\u7684\u8ba1\u7b97\u673a\u5904\u7406\u5f97\u66f4\u591a\u7684\u6570\u636e\u90fd\u662f\u4ee5\u6587\u672c\u4fe1\u606f\u7684\u65b9\u5f0f\u5b58\u5728\u7684\uff0c\u800cPython\u8868\u793a\u6587\u672c\u4fe1\u606f\u7684\u65b9\u5f0f\u6211\u4eec\u5728\u5f88\u65e9\u4ee5\u524d\u5c31\u8bf4\u8fc7\u4e86\uff0c\u90a3\u5c31\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u3002\u6240\u8c13 \u5b57\u7b26\u4e32 \uff0c\u5c31\u662f\u7531\u96f6\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u6709\u9650\u5e8f\u5217\uff0c\u4e00\u822c\u8bb0\u4e3a $${\\displaystyle s=a_{1}a_{2}\\dots a_{n}(0\\leq n \\leq \\infty)}$$ \u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u4e86\u89e3\u5b57\u7b26\u4e32\u7684\u4f7f\u7528\u3002 def main(): str1 = 'hello, world!' # \u901a\u8fc7len\u51fd\u6570\u8ba1\u7b97\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 print(len(str1)) # 13 # \u83b7\u5f97\u5b57\u7b26\u4e32\u9996\u5b57\u6bcd\u5927\u5199\u7684\u62f7\u8d1d print(str1.capitalize()) # Hello, world! # \u83b7\u5f97\u5b57\u7b26\u4e32\u53d8\u5927\u5199\u540e\u7684\u62f7\u8d1d print(str1.upper()) # HELLO, WORLD! # \u4ece\u5b57\u7b26\u4e32\u4e2d\u67e5\u627e\u5b50\u4e32\u6240\u5728\u4f4d\u7f6e print(str1.find('or')) # 8 print(str1.find('shit')) # -1 # \u4e0efind\u7c7b\u4f3c\u4f46\u627e\u4e0d\u5230\u5b50\u4e32\u65f6\u4f1a\u5f15\u53d1\u5f02\u5e38 # print(str1.index('or')) # print(str1.index('shit')) # \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u5f00\u5934 print(str1.startswith('He')) # False print(str1.startswith('hel')) # True # \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u7ed3\u5c3e print(str1.endswith('!')) # True # \u5c06\u5b57\u7b26\u4e32\u4ee5\u6307\u5b9a\u7684\u5bbd\u5ea6\u5c45\u4e2d\u5e76\u5728\u4e24\u4fa7\u586b\u5145\u6307\u5b9a\u7684\u5b57\u7b26 print(str1.center(50, '*')) # \u5c06\u5b57\u7b26\u4e32\u4ee5\u6307\u5b9a\u7684\u5bbd\u5ea6\u9760\u53f3\u653e\u7f6e\u5de6\u4fa7\u586b\u5145\u6307\u5b9a\u7684\u5b57\u7b26 print(str1.rjust(50, ' ')) str2 = 'abc123456' # \u4ece\u5b57\u7b26\u4e32\u4e2d\u53d6\u51fa\u6307\u5b9a\u4f4d\u7f6e\u7684\u5b57\u7b26(\u4e0b\u6807\u8fd0\u7b97) print(str2[2]) # c # \u5b57\u7b26\u4e32\u5207\u7247(\u4ece\u6307\u5b9a\u7684\u5f00\u59cb\u7d22\u5f15\u5230\u6307\u5b9a\u7684\u7ed3\u675f\u7d22\u5f15) print(str2[2:5]) # c12 print(str2[2:]) # c123456 print(str2[2::2]) # c246 print(str2[::2]) # ac246 print(str2[::-1]) # 654321cba print(str2[-3:-1]) # 45 # \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u7531\u6570\u5b57\u6784\u6210 print(str2.isdigit()) # False # \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u5b57\u6bcd\u6784\u6210 print(str2.isalpha()) # False # \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6570\u5b57\u548c\u5b57\u6bcd\u6784\u6210 print(str2.isalnum()) # True str3 = ' jackfrued@126.com ' print(str3) # \u83b7\u5f97\u5b57\u7b26\u4e32\u4fee\u526a\u5de6\u53f3\u4e24\u4fa7\u7a7a\u683c\u7684\u62f7\u8d1d print(str3.strip()) if __name__ == '__main__': main() \u9664\u4e86\u5b57\u7b26\u4e32\uff0cPython\u8fd8\u5185\u7f6e\u4e86\u591a\u79cd\u7c7b\u578b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5982\u679c\u8981\u5728\u7a0b\u5e8f\u4e2d\u4fdd\u5b58\u548c\u64cd\u4f5c\u6570\u636e\uff0c\u7edd\u5927\u591a\u6570\u65f6\u5019\u53ef\u4ee5\u5229\u7528\u73b0\u6709\u7684\u6570\u636e\u7ed3\u6784\u6765\u5b9e\u73b0\uff0c\u6700\u5e38\u7528\u7684\u5305\u62ec\u5217\u8868\u3001\u5143\u7ec4\u3001\u96c6\u5408\u548c\u5b57\u5178\u3002","title":"\u4f7f\u7528\u5b57\u7b26\u4e32"},{"location":"new/7%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_3","text":"\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5b9a\u4e49\u5217\u8868\u3001\u4f7f\u7528\u4e0b\u6807\u8bbf\u95ee\u5217\u8868\u5143\u7d20\u4ee5\u53ca\u6dfb\u52a0\u548c\u5220\u9664\u5143\u7d20\u7684\u64cd\u4f5c\u3002 def main(): list1 = [1, 3, 5, 7, 100] print(list1)1, 3, 5, 7, 100 list2 = ['hello'] * 5 print(list2)hello hello hello hello hello # \u8ba1\u7b97\u5217\u8868\u957f\u5ea6(\u5143\u7d20\u4e2a\u6570) print(len(list1))5 # \u4e0b\u6807(\u7d22\u5f15)\u8fd0\u7b97 print(list1[0])1 print(list1[4])7 # print(list1[5]) # IndexError: list index out of range print(list1[-1])100 print(list1[-3])5 list1[2] = 300 print(list1)1 300 5 7 100 # \u6dfb\u52a0\u5143\u7d20 list1.append(200) list1.insert(1, 400) list1 += [1000, 2000] print(list1) print(len(list1)) # \u5220\u9664\u5143\u7d20 list1.remove(3) if 1234 in list1: list1.remove(1234) del list1[0] print(list1) # \u6e05\u7a7a\u5217\u8868\u5143\u7d20 list1.clear() print(list1) if __name__ == '__main__': main() \u548c\u5b57\u7b26\u4e32\u4e00\u6837\uff0c\u5217\u8868\u4e5f\u53ef\u4ee5\u505a\u5207\u7247\u64cd\u4f5c\uff0c\u901a\u8fc7\u5207\u7247\u64cd\u4f5c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u5217\u8868\u7684\u590d\u5236\u6216\u8005\u5c06\u5217\u8868\u4e2d\u7684\u4e00\u90e8\u5206\u53d6\u51fa\u6765\u521b\u5efa\u51fa\u65b0\u7684\u5217\u8868\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 def main(): fruits = ['grape', 'apple', 'strawberry', 'waxberry'] fruits += ['pitaya', 'pear', 'mango'] # \u5faa\u73af\u904d\u5386\u5217\u8868\u5143\u7d20 for fruit in fruits: print(fruit.title(), end=' ') print() # \u5217\u8868\u5207\u7247 fruits2 = fruits[1:4] print(fruits2) # fruit3 = fruits # \u6ca1\u6709\u590d\u5236\u5217\u8868\u53ea\u521b\u5efa\u4e86\u65b0\u7684\u5f15\u7528 # \u53ef\u4ee5\u901a\u8fc7\u5b8c\u6574\u5207\u7247\u64cd\u4f5c\u6765\u590d\u5236\u5217\u8868 fruits3 = fruits[:] print(fruits3) fruits4 = fruits[-3:-1] print(fruits4) # \u53ef\u4ee5\u901a\u8fc7\u53cd\u5411\u5207\u7247\u64cd\u4f5c\u6765\u83b7\u5f97\u5012\u8f6c\u540e\u7684\u5217\u8868\u7684\u62f7\u8d1d fruits5 = fruits[::-1] print(fruits5) if __name__ == '__main__': main() \u4e0b\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\u4e86\u5bf9\u5217\u8868\u7684\u6392\u5e8f\u64cd\u4f5c\u3002 def main(): list1 = ['orange', 'apple', 'zoo', 'internationalization', 'blueberry'] list2 = sorted(list1) # sorted\u51fd\u6570\u8fd4\u56de\u5217\u8868\u6392\u5e8f\u540e\u7684\u62f7\u8d1d\u4e0d\u4f1a\u4fee\u6539\u4f20\u5165\u7684\u5217\u8868 # \u51fd\u6570\u7684\u8bbe\u8ba1\u5c31\u5e94\u8be5\u50cfsorted\u51fd\u6570\u4e00\u6837\u5c3d\u53ef\u80fd\u4e0d\u4ea7\u751f\u526f\u4f5c\u7528 list3 = sorted(list1, reverse=True) # \u901a\u8fc7key\u5173\u952e\u5b57\u53c2\u6570\u6307\u5b9a\u6839\u636e\u5b57\u7b26\u4e32\u957f\u5ea6\u8fdb\u884c\u6392\u5e8f\u800c\u4e0d\u662f\u9ed8\u8ba4\u7684\u5b57\u6bcd\u8868\u987a\u5e8f list4 = sorted(list1, key=len) print(list1) print(list2) print(list3) print(list4) # \u7ed9\u5217\u8868\u5bf9\u8c61\u53d1\u51fa\u6392\u5e8f\u6d88\u606f\u76f4\u63a5\u5728\u5217\u8868\u5bf9\u8c61\u4e0a\u8fdb\u884c\u6392\u5e8f list1.sort(reverse=True) print(list1) if __name__ == '__main__': main() \u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5217\u8868\u7684\u751f\u6210\u5f0f\u8bed\u6cd5\u6765\u521b\u5efa\u5217\u8868\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import sys def main(): f = [x for x in range(1, 10)] print(f) f = [x + y for x in 'ABCDE' for y in '1234567'] print(f) # \u7528\u5217\u8868\u7684\u751f\u6210\u8868\u8fbe\u5f0f\u8bed\u6cd5\u521b\u5efa\u5217\u8868\u5bb9\u5668 # \u7528\u8fd9\u79cd\u8bed\u6cd5\u521b\u5efa\u5217\u8868\u4e4b\u540e\u5143\u7d20\u5df2\u7ecf\u51c6\u5907\u5c31\u7eea\u6240\u4ee5\u9700\u8981\u8017\u8d39\u8f83\u591a\u7684\u5185\u5b58\u7a7a\u95f4 f = [x ** 2 for x in range(1, 1000)] print(sys.getsizeof(f)) # \u67e5\u770b\u5bf9\u8c61\u5360\u7528\u5185\u5b58\u7684\u5b57\u8282\u6570 print(f) # \u8bf7\u6ce8\u610f\u4e0b\u9762\u7684\u4ee3\u7801\u521b\u5efa\u7684\u4e0d\u662f\u4e00\u4e2a\u5217\u8868\u800c\u662f\u4e00\u4e2a\u751f\u6210\u5668\u5bf9\u8c61 # \u901a\u8fc7\u751f\u6210\u5668\u53ef\u4ee5\u83b7\u53d6\u5230\u6570\u636e\u4f46\u5b83\u4e0d\u5360\u7528\u989d\u5916\u7684\u7a7a\u95f4\u5b58\u50a8\u6570\u636e # \u6bcf\u6b21\u9700\u8981\u6570\u636e\u7684\u65f6\u5019\u5c31\u901a\u8fc7\u5185\u90e8\u7684\u8fd0\u7b97\u5f97\u5230\u6570\u636e(\u9700\u8981\u82b1\u8d39\u989d\u5916\u7684\u65f6\u95f4) f = (x ** 2 for x in range(1, 1000)) print(sys.getsizeof(f)) # \u76f8\u6bd4\u751f\u6210\u5f0f\u751f\u6210\u5668\u4e0d\u5360\u7528\u5b58\u50a8\u6570\u636e\u7684\u7a7a\u95f4 print(f) for val in f: print(val) if __name__ == '__main__': main() \u9664\u4e86\u4e0a\u9762\u63d0\u5230\u7684\u751f\u6210\u5668\u8bed\u6cd5\uff0cPython\u4e2d\u8fd8\u6709\u53e6\u5916\u4e00\u79cd\u5b9a\u4e49\u751f\u6210\u5668\u7684\u65b9\u5f0f\uff0c\u5c31\u662f\u901a\u8fc7 yield \u5173\u952e\u5b57\u5c06\u4e00\u4e2a\u666e\u901a\u51fd\u6570\u6539\u9020\u6210\u751f\u6210\u5668\u51fd\u6570\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5b9e\u73b0\u4e00\u4e2a\u751f\u6210 \u6590\u6ce2\u62c9\u5207\u6570\u5217 \u7684\u751f\u6210\u5668\u3002\u6240\u8c13\u6590\u6ce2\u62c9\u5207\u6570\u5217\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762 \u9012\u5f52 \u7684\u65b9\u6cd5\u6765\u8fdb\u884c\u5b9a\u4e49\uff1a $${\\displaystyle F_{0}=0}$$ $${\\displaystyle F_{1}=1}$$ $${\\displaystyle F_{n}=F_{n-1}+F_{n-2}}({n}\\geq{2})$$ def fib(n): a, b = 0, 1 for _ in range(n): a, b = b, a + b yield a def main(): for val in fib(20): print(val) if __name__ == '__main__': main()","title":"\u4f7f\u7528\u5217\u8868"},{"location":"new/7%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_4","text":"Python \u7684\u5143\u7ec4\u4e0e\u5217\u8868\u7c7b\u4f3c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5143\u7ec4\u7684\u5143\u7d20\u4e0d\u80fd\u4fee\u6539\uff0c\u5728\u524d\u9762\u7684\u4ee3\u7801\u4e2d\u6211\u4eec\u5df2\u7ecf\u4e0d\u6b62\u4e00\u6b21\u4f7f\u7528\u8fc7\u5143\u7ec4\u4e86\u3002\u987e\u540d\u601d\u4e49\uff0c\u6211\u4eec\u628a\u591a\u4e2a\u5143\u7d20\u7ec4\u5408\u5230\u4e00\u8d77\u5c31\u5f62\u6210\u4e86\u4e00\u4e2a\u5143\u7ec4\uff0c\u6240\u4ee5\u5b83\u548c\u5217\u8868\u4e00\u6837\u53ef\u4ee5\u4fdd\u5b58\u591a\u6761\u6570\u636e\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5b9a\u4e49\u548c\u4f7f\u7528\u5143\u7ec4\u3002 def main(): # \u5b9a\u4e49\u5143\u7ec4 t = ('\u9a86\u660a', 38, True, '\u56db\u5ddd\u6210\u90fd') print(t) # \u83b7\u53d6\u5143\u7ec4\u4e2d\u7684\u5143\u7d20 print(t[0]) print(t[3]) # \u904d\u5386\u5143\u7ec4\u4e2d\u7684\u503c for member in t: print(member) # \u91cd\u65b0\u7ed9\u5143\u7ec4\u8d4b\u503c # t[0] = '\u738b\u5927\u9524' # TypeError # \u53d8\u91cft\u91cd\u65b0\u5f15\u7528\u4e86\u65b0\u7684\u5143\u7ec4\u539f\u6765\u7684\u5143\u7ec4\u5c06\u88ab\u5783\u573e\u56de\u6536 t = ('\u738b\u5927\u9524', 20, True, '\u4e91\u5357\u6606\u660e') print(t) # \u5c06\u5143\u7ec4\u8f6c\u6362\u6210\u5217\u8868 person = list(t) print(person) # \u5217\u8868\u662f\u53ef\u4ee5\u4fee\u6539\u5b83\u7684\u5143\u7d20\u7684 person[0] = '\u674e\u5c0f\u9f99' person[1] = 25 print(person) # \u5c06\u5217\u8868\u8f6c\u6362\u6210\u5143\u7ec4 fruits_list = ['apple', 'banana', 'orange'] fruits_tuple = tuple(fruits_list) print(fruits_tuple) if __name__ == '__main__': main() \u8fd9\u91cc\u6709\u4e00\u4e2a\u975e\u5e38\u503c\u5f97\u63a2\u8ba8\u7684\u95ee\u9898\uff0c\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u5217\u8868\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u9700\u8981\u5143\u7ec4\u8fd9\u6837\u7684\u7c7b\u578b\u5462\uff1f \u5143\u7ec4\u4e2d\u7684\u5143\u7d20\u662f\u65e0\u6cd5\u4fee\u6539\u7684\uff0c\u4e8b\u5b9e\u4e0a\u6211\u4eec\u5728\u9879\u76ee\u4e2d\u5c24\u5176\u662f \u591a\u7ebf\u7a0b \u73af\u5883\uff08\u540e\u9762\u4f1a\u8bb2\u5230\uff09\u4e2d\u53ef\u80fd\u66f4\u559c\u6b22\u4f7f\u7528\u7684\u662f\u90a3\u4e9b\u4e0d\u53d8\u5bf9\u8c61\uff08\u4e00\u65b9\u9762\u56e0\u4e3a\u5bf9\u8c61\u72b6\u6001\u4e0d\u80fd\u4fee\u6539\uff0c\u6240\u4ee5\u53ef\u4ee5\u907f\u514d\u7531\u6b64\u5f15\u8d77\u7684\u4e0d\u5fc5\u8981\u7684\u7a0b\u5e8f\u9519\u8bef\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u4e00\u4e2a\u4e0d\u53d8\u7684\u5bf9\u8c61\u8981\u6bd4\u53ef\u53d8\u7684\u5bf9\u8c61\u66f4\u52a0\u5bb9\u6613\u7ef4\u62a4\uff1b\u53e6\u4e00\u65b9\u9762\u56e0\u4e3a\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u7ebf\u7a0b\u80fd\u591f\u4fee\u6539\u4e0d\u53d8\u5bf9\u8c61\u7684\u5185\u90e8\u72b6\u6001\uff0c\u4e00\u4e2a\u4e0d\u53d8\u5bf9\u8c61\u81ea\u52a8\u5c31\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7701\u6389\u5904\u7406\u540c\u6b65\u5316\u7684\u5f00\u9500\u3002\u4e00\u4e2a\u4e0d\u53d8\u5bf9\u8c61\u53ef\u4ee5\u65b9\u4fbf\u7684\u88ab\u5171\u4eab\u8bbf\u95ee\uff09\u3002\u6240\u4ee5\u7ed3\u8bba\u5c31\u662f\uff1a\u5982\u679c\u4e0d\u9700\u8981\u5bf9\u5143\u7d20\u8fdb\u884c\u6dfb\u52a0\u3001\u5220\u9664\u3001\u4fee\u6539\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5143\u7ec4\uff0c\u5f53\u7136\u5982\u679c\u4e00\u4e2a\u65b9\u6cd5\u8981\u8fd4\u56de\u591a\u4e2a\u503c\uff0c\u4f7f\u7528\u5143\u7ec4\u4e5f\u662f\u4e0d\u9519\u7684\u9009\u62e9\u3002 \u5143\u7ec4\u5728\u521b\u5efa\u65f6\u95f4\u548c\u5360\u7528\u7684\u7a7a\u95f4\u4e0a\u9762\u90fd\u4f18\u4e8e\u5217\u8868\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528sys\u6a21\u5757\u7684getsizeof\u51fd\u6570\u6765\u68c0\u67e5\u5b58\u50a8\u540c\u6837\u7684\u5143\u7d20\u7684\u5143\u7ec4\u548c\u5217\u8868\u5404\u81ea\u5360\u7528\u4e86\u591a\u5c11\u5185\u5b58\u7a7a\u95f4\uff0c\u8fd9\u4e2a\u5f88\u5bb9\u6613\u505a\u5230\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728ipython\u4e2d\u4f7f\u7528\u9b54\u6cd5\u6307\u4ee4%timeit\u6765\u5206\u6790\u521b\u5efa\u540c\u6837\u5185\u5bb9\u7684\u5143\u7ec4\u548c\u5217\u8868\u6240\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u4e0b\u56fe\u662f\u6211\u7684macOS\u7cfb\u7edf\u4e0a\u6d4b\u8bd5\u7684\u7ed3\u679c\u3002","title":"\u4f7f\u7528\u5143\u7ec4"},{"location":"new/7%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_5","text":"Python\u4e2d\u7684\u96c6\u5408\u8ddf\u6570\u5b66\u4e0a\u7684\u96c6\u5408\u662f\u4e00\u81f4\u7684\uff0c\u4e0d\u5141\u8bb8\u6709\u91cd\u590d\u5143\u7d20\uff0c\u800c\u4e14\u53ef\u4ee5\u8fdb\u884c\u4ea4\u96c6\u3001\u5e76\u96c6\u3001\u5dee\u96c6\u7b49\u8fd0\u7b97\u3002 def main(): set1 = {1, 2, 3, 3, 3, 2} print(set1) print('Length =', len(set1)) set2 = set(range(1, 10)) print(set2) set1.add(4) set1.add(5) set2.update([11, 12]) print(set1) print(set2) set2.discard(5) # remove\u7684\u5143\u7d20\u5982\u679c\u4e0d\u5b58\u5728\u4f1a\u5f15\u53d1KeyError if 4 in set2: set2.remove(4) print(set2) # \u904d\u5386\u96c6\u5408\u5bb9\u5668 for elem in set2: print(elem ** 2, end=' ') print() # \u5c06\u5143\u7ec4\u8f6c\u6362\u6210\u96c6\u5408 set3 = set((1, 2, 3, 3, 2, 1)) print(set3.pop()) print(set3) # \u96c6\u5408\u7684\u4ea4\u96c6\u3001\u5e76\u96c6\u3001\u5dee\u96c6\u3001\u5bf9\u79f0\u5dee\u8fd0\u7b97 print(set1 & set2) # print(set1.intersection(set2)) print(set1 | set2) # print(set1.union(set2)) print(set1 - set2) # print(set1.difference(set2)) print(set1 ^ set2) # print(set1.symmetric_difference(set2)) # \u5224\u65ad\u5b50\u96c6\u548c\u8d85\u96c6 print(set2 <= set1) # print(set2.issubset(set1)) print(set3 <= set1) # print(set3.issubset(set1)) print(set1 >= set2) # print(set1.issuperset(set2)) print(set1 >= set3) # print(set1.issuperset(set3)) if __name__ == '__main__': main() \u8bf4\u660e \uff1aPython\u4e2d\u5141\u8bb8\u901a\u8fc7\u4e00\u4e9b\u7279\u6b8a\u7684\u65b9\u6cd5\u6765\u4e3a\u67d0\u79cd\u7c7b\u578b\u6216\u6570\u636e\u7ed3\u6784\u81ea\u5b9a\u4e49\u8fd0\u7b97\u7b26\uff08\u540e\u9762\u7684\u7ae0\u8282\u4e2d\u4f1a\u8bb2\u5230\uff09\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u6211\u4eec\u5bf9\u96c6\u5408\u8fdb\u884c\u8fd0\u7b97\u7684\u65f6\u5019\u53ef\u4ee5\u8c03\u7528\u96c6\u5408\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5bf9\u5e94\u7684\u8fd0\u7b97\u7b26\uff0c\u4f8b\u5982 & \u8fd0\u7b97\u7b26\u8ddfintersection\u65b9\u6cd5\u7684\u4f5c\u7528\u5c31\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u4f7f\u7528\u8fd0\u7b97\u7b26\u8ba9\u4ee3\u7801\u66f4\u52a0\u76f4\u89c2\u3002","title":"\u4f7f\u7528\u96c6\u5408"},{"location":"new/7%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_6","text":"\u5b57\u5178\u662f\u53e6\u4e00\u79cd\u53ef\u53d8\u5bb9\u5668\u6a21\u578b\uff0c\u7c7b\u4f3c\u4e8e\u6211\u4eec\u751f\u6d3b\u4e2d\u4f7f\u7528\u7684\u5b57\u5178\uff0c\u5b83\u53ef\u4ee5\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u5bf9\u8c61\uff0c\u4e0e\u5217\u8868\u3001\u96c6\u5408\u4e0d\u540c\u7684\u662f\uff0c\u5b57\u5178\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u7531\u4e00\u4e2a\u952e\u548c\u4e00\u4e2a\u503c\u7ec4\u6210\u7684\u201c\u952e\u503c\u5bf9\u201d\uff0c\u952e\u548c\u503c\u901a\u8fc7\u5192\u53f7\u5206\u5f00\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5b9a\u4e49\u548c\u4f7f\u7528\u5b57\u5178\u3002 def main(): scores = {'\u9a86\u660a': 95, '\u767d\u5143\u82b3': 78, '\u72c4\u4ec1\u6770': 82} # \u901a\u8fc7\u952e\u53ef\u4ee5\u83b7\u53d6\u5b57\u5178\u4e2d\u5bf9\u5e94\u7684\u503c print(scores['\u9a86\u660a']) print(scores['\u72c4\u4ec1\u6770']) # \u5bf9\u5b57\u5178\u8fdb\u884c\u904d\u5386(\u904d\u5386\u7684\u5176\u5b9e\u662f\u952e\u518d\u901a\u8fc7\u952e\u53d6\u5bf9\u5e94\u7684\u503c) for elem in scores: print('%s\\t--->\\t%d' % (elem, scores[elem])) # \u66f4\u65b0\u5b57\u5178\u4e2d\u7684\u5143\u7d20 scores['\u767d\u5143\u82b3'] = 65 scores['\u8bf8\u845b\u738b\u6717'] = 71 scores.update(\u51b7\u9762=67, \u65b9\u542f\u9e64=85) print(scores) if '\u6b66\u5219\u5929' in scores: print(scores['\u6b66\u5219\u5929']) print(scores.get('\u6b66\u5219\u5929')) # get\u65b9\u6cd5\u4e5f\u662f\u901a\u8fc7\u952e\u83b7\u53d6\u5bf9\u5e94\u7684\u503c\u4f46\u662f\u53ef\u4ee5\u8bbe\u7f6e\u9ed8\u8ba4\u503c print(scores.get('\u6b66\u5219\u5929', 60)) # \u5220\u9664\u5b57\u5178\u4e2d\u7684\u5143\u7d20 print(scores.popitem()) print(scores.popitem()) print(scores.pop('\u9a86\u660a', 100)) # \u6e05\u7a7a\u5b57\u5178 scores.clear() print(scores) if __name__ == '__main__': main()","title":"\u4f7f\u7528\u5b57\u5178"},{"location":"new/7%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_7","text":"","title":"\u7ec3\u4e60"},{"location":"new/7%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#1","text":"import os import time def main(): content = '\u5317\u4eac\u6b22\u8fce\u4f60\u4e3a\u4f60\u5f00\u5929\u8f9f\u5730\u2026\u2026\u2026\u2026' while True: # \u6e05\u7406\u5c4f\u5e55\u4e0a\u7684\u8f93\u51fa os.system('cls') # os.system('clear') print(content) # \u4f11\u7720200\u6beb\u79d2 time.sleep(0.2) content = content[1:] + content[0] if __name__ == '__main__': main()","title":"\u7ec3\u4e601\uff1a\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u8dd1\u9a6c\u706f\u6587\u5b57"},{"location":"new/7%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#2","text":"import random def generate_code(code_len=4): \"\"\" \u751f\u6210\u6307\u5b9a\u957f\u5ea6\u7684\u9a8c\u8bc1\u7801 :param code_len: \u9a8c\u8bc1\u7801\u7684\u957f\u5ea6(\u9ed8\u8ba44\u4e2a\u5b57\u7b26) :return: \u7531\u5927\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u548c\u6570\u5b57\u6784\u6210\u7684\u968f\u673a\u9a8c\u8bc1\u7801 \"\"\" all_chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ' last_pos = len(all_chars) - 1 code = '' for _ in range(code_len): index = random.randint(0, last_pos) code += all_chars[index] return code","title":"\u7ec3\u4e602\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u51fd\u6570\u4ea7\u751f\u6307\u5b9a\u957f\u5ea6\u7684\u9a8c\u8bc1\u7801\uff0c\u9a8c\u8bc1\u7801\u7531\u5927\u5c0f\u5199\u5b57\u6bcd\u548c\u6570\u5b57\u6784\u6210\u3002"},{"location":"new/7%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#3","text":"def get_suffix(filename, has_dot=False): \"\"\" \u83b7\u53d6\u6587\u4ef6\u540d\u7684\u540e\u7f00\u540d :param filename: \u6587\u4ef6\u540d :param has_dot: \u8fd4\u56de\u7684\u540e\u7f00\u540d\u662f\u5426\u9700\u8981\u5e26\u70b9 :return: \u6587\u4ef6\u7684\u540e\u7f00\u540d \"\"\" pos = filename.rfind('.') if 0 < pos < len(filename) - 1: index = pos if has_dot else pos + 1 return filename[index:] else: return ''","title":"\u7ec3\u4e603\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u7ed9\u5b9a\u6587\u4ef6\u540d\u7684\u540e\u7f00\u540d\u3002"},{"location":"new/7%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#4","text":"def max2(x): m1, m2 = (x[0], x[1]) if x[0] > x[1] else (x[1], x[0]) for index in range(2, len(x)): if x[index] > m1: m2 = m1 m1 = x[index] elif x[index] > m2: m2 = x[index] return m1, m2","title":"\u7ec3\u4e604\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u4f20\u5165\u7684\u5217\u8868\u4e2d\u6700\u5927\u548c\u7b2c\u4e8c\u5927\u7684\u5143\u7d20\u7684\u503c\u3002"},{"location":"new/7%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#5","text":"def is_leap_year(year): \"\"\" \u5224\u65ad\u6307\u5b9a\u7684\u5e74\u4efd\u662f\u4e0d\u662f\u95f0\u5e74 :param year: \u5e74\u4efd :return: \u95f0\u5e74\u8fd4\u56deTrue\u5e73\u5e74\u8fd4\u56deFalse \"\"\" return year % 4 == 0 and year % 100 != 0 or year % 400 == 0 def which_day(year, month, date): \"\"\" \u8ba1\u7b97\u4f20\u5165\u7684\u65e5\u671f\u662f\u8fd9\u4e00\u5e74\u7684\u7b2c\u51e0\u5929 :param year: \u5e74 :param month: \u6708 :param date: \u65e5 :return: \u7b2c\u51e0\u5929 \"\"\" days_of_month = [ [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31] ][is_leap_year(year)] total = 0 for index in range(month - 1): total += days_of_month[index] return total + date def main(): print(which_day(1980, 11, 28)) print(which_day(1981, 12, 31)) print(which_day(2018, 1, 1)) print(which_day(2016, 3, 1)) if __name__ == '__main__': main()","title":"\u7ec3\u4e605\uff1a\u8ba1\u7b97\u6307\u5b9a\u7684\u5e74\u6708\u65e5\u662f\u8fd9\u4e00\u5e74\u7684\u7b2c\u51e0\u5929"},{"location":"new/7%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#6","text":"def main(): num = int(input('Number of rows: ')) yh = [[]] * num for row in range(len(yh)): yh[row] = [None] * (row + 1) for col in range(len(yh[row])): if col == 0 or col == row: yh[row][col] = 1 else: yh[row][col] = yh[row - 1][col] + yh[row - 1][col - 1] print(yh[row][col], end='\\t') print() if __name__ == '__main__': main()","title":"\u7ec3\u4e606\uff1a\u6253\u5370\u6768\u8f89\u4e09\u89d2\u3002"},{"location":"new/7%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_8","text":"","title":"\u7efc\u5408\u6848\u4f8b"},{"location":"new/7%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#1_1","text":"from random import randrange, randint, sample def display(balls): \"\"\" \u8f93\u51fa\u5217\u8868\u4e2d\u7684\u53cc\u8272\u7403\u53f7\u7801 \"\"\" for index, ball in enumerate(balls): if index == len(balls) - 1: print('|', end=' ') print('%02d' % ball, end=' ') print() def random_select(): \"\"\" \u968f\u673a\u9009\u62e9\u4e00\u7ec4\u53f7\u7801 \"\"\" red_balls = [x for x in range(1, 34)] selected_balls = [] selected_balls = sample(red_balls, 6) selected_balls.sort() selected_balls.append(randint(1, 16)) return selected_balls def main(): n = int(input('\u673a\u9009\u51e0\u6ce8: ')) for _ in range(n): display(random_select()) if __name__ == '__main__': main() \u8bf4\u660e \uff1a\u4e0a\u9762\u4f7f\u7528random\u6a21\u5757\u7684sample\u51fd\u6570\u6765\u5b9e\u73b0\u4ece\u5217\u8868\u4e2d\u9009\u62e9\u4e0d\u91cd\u590d\u7684n\u4e2a\u5143\u7d20\u3002","title":"\u6848\u4f8b1\uff1a\u53cc\u8272\u7403\u9009\u53f7"},{"location":"new/7%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#2_1","text":"\"\"\" \u300a\u5e78\u8fd0\u7684\u57fa\u7763\u5f92\u300b \u670915\u4e2a\u57fa\u7763\u5f92\u548c15\u4e2a\u975e\u57fa\u7763\u5f92\u5728\u6d77\u4e0a\u9047\u9669\uff0c\u4e3a\u4e86\u80fd\u8ba9\u4e00\u90e8\u5206\u4eba\u6d3b\u4e0b\u6765\u4e0d\u5f97\u4e0d\u5c06\u5176\u4e2d15\u4e2a\u4eba\u6254\u5230\u6d77\u91cc\u9762\u53bb\uff0c\u6709\u4e2a\u4eba\u60f3\u4e86\u4e2a\u529e\u6cd5\u5c31\u662f\u5927\u5bb6\u56f4\u6210\u4e00\u4e2a\u5708\uff0c\u7531\u67d0\u4e2a\u4eba\u5f00\u59cb\u4ece1\u62a5\u6570\uff0c\u62a5\u52309\u7684\u4eba\u5c31\u6254\u5230\u6d77\u91cc\u9762\uff0c\u4ed6\u540e\u9762\u7684\u4eba\u63a5\u7740\u4ece1\u5f00\u59cb\u62a5\u6570\uff0c\u62a5\u52309\u7684\u4eba\u7ee7\u7eed\u6254\u5230\u6d77\u91cc\u9762\uff0c\u76f4\u5230\u6254\u638915\u4e2a\u4eba\u3002\u7531\u4e8e\u4e0a\u5e1d\u7684\u4fdd\u4f51\uff0c15\u4e2a\u57fa\u7763\u5f92\u90fd\u5e78\u514d\u4e8e\u96be\uff0c\u95ee\u8fd9\u4e9b\u4eba\u6700\u5f00\u59cb\u662f\u600e\u4e48\u7ad9\u7684\uff0c\u54ea\u4e9b\u4f4d\u7f6e\u662f\u57fa\u7763\u5f92\u54ea\u4e9b\u4f4d\u7f6e\u662f\u975e\u57fa\u7763\u5f92\u3002 \"\"\" def main(): persons = [True] * 30 counter, index, number = 0, 0, 0 while counter < 15: if persons[index]: number += 1 if number == 9: persons[index] = False counter += 1 number = 0 index += 1 index %= 30 for person in persons: print('\u57fa' if person else '\u975e', end='') if __name__ == '__main__': main()","title":"\u7efc\u5408\u6848\u4f8b2\uff1a\u7ea6\u745f\u592b\u73af\u95ee\u9898"},{"location":"new/7%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#3_1","text":"import os def print_board(board): print(board['TL'] + '|' + board['TM'] + '|' + board['TR']) print('-+-+-') print(board['ML'] + '|' + board['MM'] + '|' + board['MR']) print('-+-+-') print(board['BL'] + '|' + board['BM'] + '|' + board['BR']) def main(): init_board = { 'TL': ' ', 'TM': ' ', 'TR': ' ', 'ML': ' ', 'MM': ' ', 'MR': ' ', 'BL': ' ', 'BM': ' ', 'BR': ' ' } begin = True while begin: curr_board = init_board.copy() begin = False turn = 'x' counter = 0 os.system('clear') print_board(curr_board) while counter < 9: move = input('\u8f6e\u5230%s\u8d70\u68cb, \u8bf7\u8f93\u5165\u4f4d\u7f6e: ' % turn) if curr_board[move] == ' ': counter += 1 curr_board[move] = turn if turn == 'x': turn = 'o' else: turn = 'x' os.system('clear') print_board(curr_board) choice = input('\u518d\u73a9\u4e00\u5c40?(yes|no)') begin = choice == 'yes' if __name__ == '__main__': main() \u8bf4\u660e \uff1a\u6700\u540e\u8fd9\u4e2a\u6848\u4f8b\u6765\u81ea \u300aPython\u7f16\u7a0b\u5feb\u901f\u4e0a\u624b:\u8ba9\u7e41\u7410\u5de5\u4f5c\u81ea\u52a8\u5316\u300b \u4e00\u4e66\uff08\u8fd9\u672c\u4e66\u5bf9\u6709\u7f16\u7a0b\u57fa\u7840\u60f3\u8fc5\u901f\u4f7f\u7528Python\u5c06\u65e5\u5e38\u5de5\u4f5c\u81ea\u52a8\u5316\u7684\u4eba\u6765\u8bf4\u8fd8\u662f\u4e0d\u9519\u7684\u9009\u62e9\uff09\uff0c\u5bf9\u4ee3\u7801\u505a\u4e86\u4e00\u70b9\u70b9\u7684\u8c03\u6574\u3002","title":"\u7efc\u5408\u6848\u4f8b3\uff1a\u4e95\u5b57\u68cb\u6e38\u620f"},{"location":"new/8%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/","text":"\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u57fa\u7840 \u6d3b\u5728\u5f53\u4e0b\u7684\u7a0b\u5e8f\u5458\u5e94\u8be5\u90fd\u542c\u8fc7\u201c\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u201d\u4e00\u8bcd\uff0c\u4e5f\u7ecf\u5e38\u6709\u4eba\u95ee\u80fd\u4e0d\u80fd\u7528\u4e00\u53e5\u8bdd\u89e3\u91ca\u4e0b\u4ec0\u4e48\u662f\u201c\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u201d\uff0c\u6211\u4eec\u5148\u6765\u770b\u770b\u6bd4\u8f83\u6b63\u5f0f\u7684\u8bf4\u6cd5\u3002 \u628a\u4e00\u7ec4\u6570\u636e\u7ed3\u6784\u548c\u5904\u7406\u5b83\u4eec\u7684\u65b9\u6cd5\u7ec4\u6210\u5bf9\u8c61\uff08object\uff09\uff0c\u628a\u76f8\u540c\u884c\u4e3a\u7684\u5bf9\u8c61\u5f52\u7eb3\u4e3a\u7c7b\uff08class\uff09\uff0c\u901a\u8fc7\u7c7b\u7684\u5c01\u88c5\uff08encapsulation\uff09\u9690\u85cf\u5185\u90e8\u7ec6\u8282\uff0c\u901a\u8fc7\u7ee7\u627f\uff08inheritance\uff09\u5b9e\u73b0\u7c7b\u7684\u7279\u5316\uff08specialization\uff09\u548c\u6cdb\u5316\uff08generalization\uff09\uff0c\u901a\u8fc7\u591a\u6001\uff08polymorphism\uff09\u5b9e\u73b0\u57fa\u4e8e\u5bf9\u8c61\u7c7b\u578b\u7684\u52a8\u6001\u5206\u6d3e\u3002 \u8fd9\u6837\u4e00\u8bf4\u662f\u4e0d\u662f\u66f4\u4e0d\u660e\u767d\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u770b\u770b\u66f4\u901a\u4fd7\u6613\u61c2\u7684\u8bf4\u6cd5\uff0c\u4e0b\u9762\u8fd9\u6bb5\u5185\u5bb9\u6765\u81ea\u4e8e \u77e5\u4e4e \u3002 \u8bf4\u660e \uff1a\u4ee5\u4e0a\u7684\u5185\u5bb9\u6765\u81ea\u4e8e\u7f51\u7edc\uff0c\u4e0d\u4ee3\u8868\u4f5c\u8005\u672c\u4eba\u7684\u89c2\u70b9\u548c\u770b\u6cd5\uff0c\u4e0e\u4f5c\u8005\u672c\u4eba\u7acb\u573a\u65e0\u5173\uff0c\u76f8\u5173\u8d23\u4efb\u4e0d\u7531\u4f5c\u8005\u627f\u62c5\u3002 \u4e4b\u524d\u6211\u4eec\u8bf4\u8fc7\u201c\u7a0b\u5e8f\u662f\u6307\u4ee4\u7684\u96c6\u5408\u201d\uff0c\u6211\u4eec\u5728\u7a0b\u5e8f\u4e2d\u4e66\u5199\u7684\u8bed\u53e5\u5728\u6267\u884c\u65f6\u4f1a\u53d8\u6210\u4e00\u6761\u6216\u591a\u6761\u6307\u4ee4\u7136\u540e\u7531CPU\u53bb\u6267\u884c\u3002\u5f53\u7136\u4e3a\u4e86\u7b80\u5316\u7a0b\u5e8f\u7684\u8bbe\u8ba1\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u51fd\u6570\u7684\u6982\u5ff5\uff0c\u628a\u76f8\u5bf9\u72ec\u7acb\u4e14\u7ecf\u5e38\u91cd\u590d\u4f7f\u7528\u7684\u4ee3\u7801\u653e\u7f6e\u5230\u51fd\u6570\u4e2d\uff0c\u5728\u9700\u8981\u4f7f\u7528\u8fd9\u4e9b\u529f\u80fd\u7684\u65f6\u5019\u53ea\u8981\u8c03\u7528\u51fd\u6570\u5373\u53ef\uff1b\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u7684\u529f\u80fd\u8fc7\u4e8e\u590d\u6742\u548c\u81c3\u80bf\uff0c\u6211\u4eec\u53c8\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5c06\u51fd\u6570\u7ee7\u7eed\u5207\u5206\u4e3a\u5b50\u51fd\u6570\u6765\u964d\u4f4e\u7cfb\u7edf\u7684\u590d\u6742\u6027\u3002\u4f46\u662f\u8bf4\u4e86\u8fd9\u4e48\u591a\uff0c\u4e0d\u77e5\u9053\u5927\u5bb6\u662f\u5426\u53d1\u73b0\uff0c\u6240\u8c13\u7f16\u7a0b\u5c31\u662f\u7a0b\u5e8f\u5458\u6309\u7167\u8ba1\u7b97\u673a\u7684\u5de5\u4f5c\u65b9\u5f0f\u63a7\u5236\u8ba1\u7b97\u673a\u5b8c\u6210\u5404\u79cd\u4efb\u52a1\u3002\u4f46\u662f\uff0c\u8ba1\u7b97\u673a\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u6b63\u5e38\u4eba\u7c7b\u7684\u601d\u7ef4\u6a21\u5f0f\u662f\u4e0d\u540c\u7684\uff0c\u5982\u679c\u7f16\u7a0b\u5c31\u5fc5\u987b\u5f97\u629b\u5f03\u4eba\u7c7b\u6b63\u5e38\u7684\u601d\u7ef4\u65b9\u5f0f\u53bb\u8fce\u5408\u8ba1\u7b97\u673a\uff0c\u7f16\u7a0b\u7684\u4e50\u8da3\u5c31\u5c11\u4e86\u5f88\u591a\uff0c\u201c\u6bcf\u4e2a\u4eba\u90fd\u5e94\u8be5\u5b66\u4e60\u7f16\u7a0b\u201d\u8fd9\u6837\u7684\u8c6a\u8a00\u58ee\u8bed\u5c31\u53ea\u80fd\u8bf4\u8bf4\u800c\u5df2\u3002\u5f53\u7136\uff0c\u8fd9\u4e9b\u8fd8\u4e0d\u662f\u6700\u91cd\u8981\u7684\uff0c\u6700\u91cd\u8981\u7684\u662f\u5f53\u6211\u4eec\u9700\u8981\u5f00\u53d1\u4e00\u4e2a\u590d\u6742\u7684\u7cfb\u7edf\u65f6\uff0c\u4ee3\u7801\u7684\u590d\u6742\u6027\u4f1a\u8ba9\u5f00\u53d1\u548c\u7ef4\u62a4\u5de5\u4f5c\u90fd\u53d8\u5f97\u4e3e\u6b65\u7ef4\u8270\uff0c\u6240\u4ee5\u5728\u4e0a\u4e16\u7eaa60\u5e74\u4ee3\u672b\u671f\uff0c\u201c \u8f6f\u4ef6\u5371\u673a \u201d\u3001\u201c \u8f6f\u4ef6\u5de5\u7a0b \u201d\u7b49\u4e00\u7cfb\u5217\u7684\u6982\u5ff5\u5f00\u59cb\u5728\u884c\u4e1a\u4e2d\u51fa\u73b0\u3002 \u5f53\u7136\uff0c\u7a0b\u5e8f\u5458\u5708\u5b50\u5185\u7684\u4eba\u90fd\u77e5\u9053\uff0c\u73b0\u5b9e\u4e2d\u5e76\u6ca1\u6709\u89e3\u51b3\u4e0a\u9762\u6240\u8bf4\u7684\u8fd9\u4e9b\u95ee\u9898\u7684\u201c \u94f6\u5f39 \u201d\uff0c\u771f\u6b63\u8ba9\u8f6f\u4ef6\u5f00\u53d1\u8005\u770b\u5230\u5e0c\u671b\u7684\u662f\u4e0a\u4e16\u7eaa70\u5e74\u4ee3\u8bde\u751f\u7684 Smalltalk \u7f16\u7a0b\u8bed\u8a00\u4e2d\u5f15\u5165\u7684\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u601d\u60f3\uff08\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u96cf\u5f62\u53ef\u4ee5\u8ffd\u6eaf\u5230\u66f4\u65e9\u671f\u7684 Simula \u8bed\u8a00\uff09\u3002\u6309\u7167\u8fd9\u79cd\u7f16\u7a0b\u7406\u5ff5\uff0c\u7a0b\u5e8f\u4e2d\u7684\u6570\u636e\u548c\u64cd\u4f5c\u6570\u636e\u7684\u51fd\u6570\u662f\u4e00\u4e2a\u903b\u8f91\u4e0a\u7684\u6574\u4f53\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u201c\u5bf9\u8c61\u201d\uff0c\u800c\u6211\u4eec\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u5f0f\u5c31\u662f\u521b\u5efa\u51fa\u9700\u8981\u7684\u5bf9\u8c61\u5e76\u5411\u5bf9\u8c61\u53d1\u51fa\u5404\u79cd\u5404\u6837\u7684\u6d88\u606f\uff0c\u591a\u4e2a\u5bf9\u8c61\u7684\u534f\u540c\u5de5\u4f5c\u6700\u7ec8\u53ef\u4ee5\u8ba9\u6211\u4eec\u6784\u9020\u51fa\u590d\u6742\u7684\u7cfb\u7edf\u6765\u89e3\u51b3\u73b0\u5b9e\u4e2d\u7684\u95ee\u9898\u3002 \u8bf4\u660e \uff1a\u5f53\u7136\u9762\u5411\u5bf9\u8c61\u4e5f\u4e0d\u662f\u89e3\u51b3\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u6240\u6709\u95ee\u9898\u7684\u6700\u540e\u7684\u201c\u94f6\u5f39\u201d\uff0c\u6240\u4ee5\u4eca\u5929\u7684\u9ad8\u7ea7\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u51e0\u4e4e\u90fd\u63d0\u4f9b\u4e86\u5bf9\u591a\u79cd\u7f16\u7a0b\u8303\u5f0f\u7684\u652f\u6301\uff0cPython\u4e5f\u4e0d\u4f8b\u5916\u3002 \u7c7b\u548c\u5bf9\u8c61 \u7b80\u5355\u7684\u8bf4\uff0c\u7c7b\u662f\u5bf9\u8c61\u7684\u84dd\u56fe\u548c\u6a21\u677f\uff0c\u800c\u5bf9\u8c61\u662f\u7c7b\u7684\u5b9e\u4f8b\u3002\u8fd9\u4e2a\u89e3\u91ca\u867d\u7136\u6709\u70b9\u50cf\u7528\u6982\u5ff5\u5728\u89e3\u91ca\u6982\u5ff5\uff0c\u4f46\u662f\u4ece\u8fd9\u53e5\u8bdd\u6211\u4eec\u81f3\u5c11\u53ef\u4ee5\u770b\u51fa\uff0c\u7c7b\u662f\u62bd\u8c61\u7684\u6982\u5ff5\uff0c\u800c\u5bf9\u8c61\u662f\u5177\u4f53\u7684\u4e1c\u897f\u3002\u5728\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u4e16\u754c\u4e2d\uff0c\u4e00\u5207\u7686\u4e3a\u5bf9\u8c61\uff0c\u5bf9\u8c61\u90fd\u6709\u5c5e\u6027\u548c\u884c\u4e3a\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\uff0c\u800c\u4e14\u5bf9\u8c61\u4e00\u5b9a\u5c5e\u4e8e\u67d0\u4e2a\u7c7b\uff08\u578b\uff09\u3002\u5f53\u6211\u4eec\u628a\u4e00\u5927\u5806\u62e5\u6709\u5171\u540c\u7279\u5f81\u7684\u5bf9\u8c61\u7684\u9759\u6001\u7279\u5f81\uff08\u5c5e\u6027\uff09\u548c\u52a8\u6001\u7279\u5f81\uff08\u884c\u4e3a\uff09\u90fd\u62bd\u53d6\u51fa\u6765\u540e\uff0c\u5c31\u53ef\u4ee5\u5b9a\u4e49\u51fa\u4e00\u4e2a\u53eb\u505a\u201c\u7c7b\u201d\u7684\u4e1c\u897f\u3002 \u5b9a\u4e49\u7c7b \u5728Python\u4e2d\u53ef\u4ee5\u4f7f\u7528 class \u5173\u952e\u5b57\u5b9a\u4e49\u7c7b\uff0c\u7136\u540e\u5728\u7c7b\u4e2d\u901a\u8fc7\u4e4b\u524d\u5b66\u4e60\u8fc7\u7684\u51fd\u6570\u6765\u5b9a\u4e49\u65b9\u6cd5\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06\u5bf9\u8c61\u7684\u52a8\u6001\u7279\u5f81\u63cf\u8ff0\u51fa\u6765\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 class Student(object): # __init__\u662f\u4e00\u4e2a\u7279\u6b8a\u65b9\u6cd5\u7528\u4e8e\u5728\u521b\u5efa\u5bf9\u8c61\u65f6\u8fdb\u884c\u521d\u59cb\u5316\u64cd\u4f5c # \u901a\u8fc7\u8fd9\u4e2a\u65b9\u6cd5\u6211\u4eec\u53ef\u4ee5\u4e3a\u5b66\u751f\u5bf9\u8c61\u7ed1\u5b9aname\u548cage\u4e24\u4e2a\u5c5e\u6027 def __init__(self, name, age): self.name = name self.age = age def study(self, course_name): print('%s\u6b63\u5728\u5b66\u4e60%s.' % (self.name, course_name)) # PEP 8\u8981\u6c42\u6807\u8bc6\u7b26\u7684\u540d\u5b57\u7528\u5168\u5c0f\u5199\u591a\u4e2a\u5355\u8bcd\u7528\u4e0b\u5212\u7ebf\u8fde\u63a5 # \u4f46\u662f\u5f88\u591a\u7a0b\u5e8f\u5458\u548c\u516c\u53f8\u66f4\u503e\u5411\u4e8e\u4f7f\u7528\u9a7c\u5cf0\u547d\u540d\u6cd5(\u9a7c\u5cf0\u6807\u8bc6) def watch_av(self): if self.age < 18: print('%s\u53ea\u80fd\u89c2\u770b\u300a\u718a\u51fa\u6ca1\u300b.' % self.name) else: print('%s\u6b63\u5728\u89c2\u770b\u5c9b\u56fd\u7231\u60c5\u52a8\u4f5c\u7247.' % self.name \u8bf4\u660e \uff1a\u5199\u5728\u7c7b\u4e2d\u7684\u51fd\u6570\uff0c\u6211\u4eec\u901a\u5e38\u79f0\u4e4b\u4e3a\uff08\u5bf9\u8c61\u7684\uff09\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5c31\u662f\u5bf9\u8c61\u53ef\u4ee5\u63a5\u6536\u7684\u6d88\u606f\u3002 \u521b\u5efa\u548c\u4f7f\u7528\u5bf9\u8c61 \u5f53\u6211\u4eec\u5b9a\u4e49\u597d\u4e00\u4e2a\u7c7b\u4e4b\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u5bf9\u8c61\u5e76\u7ed9\u5bf9\u8c61\u53d1\u6d88\u606f\u3002 def main(): # \u521b\u5efa\u5b66\u751f\u5bf9\u8c61\u5e76\u6307\u5b9a\u59d3\u540d\u548c\u5e74\u9f84 stu1 = Student('\u9a86\u660a', 38) # \u7ed9\u5bf9\u8c61\u53d1study\u6d88\u606f stu1.study('Python\u7a0b\u5e8f\u8bbe\u8ba1') # \u7ed9\u5bf9\u8c61\u53d1watch_av\u6d88\u606f stu1.watch_av() stu2 = Student('\u738b\u5927\u9524', 15) stu2.study('\u601d\u60f3\u54c1\u5fb7') stu2.watch_av() if __name__ == '__main__': main() \u8bbf\u95ee\u53ef\u89c1\u6027\u95ee\u9898 \u5bf9\u4e8e\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6709C++\u3001Java\u3001C#\u7b49\u7f16\u7a0b\u7ecf\u9a8c\u7684\u7a0b\u5e8f\u5458\u53ef\u80fd\u4f1a\u95ee\uff0c\u6211\u4eec\u7ed9 Student \u5bf9\u8c61\u7ed1\u5b9a\u7684 name \u548c age \u5c5e\u6027\u5230\u5e95\u5177\u6709\u600e\u6837\u7684\u8bbf\u95ee\u6743\u9650\uff08\u4e5f\u79f0\u4e3a\u53ef\u89c1\u6027\uff09\u3002\u56e0\u4e3a\u5728\u5f88\u591a\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u5c06\u5bf9\u8c61\u7684\u5c5e\u6027\u8bbe\u7f6e\u4e3a\u79c1\u6709\u7684\uff08private\uff09\u6216\u53d7\u4fdd\u62a4\u7684\uff08protected\uff09\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u4e0d\u5141\u8bb8\u5916\u754c\u8bbf\u95ee\uff0c\u800c\u5bf9\u8c61\u7684\u65b9\u6cd5\u901a\u5e38\u90fd\u662f\u516c\u5f00\u7684\uff08public\uff09\uff0c\u56e0\u4e3a\u516c\u5f00\u7684\u65b9\u6cd5\u5c31\u662f\u5bf9\u8c61\u80fd\u591f\u63a5\u53d7\u7684\u6d88\u606f\u3002\u5728Python\u4e2d\uff0c\u5c5e\u6027\u548c\u65b9\u6cd5\u7684\u8bbf\u95ee\u6743\u9650\u53ea\u6709\u4e24\u79cd\uff0c\u4e5f\u5c31\u662f\u516c\u5f00\u7684\u548c\u79c1\u6709\u7684\uff0c\u5982\u679c\u5e0c\u671b\u5c5e\u6027\u662f\u79c1\u6709\u7684\uff0c\u5728\u7ed9\u5c5e\u6027\u547d\u540d\u65f6\u53ef\u4ee5\u7528\u4e24\u4e2a\u4e0b\u5212\u7ebf\u4f5c\u4e3a\u5f00\u5934\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u9a8c\u8bc1\u8fd9\u4e00\u70b9\u3002 class Test: def __init__(self, foo): self.__foo = foo def __bar(self): print(self.__foo) print('__bar') def main(): test = Test('hello') # AttributeError: 'Test' object has no attribute '__bar' test.__bar() # AttributeError: 'Test' object has no attribute '__foo' print(test.__foo) if __name__ == \"__main__\": main() \u4f46\u662f\uff0cPython\u5e76\u6ca1\u6709\u4ece\u8bed\u6cd5\u4e0a\u4e25\u683c\u4fdd\u8bc1\u79c1\u6709\u5c5e\u6027\u6216\u65b9\u6cd5\u7684\u79c1\u5bc6\u6027\uff0c\u5b83\u53ea\u662f\u7ed9\u79c1\u6709\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u6362\u4e86\u4e00\u4e2a\u540d\u5b57\u6765\u201c\u59a8\u788d\u201d\u5bf9\u5b83\u4eec\u7684\u8bbf\u95ee\uff0c\u4e8b\u5b9e\u4e0a\u5982\u679c\u4f60\u77e5\u9053\u66f4\u6362\u540d\u5b57\u7684\u89c4\u5219\u4ecd\u7136\u53ef\u4ee5\u8bbf\u95ee\u5230\u5b83\u4eec\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5c31\u53ef\u4ee5\u9a8c\u8bc1\u8fd9\u4e00\u70b9\u3002\u4e4b\u6240\u4ee5\u8fd9\u6837\u8bbe\u5b9a\uff0c\u53ef\u4ee5\u7528\u8fd9\u6837\u4e00\u53e5\u540d\u8a00\u52a0\u4ee5\u89e3\u91ca\uff0c\u5c31\u662f\u201cWe are all consenting adults here\u201d\u3002\u56e0\u4e3a\u7edd\u5927\u591a\u6570\u7a0b\u5e8f\u5458\u90fd\u8ba4\u4e3a\u5f00\u653e\u6bd4\u5c01\u95ed\u8981\u597d\uff0c\u800c\u4e14\u7a0b\u5e8f\u5458\u8981\u81ea\u5df1\u4e3a\u81ea\u5df1\u7684\u884c\u4e3a\u8d1f\u8d23\u3002 class Test: def __init__(self, foo): self.__foo = foo def __bar(self): print(self.__foo) print('__bar') def main(): test = Test('hello') test._Test__bar() print(test._Test__foo) if __name__ == \"__main__\": main() \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u6211\u4eec\u5e76\u4e0d\u5efa\u8bae\u5c06\u5c5e\u6027\u8bbe\u7f6e\u4e3a\u79c1\u6709\u7684\uff0c\u56e0\u4e3a\u8fd9\u4f1a\u5bfc\u81f4\u5b50\u7c7b\u65e0\u6cd5\u8bbf\u95ee\uff08\u540e\u9762\u4f1a\u8bb2\u5230\uff09\u3002\u6240\u4ee5\u5927\u591a\u6570Python\u7a0b\u5e8f\u5458\u4f1a\u9075\u5faa\u4e00\u79cd\u547d\u540d\u60ef\u4f8b\u5c31\u662f\u8ba9\u5c5e\u6027\u540d\u4ee5\u5355\u4e0b\u5212\u7ebf\u5f00\u5934\u6765\u8868\u793a\u5c5e\u6027\u662f\u53d7\u4fdd\u62a4\u7684\uff0c\u672c\u7c7b\u4e4b\u5916\u7684\u4ee3\u7801\u5728\u8bbf\u95ee\u8fd9\u6837\u7684\u5c5e\u6027\u65f6\u5e94\u8be5\u8981\u4fdd\u6301\u614e\u91cd\u3002\u8fd9\u79cd\u505a\u6cd5\u5e76\u4e0d\u662f\u8bed\u6cd5\u4e0a\u7684\u89c4\u5219\uff0c\u5355\u4e0b\u5212\u7ebf\u5f00\u5934\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u5916\u754c\u4ecd\u7136\u662f\u53ef\u4ee5\u8bbf\u95ee\u7684\uff0c\u6240\u4ee5\u66f4\u591a\u7684\u65f6\u5019\u5b83\u662f\u4e00\u79cd\u6697\u793a\u6216\u9690\u55bb\uff0c\u5173\u4e8e\u8fd9\u4e00\u70b9\u53ef\u4ee5\u770b\u770b\u6211\u7684 \u300aPython - \u90a3\u4e9b\u5e74\u6211\u4eec\u8e29\u8fc7\u7684\u90a3\u4e9b\u5751\u300b \u6587\u7ae0\u4e2d\u7684\u8bb2\u89e3\u3002 \u9762\u5411\u5bf9\u8c61\u7684\u652f\u67f1 \u9762\u5411\u5bf9\u8c61\u6709\u4e09\u5927\u652f\u67f1\uff1a\u5c01\u88c5\u3001\u7ee7\u627f\u548c\u591a\u6001\u3002\u540e\u9762\u4e24\u4e2a\u6982\u5ff5\u5728\u4e0b\u4e00\u4e2a\u7ae0\u8282\u4e2d\u8fdb\u884c\u8be6\u7ec6\u7684\u8bf4\u660e\uff0c\u8fd9\u91cc\u6211\u4eec\u5148\u8bf4\u4e00\u4e0b\u4ec0\u4e48\u662f\u5c01\u88c5\u3002\u6211\u81ea\u5df1\u5bf9\u5c01\u88c5\u7684\u7406\u89e3\u662f\u201c\u9690\u85cf\u4e00\u5207\u53ef\u4ee5\u9690\u85cf\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u53ea\u5411\u5916\u754c\u66b4\u9732\uff08\u63d0\u4f9b\uff09\u7b80\u5355\u7684\u7f16\u7a0b\u63a5\u53e3\u201d\u3002\u6211\u4eec\u5728\u7c7b\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\u5176\u5b9e\u5c31\u662f\u628a\u6570\u636e\u548c\u5bf9\u6570\u636e\u7684\u64cd\u4f5c\u5c01\u88c5\u8d77\u6765\u4e86\uff0c\u5728\u6211\u4eec\u521b\u5efa\u4e86\u5bf9\u8c61\u4e4b\u540e\uff0c\u53ea\u9700\u8981\u7ed9\u5bf9\u8c61\u53d1\u9001\u4e00\u4e2a\u6d88\u606f\uff08\u8c03\u7528\u65b9\u6cd5\uff09\u5c31\u53ef\u4ee5\u6267\u884c\u65b9\u6cd5\u4e2d\u7684\u4ee3\u7801\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u65b9\u6cd5\u7684\u540d\u5b57\u548c\u4f20\u5165\u7684\u53c2\u6570\uff08\u65b9\u6cd5\u7684\u5916\u90e8\u89c6\u56fe\uff09\uff0c\u800c\u4e0d\u9700\u8981\u77e5\u9053\u65b9\u6cd5\u5185\u90e8\u7684\u5b9e\u73b0\u7ec6\u8282\uff08\u65b9\u6cd5\u7684\u5185\u90e8\u89c6\u56fe\uff09\u3002 \u7ec3\u4e60 \u7ec3\u4e601\uff1a\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u63cf\u8ff0\u6570\u5b57\u65f6\u949f class Clock(object): \"\"\"\u6570\u5b57\u65f6\u949f\"\"\" def __init__(self, hour=0, minute=0, second=0): \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5 :param hour: \u65f6 :param minute: \u5206 :param second: \u79d2 \"\"\" self._hour = hour self._minute = minute self._second = second def run(self): \"\"\"\u8d70\u5b57\"\"\" self._second += 1 if self._second == 60: self._second = 0 self._minute += 1 if self._minute == 60: self._minute = 0 self._hour += 1 if self._hour == 24: self._hour = 0 def show(self): \"\"\"\u663e\u793a\u65f6\u95f4\"\"\" return '%02d:%02d:%02d' % \\ (self._hour, self._minute, self._second) def main(): clock = Clock(23, 59, 58) while True: print(clock.show()) sleep(1) clock.run() if __name__ == '__main__': main() \u7ec3\u4e602\uff1a\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u63cf\u8ff0\u5e73\u9762\u4e0a\u7684\u70b9\u5e76\u63d0\u4f9b\u79fb\u52a8\u70b9\u548c\u8ba1\u7b97\u5230\u53e6\u4e00\u4e2a\u70b9\u8ddd\u79bb\u7684\u65b9\u6cd5\u3002 from math import sqrt class Point(object): def __init__(self, x=0, y=0): \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5 :param x: \u6a2a\u5750\u6807 :param y: \u7eb5\u5750\u6807 \"\"\" self.x = x self.y = y def move_to(self, x, y): \"\"\"\u79fb\u52a8\u5230\u6307\u5b9a\u4f4d\u7f6e :param x: \u65b0\u7684\u6a2a\u5750\u6807 \"param y: \u65b0\u7684\u7eb5\u5750\u6807 \"\"\" self.x = x self.y = y def move_by(self, dx, dy): \"\"\"\u79fb\u52a8\u6307\u5b9a\u7684\u589e\u91cf :param dx: \u6a2a\u5750\u6807\u7684\u589e\u91cf \"param dy: \u7eb5\u5750\u6807\u7684\u589e\u91cf \"\"\" self.x += dx self.y += dy def distance_to(self, other): \"\"\"\u8ba1\u7b97\u4e0e\u53e6\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb :param other: \u53e6\u4e00\u4e2a\u70b9 \"\"\" dx = self.x - other.x dy = self.y - other.y return sqrt(dx ** 2 + dy ** 2) def __str__(self): return '(%s, %s)' % (str(self.x), str(self.y)) def main(): p1 = Point(3, 5) p2 = Point() print(p1) print(p2) p2.move_by(-1, 2) print(p2) print(p1.distance_to(p2)) if __name__ == '__main__': main() \u8bf4\u660e \uff1a\u672c\u7ae0\u4e2d\u7684\u63d2\u56fe\u6765\u81ea\u4e8eGrady Booch\u7b49\u8457\u4f5c\u7684 \u300a\u9762\u5411\u5bf9\u8c61\u5206\u6790\u4e0e\u8bbe\u8ba1\u300b \u4e00\u4e66\uff0c\u8be5\u4e66\u662f\u8bb2\u89e3\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u7ecf\u5178\u8457\u4f5c\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u8d2d\u4e70\u548c\u9605\u8bfb\u8fd9\u672c\u4e66\u6765\u4e86\u89e3\u66f4\u591a\u7684\u9762\u5411\u5bf9\u8c61\u7684\u76f8\u5173\u77e5\u8bc6\u3002","title":"\u7b2c\u516b\u5929"},{"location":"new/8%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/#_1","text":"\u6d3b\u5728\u5f53\u4e0b\u7684\u7a0b\u5e8f\u5458\u5e94\u8be5\u90fd\u542c\u8fc7\u201c\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u201d\u4e00\u8bcd\uff0c\u4e5f\u7ecf\u5e38\u6709\u4eba\u95ee\u80fd\u4e0d\u80fd\u7528\u4e00\u53e5\u8bdd\u89e3\u91ca\u4e0b\u4ec0\u4e48\u662f\u201c\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u201d\uff0c\u6211\u4eec\u5148\u6765\u770b\u770b\u6bd4\u8f83\u6b63\u5f0f\u7684\u8bf4\u6cd5\u3002 \u628a\u4e00\u7ec4\u6570\u636e\u7ed3\u6784\u548c\u5904\u7406\u5b83\u4eec\u7684\u65b9\u6cd5\u7ec4\u6210\u5bf9\u8c61\uff08object\uff09\uff0c\u628a\u76f8\u540c\u884c\u4e3a\u7684\u5bf9\u8c61\u5f52\u7eb3\u4e3a\u7c7b\uff08class\uff09\uff0c\u901a\u8fc7\u7c7b\u7684\u5c01\u88c5\uff08encapsulation\uff09\u9690\u85cf\u5185\u90e8\u7ec6\u8282\uff0c\u901a\u8fc7\u7ee7\u627f\uff08inheritance\uff09\u5b9e\u73b0\u7c7b\u7684\u7279\u5316\uff08specialization\uff09\u548c\u6cdb\u5316\uff08generalization\uff09\uff0c\u901a\u8fc7\u591a\u6001\uff08polymorphism\uff09\u5b9e\u73b0\u57fa\u4e8e\u5bf9\u8c61\u7c7b\u578b\u7684\u52a8\u6001\u5206\u6d3e\u3002 \u8fd9\u6837\u4e00\u8bf4\u662f\u4e0d\u662f\u66f4\u4e0d\u660e\u767d\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u770b\u770b\u66f4\u901a\u4fd7\u6613\u61c2\u7684\u8bf4\u6cd5\uff0c\u4e0b\u9762\u8fd9\u6bb5\u5185\u5bb9\u6765\u81ea\u4e8e \u77e5\u4e4e \u3002 \u8bf4\u660e \uff1a\u4ee5\u4e0a\u7684\u5185\u5bb9\u6765\u81ea\u4e8e\u7f51\u7edc\uff0c\u4e0d\u4ee3\u8868\u4f5c\u8005\u672c\u4eba\u7684\u89c2\u70b9\u548c\u770b\u6cd5\uff0c\u4e0e\u4f5c\u8005\u672c\u4eba\u7acb\u573a\u65e0\u5173\uff0c\u76f8\u5173\u8d23\u4efb\u4e0d\u7531\u4f5c\u8005\u627f\u62c5\u3002 \u4e4b\u524d\u6211\u4eec\u8bf4\u8fc7\u201c\u7a0b\u5e8f\u662f\u6307\u4ee4\u7684\u96c6\u5408\u201d\uff0c\u6211\u4eec\u5728\u7a0b\u5e8f\u4e2d\u4e66\u5199\u7684\u8bed\u53e5\u5728\u6267\u884c\u65f6\u4f1a\u53d8\u6210\u4e00\u6761\u6216\u591a\u6761\u6307\u4ee4\u7136\u540e\u7531CPU\u53bb\u6267\u884c\u3002\u5f53\u7136\u4e3a\u4e86\u7b80\u5316\u7a0b\u5e8f\u7684\u8bbe\u8ba1\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u51fd\u6570\u7684\u6982\u5ff5\uff0c\u628a\u76f8\u5bf9\u72ec\u7acb\u4e14\u7ecf\u5e38\u91cd\u590d\u4f7f\u7528\u7684\u4ee3\u7801\u653e\u7f6e\u5230\u51fd\u6570\u4e2d\uff0c\u5728\u9700\u8981\u4f7f\u7528\u8fd9\u4e9b\u529f\u80fd\u7684\u65f6\u5019\u53ea\u8981\u8c03\u7528\u51fd\u6570\u5373\u53ef\uff1b\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u7684\u529f\u80fd\u8fc7\u4e8e\u590d\u6742\u548c\u81c3\u80bf\uff0c\u6211\u4eec\u53c8\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5c06\u51fd\u6570\u7ee7\u7eed\u5207\u5206\u4e3a\u5b50\u51fd\u6570\u6765\u964d\u4f4e\u7cfb\u7edf\u7684\u590d\u6742\u6027\u3002\u4f46\u662f\u8bf4\u4e86\u8fd9\u4e48\u591a\uff0c\u4e0d\u77e5\u9053\u5927\u5bb6\u662f\u5426\u53d1\u73b0\uff0c\u6240\u8c13\u7f16\u7a0b\u5c31\u662f\u7a0b\u5e8f\u5458\u6309\u7167\u8ba1\u7b97\u673a\u7684\u5de5\u4f5c\u65b9\u5f0f\u63a7\u5236\u8ba1\u7b97\u673a\u5b8c\u6210\u5404\u79cd\u4efb\u52a1\u3002\u4f46\u662f\uff0c\u8ba1\u7b97\u673a\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u6b63\u5e38\u4eba\u7c7b\u7684\u601d\u7ef4\u6a21\u5f0f\u662f\u4e0d\u540c\u7684\uff0c\u5982\u679c\u7f16\u7a0b\u5c31\u5fc5\u987b\u5f97\u629b\u5f03\u4eba\u7c7b\u6b63\u5e38\u7684\u601d\u7ef4\u65b9\u5f0f\u53bb\u8fce\u5408\u8ba1\u7b97\u673a\uff0c\u7f16\u7a0b\u7684\u4e50\u8da3\u5c31\u5c11\u4e86\u5f88\u591a\uff0c\u201c\u6bcf\u4e2a\u4eba\u90fd\u5e94\u8be5\u5b66\u4e60\u7f16\u7a0b\u201d\u8fd9\u6837\u7684\u8c6a\u8a00\u58ee\u8bed\u5c31\u53ea\u80fd\u8bf4\u8bf4\u800c\u5df2\u3002\u5f53\u7136\uff0c\u8fd9\u4e9b\u8fd8\u4e0d\u662f\u6700\u91cd\u8981\u7684\uff0c\u6700\u91cd\u8981\u7684\u662f\u5f53\u6211\u4eec\u9700\u8981\u5f00\u53d1\u4e00\u4e2a\u590d\u6742\u7684\u7cfb\u7edf\u65f6\uff0c\u4ee3\u7801\u7684\u590d\u6742\u6027\u4f1a\u8ba9\u5f00\u53d1\u548c\u7ef4\u62a4\u5de5\u4f5c\u90fd\u53d8\u5f97\u4e3e\u6b65\u7ef4\u8270\uff0c\u6240\u4ee5\u5728\u4e0a\u4e16\u7eaa60\u5e74\u4ee3\u672b\u671f\uff0c\u201c \u8f6f\u4ef6\u5371\u673a \u201d\u3001\u201c \u8f6f\u4ef6\u5de5\u7a0b \u201d\u7b49\u4e00\u7cfb\u5217\u7684\u6982\u5ff5\u5f00\u59cb\u5728\u884c\u4e1a\u4e2d\u51fa\u73b0\u3002 \u5f53\u7136\uff0c\u7a0b\u5e8f\u5458\u5708\u5b50\u5185\u7684\u4eba\u90fd\u77e5\u9053\uff0c\u73b0\u5b9e\u4e2d\u5e76\u6ca1\u6709\u89e3\u51b3\u4e0a\u9762\u6240\u8bf4\u7684\u8fd9\u4e9b\u95ee\u9898\u7684\u201c \u94f6\u5f39 \u201d\uff0c\u771f\u6b63\u8ba9\u8f6f\u4ef6\u5f00\u53d1\u8005\u770b\u5230\u5e0c\u671b\u7684\u662f\u4e0a\u4e16\u7eaa70\u5e74\u4ee3\u8bde\u751f\u7684 Smalltalk \u7f16\u7a0b\u8bed\u8a00\u4e2d\u5f15\u5165\u7684\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u601d\u60f3\uff08\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u96cf\u5f62\u53ef\u4ee5\u8ffd\u6eaf\u5230\u66f4\u65e9\u671f\u7684 Simula \u8bed\u8a00\uff09\u3002\u6309\u7167\u8fd9\u79cd\u7f16\u7a0b\u7406\u5ff5\uff0c\u7a0b\u5e8f\u4e2d\u7684\u6570\u636e\u548c\u64cd\u4f5c\u6570\u636e\u7684\u51fd\u6570\u662f\u4e00\u4e2a\u903b\u8f91\u4e0a\u7684\u6574\u4f53\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u201c\u5bf9\u8c61\u201d\uff0c\u800c\u6211\u4eec\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u5f0f\u5c31\u662f\u521b\u5efa\u51fa\u9700\u8981\u7684\u5bf9\u8c61\u5e76\u5411\u5bf9\u8c61\u53d1\u51fa\u5404\u79cd\u5404\u6837\u7684\u6d88\u606f\uff0c\u591a\u4e2a\u5bf9\u8c61\u7684\u534f\u540c\u5de5\u4f5c\u6700\u7ec8\u53ef\u4ee5\u8ba9\u6211\u4eec\u6784\u9020\u51fa\u590d\u6742\u7684\u7cfb\u7edf\u6765\u89e3\u51b3\u73b0\u5b9e\u4e2d\u7684\u95ee\u9898\u3002 \u8bf4\u660e \uff1a\u5f53\u7136\u9762\u5411\u5bf9\u8c61\u4e5f\u4e0d\u662f\u89e3\u51b3\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u6240\u6709\u95ee\u9898\u7684\u6700\u540e\u7684\u201c\u94f6\u5f39\u201d\uff0c\u6240\u4ee5\u4eca\u5929\u7684\u9ad8\u7ea7\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u51e0\u4e4e\u90fd\u63d0\u4f9b\u4e86\u5bf9\u591a\u79cd\u7f16\u7a0b\u8303\u5f0f\u7684\u652f\u6301\uff0cPython\u4e5f\u4e0d\u4f8b\u5916\u3002","title":"\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u57fa\u7840"},{"location":"new/8%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/#_2","text":"\u7b80\u5355\u7684\u8bf4\uff0c\u7c7b\u662f\u5bf9\u8c61\u7684\u84dd\u56fe\u548c\u6a21\u677f\uff0c\u800c\u5bf9\u8c61\u662f\u7c7b\u7684\u5b9e\u4f8b\u3002\u8fd9\u4e2a\u89e3\u91ca\u867d\u7136\u6709\u70b9\u50cf\u7528\u6982\u5ff5\u5728\u89e3\u91ca\u6982\u5ff5\uff0c\u4f46\u662f\u4ece\u8fd9\u53e5\u8bdd\u6211\u4eec\u81f3\u5c11\u53ef\u4ee5\u770b\u51fa\uff0c\u7c7b\u662f\u62bd\u8c61\u7684\u6982\u5ff5\uff0c\u800c\u5bf9\u8c61\u662f\u5177\u4f53\u7684\u4e1c\u897f\u3002\u5728\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u4e16\u754c\u4e2d\uff0c\u4e00\u5207\u7686\u4e3a\u5bf9\u8c61\uff0c\u5bf9\u8c61\u90fd\u6709\u5c5e\u6027\u548c\u884c\u4e3a\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\uff0c\u800c\u4e14\u5bf9\u8c61\u4e00\u5b9a\u5c5e\u4e8e\u67d0\u4e2a\u7c7b\uff08\u578b\uff09\u3002\u5f53\u6211\u4eec\u628a\u4e00\u5927\u5806\u62e5\u6709\u5171\u540c\u7279\u5f81\u7684\u5bf9\u8c61\u7684\u9759\u6001\u7279\u5f81\uff08\u5c5e\u6027\uff09\u548c\u52a8\u6001\u7279\u5f81\uff08\u884c\u4e3a\uff09\u90fd\u62bd\u53d6\u51fa\u6765\u540e\uff0c\u5c31\u53ef\u4ee5\u5b9a\u4e49\u51fa\u4e00\u4e2a\u53eb\u505a\u201c\u7c7b\u201d\u7684\u4e1c\u897f\u3002","title":"\u7c7b\u548c\u5bf9\u8c61"},{"location":"new/8%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/#_3","text":"\u5728Python\u4e2d\u53ef\u4ee5\u4f7f\u7528 class \u5173\u952e\u5b57\u5b9a\u4e49\u7c7b\uff0c\u7136\u540e\u5728\u7c7b\u4e2d\u901a\u8fc7\u4e4b\u524d\u5b66\u4e60\u8fc7\u7684\u51fd\u6570\u6765\u5b9a\u4e49\u65b9\u6cd5\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06\u5bf9\u8c61\u7684\u52a8\u6001\u7279\u5f81\u63cf\u8ff0\u51fa\u6765\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 class Student(object): # __init__\u662f\u4e00\u4e2a\u7279\u6b8a\u65b9\u6cd5\u7528\u4e8e\u5728\u521b\u5efa\u5bf9\u8c61\u65f6\u8fdb\u884c\u521d\u59cb\u5316\u64cd\u4f5c # \u901a\u8fc7\u8fd9\u4e2a\u65b9\u6cd5\u6211\u4eec\u53ef\u4ee5\u4e3a\u5b66\u751f\u5bf9\u8c61\u7ed1\u5b9aname\u548cage\u4e24\u4e2a\u5c5e\u6027 def __init__(self, name, age): self.name = name self.age = age def study(self, course_name): print('%s\u6b63\u5728\u5b66\u4e60%s.' % (self.name, course_name)) # PEP 8\u8981\u6c42\u6807\u8bc6\u7b26\u7684\u540d\u5b57\u7528\u5168\u5c0f\u5199\u591a\u4e2a\u5355\u8bcd\u7528\u4e0b\u5212\u7ebf\u8fde\u63a5 # \u4f46\u662f\u5f88\u591a\u7a0b\u5e8f\u5458\u548c\u516c\u53f8\u66f4\u503e\u5411\u4e8e\u4f7f\u7528\u9a7c\u5cf0\u547d\u540d\u6cd5(\u9a7c\u5cf0\u6807\u8bc6) def watch_av(self): if self.age < 18: print('%s\u53ea\u80fd\u89c2\u770b\u300a\u718a\u51fa\u6ca1\u300b.' % self.name) else: print('%s\u6b63\u5728\u89c2\u770b\u5c9b\u56fd\u7231\u60c5\u52a8\u4f5c\u7247.' % self.name \u8bf4\u660e \uff1a\u5199\u5728\u7c7b\u4e2d\u7684\u51fd\u6570\uff0c\u6211\u4eec\u901a\u5e38\u79f0\u4e4b\u4e3a\uff08\u5bf9\u8c61\u7684\uff09\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5c31\u662f\u5bf9\u8c61\u53ef\u4ee5\u63a5\u6536\u7684\u6d88\u606f\u3002","title":"\u5b9a\u4e49\u7c7b"},{"location":"new/8%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/#_4","text":"\u5f53\u6211\u4eec\u5b9a\u4e49\u597d\u4e00\u4e2a\u7c7b\u4e4b\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u5bf9\u8c61\u5e76\u7ed9\u5bf9\u8c61\u53d1\u6d88\u606f\u3002 def main(): # \u521b\u5efa\u5b66\u751f\u5bf9\u8c61\u5e76\u6307\u5b9a\u59d3\u540d\u548c\u5e74\u9f84 stu1 = Student('\u9a86\u660a', 38) # \u7ed9\u5bf9\u8c61\u53d1study\u6d88\u606f stu1.study('Python\u7a0b\u5e8f\u8bbe\u8ba1') # \u7ed9\u5bf9\u8c61\u53d1watch_av\u6d88\u606f stu1.watch_av() stu2 = Student('\u738b\u5927\u9524', 15) stu2.study('\u601d\u60f3\u54c1\u5fb7') stu2.watch_av() if __name__ == '__main__': main()","title":"\u521b\u5efa\u548c\u4f7f\u7528\u5bf9\u8c61"},{"location":"new/8%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/#_5","text":"\u5bf9\u4e8e\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6709C++\u3001Java\u3001C#\u7b49\u7f16\u7a0b\u7ecf\u9a8c\u7684\u7a0b\u5e8f\u5458\u53ef\u80fd\u4f1a\u95ee\uff0c\u6211\u4eec\u7ed9 Student \u5bf9\u8c61\u7ed1\u5b9a\u7684 name \u548c age \u5c5e\u6027\u5230\u5e95\u5177\u6709\u600e\u6837\u7684\u8bbf\u95ee\u6743\u9650\uff08\u4e5f\u79f0\u4e3a\u53ef\u89c1\u6027\uff09\u3002\u56e0\u4e3a\u5728\u5f88\u591a\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u5c06\u5bf9\u8c61\u7684\u5c5e\u6027\u8bbe\u7f6e\u4e3a\u79c1\u6709\u7684\uff08private\uff09\u6216\u53d7\u4fdd\u62a4\u7684\uff08protected\uff09\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u4e0d\u5141\u8bb8\u5916\u754c\u8bbf\u95ee\uff0c\u800c\u5bf9\u8c61\u7684\u65b9\u6cd5\u901a\u5e38\u90fd\u662f\u516c\u5f00\u7684\uff08public\uff09\uff0c\u56e0\u4e3a\u516c\u5f00\u7684\u65b9\u6cd5\u5c31\u662f\u5bf9\u8c61\u80fd\u591f\u63a5\u53d7\u7684\u6d88\u606f\u3002\u5728Python\u4e2d\uff0c\u5c5e\u6027\u548c\u65b9\u6cd5\u7684\u8bbf\u95ee\u6743\u9650\u53ea\u6709\u4e24\u79cd\uff0c\u4e5f\u5c31\u662f\u516c\u5f00\u7684\u548c\u79c1\u6709\u7684\uff0c\u5982\u679c\u5e0c\u671b\u5c5e\u6027\u662f\u79c1\u6709\u7684\uff0c\u5728\u7ed9\u5c5e\u6027\u547d\u540d\u65f6\u53ef\u4ee5\u7528\u4e24\u4e2a\u4e0b\u5212\u7ebf\u4f5c\u4e3a\u5f00\u5934\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u9a8c\u8bc1\u8fd9\u4e00\u70b9\u3002 class Test: def __init__(self, foo): self.__foo = foo def __bar(self): print(self.__foo) print('__bar') def main(): test = Test('hello') # AttributeError: 'Test' object has no attribute '__bar' test.__bar() # AttributeError: 'Test' object has no attribute '__foo' print(test.__foo) if __name__ == \"__main__\": main() \u4f46\u662f\uff0cPython\u5e76\u6ca1\u6709\u4ece\u8bed\u6cd5\u4e0a\u4e25\u683c\u4fdd\u8bc1\u79c1\u6709\u5c5e\u6027\u6216\u65b9\u6cd5\u7684\u79c1\u5bc6\u6027\uff0c\u5b83\u53ea\u662f\u7ed9\u79c1\u6709\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u6362\u4e86\u4e00\u4e2a\u540d\u5b57\u6765\u201c\u59a8\u788d\u201d\u5bf9\u5b83\u4eec\u7684\u8bbf\u95ee\uff0c\u4e8b\u5b9e\u4e0a\u5982\u679c\u4f60\u77e5\u9053\u66f4\u6362\u540d\u5b57\u7684\u89c4\u5219\u4ecd\u7136\u53ef\u4ee5\u8bbf\u95ee\u5230\u5b83\u4eec\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5c31\u53ef\u4ee5\u9a8c\u8bc1\u8fd9\u4e00\u70b9\u3002\u4e4b\u6240\u4ee5\u8fd9\u6837\u8bbe\u5b9a\uff0c\u53ef\u4ee5\u7528\u8fd9\u6837\u4e00\u53e5\u540d\u8a00\u52a0\u4ee5\u89e3\u91ca\uff0c\u5c31\u662f\u201cWe are all consenting adults here\u201d\u3002\u56e0\u4e3a\u7edd\u5927\u591a\u6570\u7a0b\u5e8f\u5458\u90fd\u8ba4\u4e3a\u5f00\u653e\u6bd4\u5c01\u95ed\u8981\u597d\uff0c\u800c\u4e14\u7a0b\u5e8f\u5458\u8981\u81ea\u5df1\u4e3a\u81ea\u5df1\u7684\u884c\u4e3a\u8d1f\u8d23\u3002 class Test: def __init__(self, foo): self.__foo = foo def __bar(self): print(self.__foo) print('__bar') def main(): test = Test('hello') test._Test__bar() print(test._Test__foo) if __name__ == \"__main__\": main() \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u6211\u4eec\u5e76\u4e0d\u5efa\u8bae\u5c06\u5c5e\u6027\u8bbe\u7f6e\u4e3a\u79c1\u6709\u7684\uff0c\u56e0\u4e3a\u8fd9\u4f1a\u5bfc\u81f4\u5b50\u7c7b\u65e0\u6cd5\u8bbf\u95ee\uff08\u540e\u9762\u4f1a\u8bb2\u5230\uff09\u3002\u6240\u4ee5\u5927\u591a\u6570Python\u7a0b\u5e8f\u5458\u4f1a\u9075\u5faa\u4e00\u79cd\u547d\u540d\u60ef\u4f8b\u5c31\u662f\u8ba9\u5c5e\u6027\u540d\u4ee5\u5355\u4e0b\u5212\u7ebf\u5f00\u5934\u6765\u8868\u793a\u5c5e\u6027\u662f\u53d7\u4fdd\u62a4\u7684\uff0c\u672c\u7c7b\u4e4b\u5916\u7684\u4ee3\u7801\u5728\u8bbf\u95ee\u8fd9\u6837\u7684\u5c5e\u6027\u65f6\u5e94\u8be5\u8981\u4fdd\u6301\u614e\u91cd\u3002\u8fd9\u79cd\u505a\u6cd5\u5e76\u4e0d\u662f\u8bed\u6cd5\u4e0a\u7684\u89c4\u5219\uff0c\u5355\u4e0b\u5212\u7ebf\u5f00\u5934\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u5916\u754c\u4ecd\u7136\u662f\u53ef\u4ee5\u8bbf\u95ee\u7684\uff0c\u6240\u4ee5\u66f4\u591a\u7684\u65f6\u5019\u5b83\u662f\u4e00\u79cd\u6697\u793a\u6216\u9690\u55bb\uff0c\u5173\u4e8e\u8fd9\u4e00\u70b9\u53ef\u4ee5\u770b\u770b\u6211\u7684 \u300aPython - \u90a3\u4e9b\u5e74\u6211\u4eec\u8e29\u8fc7\u7684\u90a3\u4e9b\u5751\u300b \u6587\u7ae0\u4e2d\u7684\u8bb2\u89e3\u3002","title":"\u8bbf\u95ee\u53ef\u89c1\u6027\u95ee\u9898"},{"location":"new/8%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/#_6","text":"\u9762\u5411\u5bf9\u8c61\u6709\u4e09\u5927\u652f\u67f1\uff1a\u5c01\u88c5\u3001\u7ee7\u627f\u548c\u591a\u6001\u3002\u540e\u9762\u4e24\u4e2a\u6982\u5ff5\u5728\u4e0b\u4e00\u4e2a\u7ae0\u8282\u4e2d\u8fdb\u884c\u8be6\u7ec6\u7684\u8bf4\u660e\uff0c\u8fd9\u91cc\u6211\u4eec\u5148\u8bf4\u4e00\u4e0b\u4ec0\u4e48\u662f\u5c01\u88c5\u3002\u6211\u81ea\u5df1\u5bf9\u5c01\u88c5\u7684\u7406\u89e3\u662f\u201c\u9690\u85cf\u4e00\u5207\u53ef\u4ee5\u9690\u85cf\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u53ea\u5411\u5916\u754c\u66b4\u9732\uff08\u63d0\u4f9b\uff09\u7b80\u5355\u7684\u7f16\u7a0b\u63a5\u53e3\u201d\u3002\u6211\u4eec\u5728\u7c7b\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\u5176\u5b9e\u5c31\u662f\u628a\u6570\u636e\u548c\u5bf9\u6570\u636e\u7684\u64cd\u4f5c\u5c01\u88c5\u8d77\u6765\u4e86\uff0c\u5728\u6211\u4eec\u521b\u5efa\u4e86\u5bf9\u8c61\u4e4b\u540e\uff0c\u53ea\u9700\u8981\u7ed9\u5bf9\u8c61\u53d1\u9001\u4e00\u4e2a\u6d88\u606f\uff08\u8c03\u7528\u65b9\u6cd5\uff09\u5c31\u53ef\u4ee5\u6267\u884c\u65b9\u6cd5\u4e2d\u7684\u4ee3\u7801\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u65b9\u6cd5\u7684\u540d\u5b57\u548c\u4f20\u5165\u7684\u53c2\u6570\uff08\u65b9\u6cd5\u7684\u5916\u90e8\u89c6\u56fe\uff09\uff0c\u800c\u4e0d\u9700\u8981\u77e5\u9053\u65b9\u6cd5\u5185\u90e8\u7684\u5b9e\u73b0\u7ec6\u8282\uff08\u65b9\u6cd5\u7684\u5185\u90e8\u89c6\u56fe\uff09\u3002","title":"\u9762\u5411\u5bf9\u8c61\u7684\u652f\u67f1"},{"location":"new/8%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/#_7","text":"","title":"\u7ec3\u4e60"},{"location":"new/8%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/#1","text":"class Clock(object): \"\"\"\u6570\u5b57\u65f6\u949f\"\"\" def __init__(self, hour=0, minute=0, second=0): \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5 :param hour: \u65f6 :param minute: \u5206 :param second: \u79d2 \"\"\" self._hour = hour self._minute = minute self._second = second def run(self): \"\"\"\u8d70\u5b57\"\"\" self._second += 1 if self._second == 60: self._second = 0 self._minute += 1 if self._minute == 60: self._minute = 0 self._hour += 1 if self._hour == 24: self._hour = 0 def show(self): \"\"\"\u663e\u793a\u65f6\u95f4\"\"\" return '%02d:%02d:%02d' % \\ (self._hour, self._minute, self._second) def main(): clock = Clock(23, 59, 58) while True: print(clock.show()) sleep(1) clock.run() if __name__ == '__main__': main()","title":"\u7ec3\u4e601\uff1a\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u63cf\u8ff0\u6570\u5b57\u65f6\u949f"},{"location":"new/8%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/#2","text":"from math import sqrt class Point(object): def __init__(self, x=0, y=0): \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5 :param x: \u6a2a\u5750\u6807 :param y: \u7eb5\u5750\u6807 \"\"\" self.x = x self.y = y def move_to(self, x, y): \"\"\"\u79fb\u52a8\u5230\u6307\u5b9a\u4f4d\u7f6e :param x: \u65b0\u7684\u6a2a\u5750\u6807 \"param y: \u65b0\u7684\u7eb5\u5750\u6807 \"\"\" self.x = x self.y = y def move_by(self, dx, dy): \"\"\"\u79fb\u52a8\u6307\u5b9a\u7684\u589e\u91cf :param dx: \u6a2a\u5750\u6807\u7684\u589e\u91cf \"param dy: \u7eb5\u5750\u6807\u7684\u589e\u91cf \"\"\" self.x += dx self.y += dy def distance_to(self, other): \"\"\"\u8ba1\u7b97\u4e0e\u53e6\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb :param other: \u53e6\u4e00\u4e2a\u70b9 \"\"\" dx = self.x - other.x dy = self.y - other.y return sqrt(dx ** 2 + dy ** 2) def __str__(self): return '(%s, %s)' % (str(self.x), str(self.y)) def main(): p1 = Point(3, 5) p2 = Point() print(p1) print(p2) p2.move_by(-1, 2) print(p2) print(p1.distance_to(p2)) if __name__ == '__main__': main() \u8bf4\u660e \uff1a\u672c\u7ae0\u4e2d\u7684\u63d2\u56fe\u6765\u81ea\u4e8eGrady Booch\u7b49\u8457\u4f5c\u7684 \u300a\u9762\u5411\u5bf9\u8c61\u5206\u6790\u4e0e\u8bbe\u8ba1\u300b \u4e00\u4e66\uff0c\u8be5\u4e66\u662f\u8bb2\u89e3\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u7ecf\u5178\u8457\u4f5c\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u8d2d\u4e70\u548c\u9605\u8bfb\u8fd9\u672c\u4e66\u6765\u4e86\u89e3\u66f4\u591a\u7684\u9762\u5411\u5bf9\u8c61\u7684\u76f8\u5173\u77e5\u8bc6\u3002","title":"\u7ec3\u4e602\uff1a\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u63cf\u8ff0\u5e73\u9762\u4e0a\u7684\u70b9\u5e76\u63d0\u4f9b\u79fb\u52a8\u70b9\u548c\u8ba1\u7b97\u5230\u53e6\u4e00\u4e2a\u70b9\u8ddd\u79bb\u7684\u65b9\u6cd5\u3002"},{"location":"new/9%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/","text":"\u9762\u5411\u5bf9\u8c61\u8fdb\u9636 \u5728\u524d\u9762\u7684\u7ae0\u8282\u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u4e86\u9762\u5411\u5bf9\u8c61\u7684\u5165\u95e8\u77e5\u8bc6\uff0c\u77e5\u9053\u4e86\u5982\u4f55\u5b9a\u4e49\u7c7b\uff0c\u5982\u4f55\u521b\u5efa\u5bf9\u8c61\u4ee5\u53ca\u5982\u4f55\u7ed9\u5bf9\u8c61\u53d1\u6d88\u606f\u3002\u4e3a\u4e86\u80fd\u591f\u66f4\u597d\u7684\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u601d\u60f3\u8fdb\u884c\u7a0b\u5e8f\u5f00\u53d1\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5bf9Python\u4e2d\u7684\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8fdb\u884c\u66f4\u4e3a\u6df1\u5165\u7684\u4e86\u89e3\u3002 @property\u88c5\u9970\u5668 \u4e4b\u524d\u6211\u4eec\u8ba8\u8bba\u8fc7Python\u4e2d\u5c5e\u6027\u548c\u65b9\u6cd5\u8bbf\u95ee\u6743\u9650\u7684\u95ee\u9898\uff0c\u867d\u7136\u6211\u4eec\u4e0d\u5efa\u8bae\u5c06\u5c5e\u6027\u8bbe\u7f6e\u4e3a\u79c1\u6709\u7684\uff0c\u4f46\u662f\u5982\u679c\u76f4\u63a5\u5c06\u5c5e\u6027\u66b4\u9732\u7ed9\u5916\u754c\u4e5f\u662f\u6709\u95ee\u9898\u7684\uff0c\u6bd4\u5982\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u68c0\u67e5\u8d4b\u7ed9\u5c5e\u6027\u7684\u503c\u662f\u5426\u6709\u6548\u3002\u6211\u4eec\u4e4b\u524d\u7684\u5efa\u8bae\u662f\u5c06\u5c5e\u6027\u547d\u540d\u4ee5\u5355\u4e0b\u5212\u7ebf\u5f00\u5934\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u6765\u6697\u793a\u5c5e\u6027\u662f\u53d7\u4fdd\u62a4\u7684\uff0c\u4e0d\u5efa\u8bae\u5916\u754c\u76f4\u63a5\u8bbf\u95ee\uff0c\u90a3\u4e48\u5982\u679c\u60f3\u8bbf\u95ee\u5c5e\u6027\u53ef\u4ee5\u901a\u8fc7\u5c5e\u6027\u7684getter\uff08\u8bbf\u95ee\u5668\uff09\u548csetter\uff08\u4fee\u6539\u5668\uff09\u65b9\u6cd5\u8fdb\u884c\u5bf9\u5e94\u7684\u64cd\u4f5c\u3002\u5982\u679c\u8981\u505a\u5230\u8fd9\u70b9\uff0c\u5c31\u53ef\u4ee5\u8003\u8651\u4f7f\u7528@property\u5305\u88c5\u5668\u6765\u5305\u88c5getter\u548csetter\u65b9\u6cd5\uff0c\u4f7f\u5f97\u5bf9\u5c5e\u6027\u7684\u8bbf\u95ee\u65e2\u5b89\u5168\u53c8\u65b9\u4fbf\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 class Person(object): def __init__(self, name, age): self._name = name self._age = age # \u8bbf\u95ee\u5668 - getter\u65b9\u6cd5 @property def name(self): return self._name # \u8bbf\u95ee\u5668 - getter\u65b9\u6cd5 @property def age(self): return self._age # \u4fee\u6539\u5668 - setter\u65b9\u6cd5 @age.setter def age(self, age): self._age = age def play(self): if self._age <= 16: print('%s\u6b63\u5728\u73a9\u98de\u884c\u68cb.' % self._name) else: print('%s\u6b63\u5728\u73a9\u6597\u5730\u4e3b.' % self._name) def main(): person = Person('\u738b\u5927\u9524', 12) person.play() person.age = 22 person.play() # person.name = '\u767d\u5143\u82b3' # AttributeError: can't set attribute if __name__ == '__main__': main() __slots__\u9b54\u6cd5 \u6211\u4eec\u8bb2\u5230\u8fd9\u91cc\uff0c\u4e0d\u77e5\u9053\u5927\u5bb6\u662f\u5426\u5df2\u7ecf\u610f\u8bc6\u5230\uff0cPython\u662f\u4e00\u95e8 \u52a8\u6001\u8bed\u8a00 \u3002\u901a\u5e38\uff0c\u52a8\u6001\u8bed\u8a00\u5141\u8bb8\u6211\u4eec\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u7ed9\u5bf9\u8c61\u7ed1\u5b9a\u65b0\u7684\u5c5e\u6027\u6216\u65b9\u6cd5\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u5bf9\u5df2\u7ecf\u7ed1\u5b9a\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u8fdb\u884c\u89e3\u7ed1\u5b9a\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u9700\u8981\u9650\u5b9a\u81ea\u5b9a\u4e49\u7c7b\u578b\u7684\u5bf9\u8c61\u53ea\u80fd\u7ed1\u5b9a\u67d0\u4e9b\u5c5e\u6027\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u7c7b\u4e2d\u5b9a\u4e49__slots__\u53d8\u91cf\u6765\u8fdb\u884c\u9650\u5b9a\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f__slots__\u7684\u9650\u5b9a\u53ea\u5bf9\u5f53\u524d\u7c7b\u7684\u5bf9\u8c61\u751f\u6548\uff0c\u5bf9\u5b50\u7c7b\u5e76\u4e0d\u8d77\u4efb\u4f55\u4f5c\u7528\u3002 class Person(object): # \u9650\u5b9aPerson\u5bf9\u8c61\u53ea\u80fd\u7ed1\u5b9a_name, _age\u548c_gender\u5c5e\u6027 __slots__ = ('_name', '_age', '_gender') def __init__(self, name, age): self._name = name self._age = age @property def name(self): return self._name @property def age(self): return self._age @age.setter def age(self, age): self._age = age def play(self): if self._age <= 16: print('%s\u6b63\u5728\u73a9\u98de\u884c\u68cb.' % self._name) else: print('%s\u6b63\u5728\u73a9\u6597\u5730\u4e3b.' % self._name) def main(): person = Person('\u738b\u5927\u9524', 22) person.play() person._gender = '\u7537' # AttributeError: 'Person' object has no attribute '_is_gay' # person._is_gay = True \u9759\u6001\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5 \u4e4b\u524d\uff0c\u6211\u4eec\u5728\u7c7b\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\u90fd\u662f\u5bf9\u8c61\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e9b\u65b9\u6cd5\u90fd\u662f\u53d1\u9001\u7ed9\u5bf9\u8c61\u7684\u6d88\u606f\u3002\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u5199\u5728\u7c7b\u4e2d\u7684\u65b9\u6cd5\u5e76\u4e0d\u9700\u8981\u90fd\u662f\u5bf9\u8c61\u65b9\u6cd5\uff0c\u4f8b\u5982\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u201c\u4e09\u89d2\u5f62\u201d\u7c7b\uff0c\u901a\u8fc7\u4f20\u5165\u4e09\u6761\u8fb9\u957f\u6765\u6784\u9020\u4e09\u89d2\u5f62\uff0c\u5e76\u63d0\u4f9b\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u4f20\u5165\u7684\u4e09\u6761\u8fb9\u957f\u672a\u5fc5\u80fd\u6784\u9020\u51fa\u4e09\u89d2\u5f62\u5bf9\u8c61\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5148\u5199\u4e00\u4e2a\u65b9\u6cd5\u6765\u9a8c\u8bc1\u4e09\u6761\u8fb9\u957f\u662f\u5426\u53ef\u4ee5\u6784\u6210\u4e09\u89d2\u5f62\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5f88\u663e\u7136\u5c31\u4e0d\u662f\u5bf9\u8c61\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5728\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u65f6\u4e09\u89d2\u5f62\u5bf9\u8c61\u5c1a\u672a\u521b\u5efa\u51fa\u6765\uff08\u56e0\u4e3a\u90fd\u4e0d\u77e5\u9053\u4e09\u6761\u8fb9\u80fd\u4e0d\u80fd\u6784\u6210\u4e09\u89d2\u5f62\uff09\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65b9\u6cd5\u662f\u5c5e\u4e8e\u4e09\u89d2\u5f62\u7c7b\u800c\u5e76\u4e0d\u5c5e\u4e8e\u4e09\u89d2\u5f62\u5bf9\u8c61\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u9759\u6001\u65b9\u6cd5\u6765\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 from math import sqrt class Triangle(object): def __init__(self, a, b, c): self._a = a self._b = b self._c = c @staticmethod def is_valid(a, b, c): return a + b > c and b + c > a and a + c > b def perimeter(self): return self._a + self._b + self._c def area(self): half = self.perimeter() / 2 return sqrt(half * (half - self._a) * (half - self._b) * (half - self._c)) def main(): a, b, c = 3, 4, 5 # \u9759\u6001\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5\u90fd\u662f\u901a\u8fc7\u7ed9\u7c7b\u53d1\u6d88\u606f\u6765\u8c03\u7528\u7684 if Triangle.is_valid(a, b, c): t = Triangle(a, b, c) print(t.perimeter()) # \u4e5f\u53ef\u4ee5\u901a\u8fc7\u7ed9\u7c7b\u53d1\u6d88\u606f\u6765\u8c03\u7528\u5bf9\u8c61\u65b9\u6cd5\u4f46\u662f\u8981\u4f20\u5165\u63a5\u6536\u6d88\u606f\u7684\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570 # print(Triangle.perimeter(t)) print(t.area()) # print(Triangle.area(t)) else: print('\u65e0\u6cd5\u6784\u6210\u4e09\u89d2\u5f62.') if __name__ == '__main__': main() \u548c\u9759\u6001\u65b9\u6cd5\u6bd4\u8f83\u7c7b\u4f3c\uff0cPython\u8fd8\u53ef\u4ee5\u5728\u7c7b\u4e2d\u5b9a\u4e49\u7c7b\u65b9\u6cd5\uff0c\u7c7b\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u7ea6\u5b9a\u540d\u4e3acls\uff0c\u5b83\u4ee3\u8868\u7684\u662f\u5f53\u524d\u7c7b\u76f8\u5173\u7684\u4fe1\u606f\u7684\u5bf9\u8c61\uff08\u7c7b\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6709\u7684\u5730\u65b9\u4e5f\u79f0\u4e4b\u4e3a\u7c7b\u7684\u5143\u6570\u636e\u5bf9\u8c61\uff09\uff0c\u901a\u8fc7\u8fd9\u4e2a\u53c2\u6570\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u548c\u7c7b\u76f8\u5173\u7684\u4fe1\u606f\u5e76\u4e14\u53ef\u4ee5\u521b\u5efa\u51fa\u7c7b\u7684\u5bf9\u8c61\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 from time import time, localtime, sleep class Clock(object): \"\"\"\u6570\u5b57\u65f6\u949f\"\"\" def __init__(self, hour=0, minute=0, second=0): self._hour = hour self._minute = minute self._second = second @classmethod def now(cls): ctime = localtime(time()) return cls(ctime.tm_hour, ctime.tm_min, ctime.tm_sec) def run(self): \"\"\"\u8d70\u5b57\"\"\" self._second += 1 if self._second == 60: self._second = 0 self._minute += 1 if self._minute == 60: self._minute = 0 self._hour += 1 if self._hour == 24: self._hour = 0 def show(self): \"\"\"\u663e\u793a\u65f6\u95f4\"\"\" return '%02d:%02d:%02d' % \\ (self._hour, self._minute, self._second) def main(): # \u901a\u8fc7\u7c7b\u65b9\u6cd5\u521b\u5efa\u5bf9\u8c61\u5e76\u83b7\u53d6\u7cfb\u7edf\u65f6\u95f4 clock = Clock.now() while True: print(clock.show()) sleep(1) clock.run() if __name__ == '__main__': main() \u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb \u7b80\u5355\u7684\u8bf4\uff0c\u7c7b\u548c\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb\u6709\u4e09\u79cd\uff1ais-a\u3001has-a\u548cuse-a\u5173\u7cfb\u3002 is-a\u5173\u7cfb\u4e5f\u53eb\u7ee7\u627f\u6216\u6cdb\u5316\uff0c\u6bd4\u5982\u5b66\u751f\u548c\u4eba\u7684\u5173\u7cfb\u3001\u624b\u673a\u548c\u7535\u5b50\u4ea7\u54c1\u7684\u5173\u7cfb\u90fd\u5c5e\u4e8e\u7ee7\u627f\u5173\u7cfb\u3002 has-a\u5173\u7cfb\u901a\u5e38\u79f0\u4e4b\u4e3a\u5173\u8054\uff0c\u6bd4\u5982\u90e8\u95e8\u548c\u5458\u5de5\u7684\u5173\u7cfb\uff0c\u6c7d\u8f66\u548c\u5f15\u64ce\u7684\u5173\u7cfb\u90fd\u5c5e\u4e8e\u5173\u8054\u5173\u7cfb\uff1b\u5173\u8054\u5173\u7cfb\u5982\u679c\u662f\u6574\u4f53\u548c\u90e8\u5206\u7684\u5173\u8054\uff0c\u90a3\u4e48\u6211\u4eec\u79f0\u4e4b\u4e3a\u805a\u5408\u5173\u7cfb\uff1b\u5982\u679c\u6574\u4f53\u8fdb\u4e00\u6b65\u8d1f\u8d23\u4e86\u90e8\u5206\u7684\u751f\u547d\u5468\u671f\uff08\u6574\u4f53\u548c\u90e8\u5206\u662f\u4e0d\u53ef\u5206\u5272\u7684\uff0c\u540c\u65f6\u540c\u5728\u4e5f\u540c\u65f6\u6d88\u4ea1\uff09\uff0c\u90a3\u4e48\u8fd9\u79cd\u5c31\u662f\u6700\u5f3a\u7684\u5173\u8054\u5173\u7cfb\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u5408\u6210\u5173\u7cfb\u3002 use-a\u5173\u7cfb\u901a\u5e38\u79f0\u4e4b\u4e3a\u4f9d\u8d56\uff0c\u6bd4\u5982\u53f8\u673a\u6709\u4e00\u4e2a\u9a7e\u9a76\u7684\u884c\u4e3a\uff08\u65b9\u6cd5\uff09\uff0c\u5176\u4e2d\uff08\u7684\u53c2\u6570\uff09\u4f7f\u7528\u5230\u4e86\u6c7d\u8f66\uff0c\u90a3\u4e48\u53f8\u673a\u548c\u6c7d\u8f66\u7684\u5173\u7cfb\u5c31\u662f\u4f9d\u8d56\u5173\u7cfb\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u53eb\u505a UML \uff08\u7edf\u4e00\u5efa\u6a21\u8bed\u8a00\uff09\u7684\u4e1c\u897f\u6765\u8fdb\u884c\u9762\u5411\u5bf9\u8c61\u5efa\u6a21\uff0c\u5176\u4e2d\u4e00\u9879\u91cd\u8981\u7684\u5de5\u4f5c\u5c31\u662f\u628a\u7c7b\u548c\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb\u7528\u6807\u51c6\u5316\u7684\u56fe\u5f62\u7b26\u53f7\u63cf\u8ff0\u51fa\u6765\u3002\u5173\u4e8eUML\u6211\u4eec\u5728\u8fd9\u91cc\u4e0d\u505a\u8be6\u7ec6\u7684\u4ecb\u7ecd\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u9605\u8bfb \u300aUML\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u57fa\u7840\u300b \u4e00\u4e66\u3002 \u5229\u7528\u7c7b\u4e4b\u95f4\u7684\u8fd9\u4e9b\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5df2\u6709\u7c7b\u7684\u57fa\u7840\u4e0a\u6765\u5b8c\u6210\u67d0\u4e9b\u64cd\u4f5c\uff0c\u4e5f\u53ef\u4ee5\u5728\u5df2\u6709\u7c7b\u7684\u57fa\u7840\u4e0a\u521b\u5efa\u65b0\u7684\u7c7b\uff0c\u8fd9\u4e9b\u90fd\u662f\u5b9e\u73b0\u4ee3\u7801\u590d\u7528\u7684\u91cd\u8981\u624b\u6bb5\u3002\u590d\u7528\u73b0\u6709\u7684\u4ee3\u7801\u4e0d\u4ec5\u53ef\u4ee5\u51cf\u5c11\u5f00\u53d1\u7684\u5de5\u4f5c\u91cf\uff0c\u4e5f\u6709\u5229\u4e8e\u4ee3\u7801\u7684\u7ba1\u7406\u548c\u7ef4\u62a4\uff0c\u8fd9\u662f\u6211\u4eec\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\u90fd\u4f1a\u4f7f\u7528\u5230\u7684\u6280\u672f\u624b\u6bb5\u3002 \u7ee7\u627f\u548c\u591a\u6001 \u521a\u624d\u6211\u4eec\u63d0\u5230\u4e86\uff0c\u53ef\u4ee5\u5728\u5df2\u6709\u7c7b\u7684\u57fa\u7840\u4e0a\u521b\u5efa\u65b0\u7c7b\uff0c\u8fd9\u5176\u4e2d\u7684\u4e00\u79cd\u505a\u6cd5\u5c31\u662f\u8ba9\u4e00\u4e2a\u7c7b\u4ece\u53e6\u4e00\u4e2a\u7c7b\u90a3\u91cc\u5c06\u5c5e\u6027\u548c\u65b9\u6cd5\u76f4\u63a5\u7ee7\u627f\u4e0b\u6765\uff0c\u4ece\u800c\u51cf\u5c11\u91cd\u590d\u4ee3\u7801\u7684\u7f16\u5199\u3002\u63d0\u4f9b\u7ee7\u627f\u4fe1\u606f\u7684\u6211\u4eec\u79f0\u4e4b\u4e3a\u7236\u7c7b\uff0c\u4e5f\u53eb\u8d85\u7c7b\u6216\u57fa\u7c7b\uff1b\u5f97\u5230\u7ee7\u627f\u4fe1\u606f\u7684\u6211\u4eec\u79f0\u4e4b\u4e3a\u5b50\u7c7b\uff0c\u4e5f\u53eb\u6d3e\u751f\u7c7b\u6216\u884d\u751f\u7c7b\u3002\u5b50\u7c7b\u9664\u4e86\u7ee7\u627f\u7236\u7c7b\u63d0\u4f9b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u81ea\u5df1\u7279\u6709\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u6240\u4ee5\u5b50\u7c7b\u6bd4\u7236\u7c7b\u62e5\u6709\u7684\u66f4\u591a\u7684\u80fd\u529b\uff0c\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u7528\u5b50\u7c7b\u5bf9\u8c61\u53bb\u66ff\u6362\u6389\u4e00\u4e2a\u7236\u7c7b\u5bf9\u8c61\uff0c\u8fd9\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u4e00\u4e2a\u5e38\u89c1\u7684\u884c\u4e3a\uff0c\u5bf9\u5e94\u7684\u539f\u5219\u79f0\u4e4b\u4e3a \u91cc\u6c0f\u66ff\u6362\u539f\u5219 \u3002\u4e0b\u9762\u6211\u4eec\u5148\u770b\u4e00\u4e2a\u7ee7\u627f\u7684\u4f8b\u5b50\u3002 class Person(object): \"\"\"\u4eba\"\"\" def __init__(self, name, age): self._name = name self._age = age @property def name(self): return self._name @property def age(self): return self._age @age.setter def age(self, age): self._age = age def play(self): print('%s\u6b63\u5728\u6109\u5feb\u7684\u73a9\u800d.' % self._name) def watch_av(self): if self._age >= 18: print('%s\u6b63\u5728\u89c2\u770b\u7231\u60c5\u52a8\u4f5c\u7247.' % self._name) else: print('%s\u53ea\u80fd\u89c2\u770b\u300a\u718a\u51fa\u6ca1\u300b.' % self._name) class Student(Person): \"\"\"\u5b66\u751f\"\"\" def __init__(self, name, age, grade): super().__init__(name, age) self._grade = grade @property def grade(self): return self._grade @grade.setter def grade(self, grade): self._grade = grade def study(self, course): print('%s\u7684%s\u6b63\u5728\u5b66\u4e60%s.' % (self._grade, self._name, course)) class Teacher(Person): \"\"\"\u8001\u5e08\"\"\" def __init__(self, name, age, title): super().__init__(name, age) self._title = title @property def title(self): return self._title @title.setter def title(self, title): self._title = title def teach(self, course): print('%s%s\u6b63\u5728\u8bb2%s.' % (self._name, self._title, course)) def main(): stu = Student('\u738b\u5927\u9524', 15, '\u521d\u4e09') stu.study('\u6570\u5b66') stu.watch_av() t = Teacher('\u9a86\u660a', 38, '\u8001\u53eb\u517d') t.teach('Python\u7a0b\u5e8f\u8bbe\u8ba1') t.watch_av() if __name__ == '__main__': main() \u5b50\u7c7b\u5728\u7ee7\u627f\u4e86\u7236\u7c7b\u7684\u65b9\u6cd5\u540e\uff0c\u53ef\u4ee5\u5bf9\u7236\u7c7b\u5df2\u6709\u7684\u65b9\u6cd5\u7ed9\u51fa\u65b0\u7684\u5b9e\u73b0\u7248\u672c\uff0c\u8fd9\u4e2a\u52a8\u4f5c\u79f0\u4e4b\u4e3a\u65b9\u6cd5\u91cd\u5199\uff08override\uff09\u3002\u901a\u8fc7\u65b9\u6cd5\u91cd\u5199\u6211\u4eec\u53ef\u4ee5\u8ba9\u7236\u7c7b\u7684\u540c\u4e00\u4e2a\u884c\u4e3a\u5728\u5b50\u7c7b\u4e2d\u62e5\u6709\u4e0d\u540c\u7684\u5b9e\u73b0\u7248\u672c\uff0c\u5f53\u6211\u4eec\u8c03\u7528\u8fd9\u4e2a\u7ecf\u8fc7\u5b50\u7c7b\u91cd\u5199\u7684\u65b9\u6cd5\u65f6\uff0c\u4e0d\u540c\u7684\u5b50\u7c7b\u5bf9\u8c61\u4f1a\u8868\u73b0\u51fa\u4e0d\u540c\u7684\u884c\u4e3a\uff0c\u8fd9\u4e2a\u5c31\u662f\u591a\u6001\uff08poly-morphism\uff09\u3002 from abc import ABCMeta, abstractmethod class Pet(object, metaclass=ABCMeta): \"\"\"\u5ba0\u7269\"\"\" def __init__(self, nickname): self._nickname = nickname @abstractmethod def make_voice(self): \"\"\"\u53d1\u51fa\u58f0\u97f3\"\"\" pass class Dog(Pet): \"\"\"\u72d7\"\"\" def make_voice(self): print('%s: \u6c6a\u6c6a\u6c6a...' % self._nickname) class Cat(Pet): \"\"\"\u732b\"\"\" def make_voice(self): print('%s: \u55b5...\u55b5...' % self._nickname) def main(): pets = [Dog('\u65fa\u8d22'), Cat('\u51ef\u8482'), Dog('\u5927\u9ec4')] for pet in pets: pet.make_voice() if __name__ == '__main__': main() \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5c06 Pet \u7c7b\u5904\u7406\u6210\u4e86\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u6240\u8c13\u62bd\u8c61\u7c7b\u5c31\u662f\u4e0d\u80fd\u591f\u521b\u5efa\u5bf9\u8c61\u7684\u7c7b\uff0c\u8fd9\u79cd\u7c7b\u7684\u5b58\u5728\u5c31\u662f\u4e13\u95e8\u4e3a\u4e86\u8ba9\u5176\u4ed6\u7c7b\u53bb\u7ee7\u627f\u5b83\u3002Python\u4ece\u8bed\u6cd5\u5c42\u9762\u5e76\u6ca1\u6709\u50cfJava\u6216C#\u90a3\u6837\u63d0\u4f9b\u5bf9\u62bd\u8c61\u7c7b\u7684\u652f\u6301\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 abc \u6a21\u5757\u7684 ABCMeta \u5143\u7c7b\u548c abstractmethod \u5305\u88c5\u5668\u6765\u8fbe\u5230\u62bd\u8c61\u7c7b\u7684\u6548\u679c\uff0c\u5982\u679c\u4e00\u4e2a\u7c7b\u4e2d\u5b58\u5728\u62bd\u8c61\u65b9\u6cd5\u90a3\u4e48\u8fd9\u4e2a\u7c7b\u5c31\u4e0d\u80fd\u591f\u5b9e\u4f8b\u5316\uff08\u521b\u5efa\u5bf9\u8c61\uff09\u3002\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c Dog \u548c Cat \u4e24\u4e2a\u5b50\u7c7b\u5206\u522b\u5bf9 Pet \u7c7b\u4e2d\u7684 make_voice \u62bd\u8c61\u65b9\u6cd5\u8fdb\u884c\u4e86\u91cd\u5199\u5e76\u7ed9\u51fa\u4e86\u4e0d\u540c\u7684\u5b9e\u73b0\u7248\u672c\uff0c\u5f53\u6211\u4eec\u5728 main \u51fd\u6570\u4e2d\u8c03\u7528\u8be5\u65b9\u6cd5\u65f6\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5c31\u8868\u73b0\u51fa\u4e86\u591a\u6001\u884c\u4e3a\uff08\u540c\u6837\u7684\u65b9\u6cd5\u505a\u4e86\u4e0d\u540c\u7684\u4e8b\u60c5\uff09\u3002 \u7efc\u5408\u6848\u4f8b \u6848\u4f8b1\uff1a\u5965\u7279\u66fc\u6253\u5c0f\u602a\u517d from abc import ABCMeta, abstractmethod from random import randint, randrange class Fighter(object, metaclass=ABCMeta): \"\"\"\u6218\u6597\u8005\"\"\" # \u901a\u8fc7__slots__\u9b54\u6cd5\u9650\u5b9a\u5bf9\u8c61\u53ef\u4ee5\u7ed1\u5b9a\u7684\u6210\u5458\u53d8\u91cf __slots__ = ('_name', '_hp') def __init__(self, name, hp): \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5 :param name: \u540d\u5b57 :param hp: \u751f\u547d\u503c \"\"\" self._name = name self._hp = hp @property def name(self): return self._name @property def hp(self): return self._hp @hp.setter def hp(self, hp): self._hp = hp if hp >= 0 else 0 @property def alive(self): return self._hp > 0 @abstractmethod def attack(self, other): \"\"\"\u653b\u51fb :param other: \u88ab\u653b\u51fb\u7684\u5bf9\u8c61 \"\"\" pass class Ultraman(Fighter): \"\"\"\u5965\u7279\u66fc\"\"\" __slots__ = ('_name', '_hp', '_mp') def __init__(self, name, hp, mp): \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5 :param name: \u540d\u5b57 :param hp: \u751f\u547d\u503c :param mp: \u9b54\u6cd5\u503c \"\"\" super().__init__(name, hp) self._mp = mp def attack(self, other): other.hp -= randint(15, 25) def huge_attack(self, other): \"\"\"\u7a76\u6781\u5fc5\u6740\u6280(\u6253\u6389\u5bf9\u65b9\u81f3\u5c1150\u70b9\u6216\u56db\u5206\u4e4b\u4e09\u7684\u8840) :param other: \u88ab\u653b\u51fb\u7684\u5bf9\u8c61 :return: \u4f7f\u7528\u6210\u529f\u8fd4\u56deTrue\u5426\u5219\u8fd4\u56deFalse \"\"\" if self._mp >= 50: self._mp -= 50 injury = other.hp * 3 // 4 injury = injury if injury >= 50 else 50 other.hp -= injury return True else: self.attack(other) return False def magic_attack(self, others): \"\"\"\u9b54\u6cd5\u653b\u51fb :param others: \u88ab\u653b\u51fb\u7684\u7fa4\u4f53 :return: \u4f7f\u7528\u9b54\u6cd5\u6210\u529f\u8fd4\u56deTrue\u5426\u5219\u8fd4\u56deFalse \"\"\" if self._mp >= 20: self._mp -= 20 for temp in others: if temp.alive: temp.hp -= randint(10, 15) return True else: return False def resume(self): \"\"\"\u6062\u590d\u9b54\u6cd5\u503c\"\"\" incr_point = randint(1, 10) self._mp += incr_point return incr_point def __str__(self): return '~~~%s\u5965\u7279\u66fc~~~\\n' % self._name + \\ '\u751f\u547d\u503c: %d\\n' % self._hp + \\ '\u9b54\u6cd5\u503c: %d\\n' % self._mp class Monster(Fighter): \"\"\"\u5c0f\u602a\u517d\"\"\" __slots__ = ('_name', '_hp') def attack(self, other): other.hp -= randint(10, 20) def __str__(self): return '~~~%s\u5c0f\u602a\u517d~~~\\n' % self._name + \\ '\u751f\u547d\u503c: %d\\n' % self._hp def is_any_alive(monsters): \"\"\"\u5224\u65ad\u6709\u6ca1\u6709\u5c0f\u602a\u517d\u662f\u6d3b\u7740\u7684\"\"\" for monster in monsters: if monster.alive > 0: return True return False def select_alive_one(monsters): \"\"\"\u9009\u4e2d\u4e00\u53ea\u6d3b\u7740\u7684\u5c0f\u602a\u517d\"\"\" monsters_len = len(monsters) while True: index = randrange(monsters_len) monster = monsters[index] if monster.alive > 0: return monster def display_info(ultraman, monsters): \"\"\"\u663e\u793a\u5965\u7279\u66fc\u548c\u5c0f\u602a\u517d\u7684\u4fe1\u606f\"\"\" print(ultraman) for monster in monsters: print(monster, end='') def main(): u = Ultraman('\u9a86\u660a', 1000, 120) m1 = Monster('\u72c4\u4ec1\u6770', 250) m2 = Monster('\u767d\u5143\u82b3', 500) m3 = Monster('\u738b\u5927\u9524', 750) ms = [m1, m2, m3] fight_round = 1 while u.alive and is_any_alive(ms): print('========\u7b2c%02d\u56de\u5408========' % fight_round) m = select_alive_one(ms) # \u9009\u4e2d\u4e00\u53ea\u5c0f\u602a\u517d skill = randint(1, 10) # \u901a\u8fc7\u968f\u673a\u6570\u9009\u62e9\u4f7f\u7528\u54ea\u79cd\u6280\u80fd if skill <= 6: # 60%\u7684\u6982\u7387\u4f7f\u7528\u666e\u901a\u653b\u51fb print('%s\u4f7f\u7528\u666e\u901a\u653b\u51fb\u6253\u4e86%s.' % (u.name, m.name)) u.attack(m) print('%s\u7684\u9b54\u6cd5\u503c\u6062\u590d\u4e86%d\u70b9.' % (u.name, u.resume())) elif skill <= 9: # 30%\u7684\u6982\u7387\u4f7f\u7528\u9b54\u6cd5\u653b\u51fb(\u53ef\u80fd\u56e0\u9b54\u6cd5\u503c\u4e0d\u8db3\u800c\u5931\u8d25) if u.magic_attack(ms): print('%s\u4f7f\u7528\u4e86\u9b54\u6cd5\u653b\u51fb.' % u.name) else: print('%s\u4f7f\u7528\u9b54\u6cd5\u5931\u8d25.' % u.name) else: # 10%\u7684\u6982\u7387\u4f7f\u7528\u7a76\u6781\u5fc5\u6740\u6280(\u5982\u679c\u9b54\u6cd5\u503c\u4e0d\u8db3\u5219\u4f7f\u7528\u666e\u901a\u653b\u51fb) if u.huge_attack(m): print('%s\u4f7f\u7528\u7a76\u6781\u5fc5\u6740\u6280\u8650\u4e86%s.' % (u.name, m.name)) else: print('%s\u4f7f\u7528\u666e\u901a\u653b\u51fb\u6253\u4e86%s.' % (u.name, m.name)) print('%s\u7684\u9b54\u6cd5\u503c\u6062\u590d\u4e86%d\u70b9.' % (u.name, u.resume())) if m.alive > 0: # \u5982\u679c\u9009\u4e2d\u7684\u5c0f\u602a\u517d\u6ca1\u6709\u6b7b\u5c31\u56de\u51fb\u5965\u7279\u66fc print('%s\u56de\u51fb\u4e86%s.' % (m.name, u.name)) m.attack(u) display_info(u, ms) # \u6bcf\u4e2a\u56de\u5408\u7ed3\u675f\u540e\u663e\u793a\u5965\u7279\u66fc\u548c\u5c0f\u602a\u517d\u7684\u4fe1\u606f fight_round += 1 print('\\n========\u6218\u6597\u7ed3\u675f!========\\n') if u.alive > 0: print('%s\u5965\u7279\u66fc\u80dc\u5229!' % u.name) else: print('\u5c0f\u602a\u517d\u80dc\u5229!') if __name__ == '__main__': main() \u6848\u4f8b2\uff1a\u6251\u514b\u6e38\u620f import random class Card(object): \"\"\"\u4e00\u5f20\u724c\"\"\" def __init__(self, suite, face): self._suite = suite self._face = face @property def face(self): return self._face @property def suite(self): return self._suite def __str__(self): if self._face == 1: face_str = 'A' elif self._face == 11: face_str = 'J' elif self._face == 12: face_str = 'Q' elif self._face == 13: face_str = 'K' else: face_str = str(self._face) return '%s%s' % (self._suite, face_str) def __repr__(self): return self.__str__() class Poker(object): \"\"\"\u4e00\u526f\u724c\"\"\" def __init__(self): self._cards = [Card(suite, face) for suite in '\u2660\u2665\u2663\u2666' for face in range(1, 14)] self._current = 0 @property def cards(self): return self._cards def shuffle(self): \"\"\"\u6d17\u724c(\u968f\u673a\u4e71\u5e8f)\"\"\" self._current = 0 random.shuffle(self._cards) @property def next(self): \"\"\"\u53d1\u724c\"\"\" card = self._cards[self._current] self._current += 1 return card @property def has_next(self): \"\"\"\u8fd8\u6709\u6ca1\u6709\u724c\"\"\" return self._current < len(self._cards) class Player(object): \"\"\"\u73a9\u5bb6\"\"\" def __init__(self, name): self._name = name self._cards_on_hand = [] @property def name(self): return self._name @property def cards_on_hand(self): return self._cards_on_hand def get(self, card): \"\"\"\u6478\u724c\"\"\" self._cards_on_hand.append(card) def arrange(self, card_key): \"\"\"\u73a9\u5bb6\u6574\u7406\u624b\u4e0a\u7684\u724c\"\"\" self._cards_on_hand.sort(key=card_key) # \u6392\u5e8f\u89c4\u5219-\u5148\u6839\u636e\u82b1\u8272\u518d\u6839\u636e\u70b9\u6570\u6392\u5e8f def get_key(card): return (card.suite, card.face) def main(): p = Poker() p.shuffle() players = [Player('\u4e1c\u90aa'), Player('\u897f\u6bd2'), Player('\u5357\u5e1d'), Player('\u5317\u4e10')] for _ in range(13): for player in players: player.get(p.next) for player in players: print(player.name + ':', end=' ') player.arrange(get_key) print(player.cards_on_hand) if __name__ == '__main__': main() \u8bf4\u660e \uff1a\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u5c1d\u8bd5\u5728\u4e0a\u9762\u4ee3\u7801\u7684\u57fa\u7840\u4e0a\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u6251\u514b\u6e38\u620f\uff0c\u4f8b\u598221\u70b9(Black Jack)\uff0c\u6e38\u620f\u7684\u89c4\u5219\u53ef\u4ee5\u81ea\u5df1\u5728\u7f51\u4e0a\u627e\u4e00\u627e\u3002 \u6848\u4f8b3\uff1a\u5de5\u8d44\u7ed3\u7b97\u7cfb\u7edf \"\"\" \u67d0\u516c\u53f8\u6709\u4e09\u79cd\u7c7b\u578b\u7684\u5458\u5de5 \u5206\u522b\u662f\u90e8\u95e8\u7ecf\u7406\u3001\u7a0b\u5e8f\u5458\u548c\u9500\u552e\u5458 \u9700\u8981\u8bbe\u8ba1\u4e00\u4e2a\u5de5\u8d44\u7ed3\u7b97\u7cfb\u7edf \u6839\u636e\u63d0\u4f9b\u7684\u5458\u5de5\u4fe1\u606f\u6765\u8ba1\u7b97\u6708\u85aa \u90e8\u95e8\u7ecf\u7406\u7684\u6708\u85aa\u662f\u6bcf\u6708\u56fa\u5b9a15000\u5143 \u7a0b\u5e8f\u5458\u7684\u6708\u85aa\u6309\u672c\u6708\u5de5\u4f5c\u65f6\u95f4\u8ba1\u7b97 \u6bcf\u5c0f\u65f6150\u5143 \u9500\u552e\u5458\u7684\u6708\u85aa\u662f1200\u5143\u7684\u5e95\u85aa\u52a0\u4e0a\u9500\u552e\u989d5%\u7684\u63d0\u6210 \"\"\" from abc import ABCMeta, abstractmethod class Employee(object, metaclass=ABCMeta): \"\"\"\u5458\u5de5\"\"\" def __init__(self, name): \"\"\" \u521d\u59cb\u5316\u65b9\u6cd5 :param name: \u59d3\u540d \"\"\" self._name = name @property def name(self): return self._name @abstractmethod def get_salary(self): \"\"\" \u83b7\u5f97\u6708\u85aa :return: \u6708\u85aa \"\"\" pass class Manager(Employee): \"\"\"\u90e8\u95e8\u7ecf\u7406\"\"\" def get_salary(self): return 15000.0 class Programmer(Employee): \"\"\"\u7a0b\u5e8f\u5458\"\"\" def __init__(self, name, working_hour=0): super().__init__(name) self._working_hour = working_hour @property def working_hour(self): return self._working_hour @working_hour.setter def working_hour(self, working_hour): self._working_hour = working_hour if working_hour > 0 else 0 def get_salary(self): return 150.0 * self._working_hour class Salesman(Employee): \"\"\"\u9500\u552e\u5458\"\"\" def __init__(self, name, sales=0): super().__init__(name) self._sales = sales @property def sales(self): return self._sales @sales.setter def sales(self, sales): self._sales = sales if sales > 0 else 0 def get_salary(self): return 1200.0 + self._sales * 0.05 def main(): emps = [ Manager('\u5218\u5907'), Programmer('\u8bf8\u845b\u4eae'), Manager('\u66f9\u64cd'), Salesman('\u8340\u5f67'), Salesman('\u5415\u5e03'), Programmer('\u5f20\u8fbd'), Programmer('\u8d75\u4e91') ] for emp in emps: if isinstance(emp, Programmer): emp.working_hour = int(input('\u8bf7\u8f93\u5165%s\u672c\u6708\u5de5\u4f5c\u65f6\u95f4: ' % emp.name)) elif isinstance(emp, Salesman): emp.sales = float(input('\u8bf7\u8f93\u5165%s\u672c\u6708\u9500\u552e\u989d: ' % emp.name)) # \u540c\u6837\u662f\u63a5\u6536get_salary\u8fd9\u4e2a\u6d88\u606f\u4f46\u662f\u4e0d\u540c\u7684\u5458\u5de5\u8868\u73b0\u51fa\u4e86\u4e0d\u540c\u7684\u884c\u4e3a(\u591a\u6001) print('%s\u672c\u6708\u5de5\u8d44\u4e3a: \uffe5%s\u5143' % (emp.name, emp.get_salary())) if __name__ == '__main__': main()","title":"\u7b2c\u4e5d\u5929"},{"location":"new/9%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/#_1","text":"\u5728\u524d\u9762\u7684\u7ae0\u8282\u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u4e86\u9762\u5411\u5bf9\u8c61\u7684\u5165\u95e8\u77e5\u8bc6\uff0c\u77e5\u9053\u4e86\u5982\u4f55\u5b9a\u4e49\u7c7b\uff0c\u5982\u4f55\u521b\u5efa\u5bf9\u8c61\u4ee5\u53ca\u5982\u4f55\u7ed9\u5bf9\u8c61\u53d1\u6d88\u606f\u3002\u4e3a\u4e86\u80fd\u591f\u66f4\u597d\u7684\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u601d\u60f3\u8fdb\u884c\u7a0b\u5e8f\u5f00\u53d1\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5bf9Python\u4e2d\u7684\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8fdb\u884c\u66f4\u4e3a\u6df1\u5165\u7684\u4e86\u89e3\u3002","title":"\u9762\u5411\u5bf9\u8c61\u8fdb\u9636"},{"location":"new/9%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/#property","text":"\u4e4b\u524d\u6211\u4eec\u8ba8\u8bba\u8fc7Python\u4e2d\u5c5e\u6027\u548c\u65b9\u6cd5\u8bbf\u95ee\u6743\u9650\u7684\u95ee\u9898\uff0c\u867d\u7136\u6211\u4eec\u4e0d\u5efa\u8bae\u5c06\u5c5e\u6027\u8bbe\u7f6e\u4e3a\u79c1\u6709\u7684\uff0c\u4f46\u662f\u5982\u679c\u76f4\u63a5\u5c06\u5c5e\u6027\u66b4\u9732\u7ed9\u5916\u754c\u4e5f\u662f\u6709\u95ee\u9898\u7684\uff0c\u6bd4\u5982\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u68c0\u67e5\u8d4b\u7ed9\u5c5e\u6027\u7684\u503c\u662f\u5426\u6709\u6548\u3002\u6211\u4eec\u4e4b\u524d\u7684\u5efa\u8bae\u662f\u5c06\u5c5e\u6027\u547d\u540d\u4ee5\u5355\u4e0b\u5212\u7ebf\u5f00\u5934\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u6765\u6697\u793a\u5c5e\u6027\u662f\u53d7\u4fdd\u62a4\u7684\uff0c\u4e0d\u5efa\u8bae\u5916\u754c\u76f4\u63a5\u8bbf\u95ee\uff0c\u90a3\u4e48\u5982\u679c\u60f3\u8bbf\u95ee\u5c5e\u6027\u53ef\u4ee5\u901a\u8fc7\u5c5e\u6027\u7684getter\uff08\u8bbf\u95ee\u5668\uff09\u548csetter\uff08\u4fee\u6539\u5668\uff09\u65b9\u6cd5\u8fdb\u884c\u5bf9\u5e94\u7684\u64cd\u4f5c\u3002\u5982\u679c\u8981\u505a\u5230\u8fd9\u70b9\uff0c\u5c31\u53ef\u4ee5\u8003\u8651\u4f7f\u7528@property\u5305\u88c5\u5668\u6765\u5305\u88c5getter\u548csetter\u65b9\u6cd5\uff0c\u4f7f\u5f97\u5bf9\u5c5e\u6027\u7684\u8bbf\u95ee\u65e2\u5b89\u5168\u53c8\u65b9\u4fbf\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 class Person(object): def __init__(self, name, age): self._name = name self._age = age # \u8bbf\u95ee\u5668 - getter\u65b9\u6cd5 @property def name(self): return self._name # \u8bbf\u95ee\u5668 - getter\u65b9\u6cd5 @property def age(self): return self._age # \u4fee\u6539\u5668 - setter\u65b9\u6cd5 @age.setter def age(self, age): self._age = age def play(self): if self._age <= 16: print('%s\u6b63\u5728\u73a9\u98de\u884c\u68cb.' % self._name) else: print('%s\u6b63\u5728\u73a9\u6597\u5730\u4e3b.' % self._name) def main(): person = Person('\u738b\u5927\u9524', 12) person.play() person.age = 22 person.play() # person.name = '\u767d\u5143\u82b3' # AttributeError: can't set attribute if __name__ == '__main__': main()","title":"@property\u88c5\u9970\u5668"},{"location":"new/9%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/#__slots__","text":"\u6211\u4eec\u8bb2\u5230\u8fd9\u91cc\uff0c\u4e0d\u77e5\u9053\u5927\u5bb6\u662f\u5426\u5df2\u7ecf\u610f\u8bc6\u5230\uff0cPython\u662f\u4e00\u95e8 \u52a8\u6001\u8bed\u8a00 \u3002\u901a\u5e38\uff0c\u52a8\u6001\u8bed\u8a00\u5141\u8bb8\u6211\u4eec\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u7ed9\u5bf9\u8c61\u7ed1\u5b9a\u65b0\u7684\u5c5e\u6027\u6216\u65b9\u6cd5\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u5bf9\u5df2\u7ecf\u7ed1\u5b9a\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u8fdb\u884c\u89e3\u7ed1\u5b9a\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u9700\u8981\u9650\u5b9a\u81ea\u5b9a\u4e49\u7c7b\u578b\u7684\u5bf9\u8c61\u53ea\u80fd\u7ed1\u5b9a\u67d0\u4e9b\u5c5e\u6027\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u7c7b\u4e2d\u5b9a\u4e49__slots__\u53d8\u91cf\u6765\u8fdb\u884c\u9650\u5b9a\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f__slots__\u7684\u9650\u5b9a\u53ea\u5bf9\u5f53\u524d\u7c7b\u7684\u5bf9\u8c61\u751f\u6548\uff0c\u5bf9\u5b50\u7c7b\u5e76\u4e0d\u8d77\u4efb\u4f55\u4f5c\u7528\u3002 class Person(object): # \u9650\u5b9aPerson\u5bf9\u8c61\u53ea\u80fd\u7ed1\u5b9a_name, _age\u548c_gender\u5c5e\u6027 __slots__ = ('_name', '_age', '_gender') def __init__(self, name, age): self._name = name self._age = age @property def name(self): return self._name @property def age(self): return self._age @age.setter def age(self, age): self._age = age def play(self): if self._age <= 16: print('%s\u6b63\u5728\u73a9\u98de\u884c\u68cb.' % self._name) else: print('%s\u6b63\u5728\u73a9\u6597\u5730\u4e3b.' % self._name) def main(): person = Person('\u738b\u5927\u9524', 22) person.play() person._gender = '\u7537' # AttributeError: 'Person' object has no attribute '_is_gay' # person._is_gay = True","title":"__slots__\u9b54\u6cd5"},{"location":"new/9%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/#_2","text":"\u4e4b\u524d\uff0c\u6211\u4eec\u5728\u7c7b\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\u90fd\u662f\u5bf9\u8c61\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e9b\u65b9\u6cd5\u90fd\u662f\u53d1\u9001\u7ed9\u5bf9\u8c61\u7684\u6d88\u606f\u3002\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u5199\u5728\u7c7b\u4e2d\u7684\u65b9\u6cd5\u5e76\u4e0d\u9700\u8981\u90fd\u662f\u5bf9\u8c61\u65b9\u6cd5\uff0c\u4f8b\u5982\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u201c\u4e09\u89d2\u5f62\u201d\u7c7b\uff0c\u901a\u8fc7\u4f20\u5165\u4e09\u6761\u8fb9\u957f\u6765\u6784\u9020\u4e09\u89d2\u5f62\uff0c\u5e76\u63d0\u4f9b\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u4f20\u5165\u7684\u4e09\u6761\u8fb9\u957f\u672a\u5fc5\u80fd\u6784\u9020\u51fa\u4e09\u89d2\u5f62\u5bf9\u8c61\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5148\u5199\u4e00\u4e2a\u65b9\u6cd5\u6765\u9a8c\u8bc1\u4e09\u6761\u8fb9\u957f\u662f\u5426\u53ef\u4ee5\u6784\u6210\u4e09\u89d2\u5f62\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5f88\u663e\u7136\u5c31\u4e0d\u662f\u5bf9\u8c61\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5728\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u65f6\u4e09\u89d2\u5f62\u5bf9\u8c61\u5c1a\u672a\u521b\u5efa\u51fa\u6765\uff08\u56e0\u4e3a\u90fd\u4e0d\u77e5\u9053\u4e09\u6761\u8fb9\u80fd\u4e0d\u80fd\u6784\u6210\u4e09\u89d2\u5f62\uff09\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65b9\u6cd5\u662f\u5c5e\u4e8e\u4e09\u89d2\u5f62\u7c7b\u800c\u5e76\u4e0d\u5c5e\u4e8e\u4e09\u89d2\u5f62\u5bf9\u8c61\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u9759\u6001\u65b9\u6cd5\u6765\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 from math import sqrt class Triangle(object): def __init__(self, a, b, c): self._a = a self._b = b self._c = c @staticmethod def is_valid(a, b, c): return a + b > c and b + c > a and a + c > b def perimeter(self): return self._a + self._b + self._c def area(self): half = self.perimeter() / 2 return sqrt(half * (half - self._a) * (half - self._b) * (half - self._c)) def main(): a, b, c = 3, 4, 5 # \u9759\u6001\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5\u90fd\u662f\u901a\u8fc7\u7ed9\u7c7b\u53d1\u6d88\u606f\u6765\u8c03\u7528\u7684 if Triangle.is_valid(a, b, c): t = Triangle(a, b, c) print(t.perimeter()) # \u4e5f\u53ef\u4ee5\u901a\u8fc7\u7ed9\u7c7b\u53d1\u6d88\u606f\u6765\u8c03\u7528\u5bf9\u8c61\u65b9\u6cd5\u4f46\u662f\u8981\u4f20\u5165\u63a5\u6536\u6d88\u606f\u7684\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570 # print(Triangle.perimeter(t)) print(t.area()) # print(Triangle.area(t)) else: print('\u65e0\u6cd5\u6784\u6210\u4e09\u89d2\u5f62.') if __name__ == '__main__': main() \u548c\u9759\u6001\u65b9\u6cd5\u6bd4\u8f83\u7c7b\u4f3c\uff0cPython\u8fd8\u53ef\u4ee5\u5728\u7c7b\u4e2d\u5b9a\u4e49\u7c7b\u65b9\u6cd5\uff0c\u7c7b\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u7ea6\u5b9a\u540d\u4e3acls\uff0c\u5b83\u4ee3\u8868\u7684\u662f\u5f53\u524d\u7c7b\u76f8\u5173\u7684\u4fe1\u606f\u7684\u5bf9\u8c61\uff08\u7c7b\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6709\u7684\u5730\u65b9\u4e5f\u79f0\u4e4b\u4e3a\u7c7b\u7684\u5143\u6570\u636e\u5bf9\u8c61\uff09\uff0c\u901a\u8fc7\u8fd9\u4e2a\u53c2\u6570\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u548c\u7c7b\u76f8\u5173\u7684\u4fe1\u606f\u5e76\u4e14\u53ef\u4ee5\u521b\u5efa\u51fa\u7c7b\u7684\u5bf9\u8c61\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 from time import time, localtime, sleep class Clock(object): \"\"\"\u6570\u5b57\u65f6\u949f\"\"\" def __init__(self, hour=0, minute=0, second=0): self._hour = hour self._minute = minute self._second = second @classmethod def now(cls): ctime = localtime(time()) return cls(ctime.tm_hour, ctime.tm_min, ctime.tm_sec) def run(self): \"\"\"\u8d70\u5b57\"\"\" self._second += 1 if self._second == 60: self._second = 0 self._minute += 1 if self._minute == 60: self._minute = 0 self._hour += 1 if self._hour == 24: self._hour = 0 def show(self): \"\"\"\u663e\u793a\u65f6\u95f4\"\"\" return '%02d:%02d:%02d' % \\ (self._hour, self._minute, self._second) def main(): # \u901a\u8fc7\u7c7b\u65b9\u6cd5\u521b\u5efa\u5bf9\u8c61\u5e76\u83b7\u53d6\u7cfb\u7edf\u65f6\u95f4 clock = Clock.now() while True: print(clock.show()) sleep(1) clock.run() if __name__ == '__main__': main()","title":"\u9759\u6001\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5"},{"location":"new/9%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/#_3","text":"\u7b80\u5355\u7684\u8bf4\uff0c\u7c7b\u548c\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb\u6709\u4e09\u79cd\uff1ais-a\u3001has-a\u548cuse-a\u5173\u7cfb\u3002 is-a\u5173\u7cfb\u4e5f\u53eb\u7ee7\u627f\u6216\u6cdb\u5316\uff0c\u6bd4\u5982\u5b66\u751f\u548c\u4eba\u7684\u5173\u7cfb\u3001\u624b\u673a\u548c\u7535\u5b50\u4ea7\u54c1\u7684\u5173\u7cfb\u90fd\u5c5e\u4e8e\u7ee7\u627f\u5173\u7cfb\u3002 has-a\u5173\u7cfb\u901a\u5e38\u79f0\u4e4b\u4e3a\u5173\u8054\uff0c\u6bd4\u5982\u90e8\u95e8\u548c\u5458\u5de5\u7684\u5173\u7cfb\uff0c\u6c7d\u8f66\u548c\u5f15\u64ce\u7684\u5173\u7cfb\u90fd\u5c5e\u4e8e\u5173\u8054\u5173\u7cfb\uff1b\u5173\u8054\u5173\u7cfb\u5982\u679c\u662f\u6574\u4f53\u548c\u90e8\u5206\u7684\u5173\u8054\uff0c\u90a3\u4e48\u6211\u4eec\u79f0\u4e4b\u4e3a\u805a\u5408\u5173\u7cfb\uff1b\u5982\u679c\u6574\u4f53\u8fdb\u4e00\u6b65\u8d1f\u8d23\u4e86\u90e8\u5206\u7684\u751f\u547d\u5468\u671f\uff08\u6574\u4f53\u548c\u90e8\u5206\u662f\u4e0d\u53ef\u5206\u5272\u7684\uff0c\u540c\u65f6\u540c\u5728\u4e5f\u540c\u65f6\u6d88\u4ea1\uff09\uff0c\u90a3\u4e48\u8fd9\u79cd\u5c31\u662f\u6700\u5f3a\u7684\u5173\u8054\u5173\u7cfb\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u5408\u6210\u5173\u7cfb\u3002 use-a\u5173\u7cfb\u901a\u5e38\u79f0\u4e4b\u4e3a\u4f9d\u8d56\uff0c\u6bd4\u5982\u53f8\u673a\u6709\u4e00\u4e2a\u9a7e\u9a76\u7684\u884c\u4e3a\uff08\u65b9\u6cd5\uff09\uff0c\u5176\u4e2d\uff08\u7684\u53c2\u6570\uff09\u4f7f\u7528\u5230\u4e86\u6c7d\u8f66\uff0c\u90a3\u4e48\u53f8\u673a\u548c\u6c7d\u8f66\u7684\u5173\u7cfb\u5c31\u662f\u4f9d\u8d56\u5173\u7cfb\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u53eb\u505a UML \uff08\u7edf\u4e00\u5efa\u6a21\u8bed\u8a00\uff09\u7684\u4e1c\u897f\u6765\u8fdb\u884c\u9762\u5411\u5bf9\u8c61\u5efa\u6a21\uff0c\u5176\u4e2d\u4e00\u9879\u91cd\u8981\u7684\u5de5\u4f5c\u5c31\u662f\u628a\u7c7b\u548c\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb\u7528\u6807\u51c6\u5316\u7684\u56fe\u5f62\u7b26\u53f7\u63cf\u8ff0\u51fa\u6765\u3002\u5173\u4e8eUML\u6211\u4eec\u5728\u8fd9\u91cc\u4e0d\u505a\u8be6\u7ec6\u7684\u4ecb\u7ecd\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u9605\u8bfb \u300aUML\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u57fa\u7840\u300b \u4e00\u4e66\u3002 \u5229\u7528\u7c7b\u4e4b\u95f4\u7684\u8fd9\u4e9b\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5df2\u6709\u7c7b\u7684\u57fa\u7840\u4e0a\u6765\u5b8c\u6210\u67d0\u4e9b\u64cd\u4f5c\uff0c\u4e5f\u53ef\u4ee5\u5728\u5df2\u6709\u7c7b\u7684\u57fa\u7840\u4e0a\u521b\u5efa\u65b0\u7684\u7c7b\uff0c\u8fd9\u4e9b\u90fd\u662f\u5b9e\u73b0\u4ee3\u7801\u590d\u7528\u7684\u91cd\u8981\u624b\u6bb5\u3002\u590d\u7528\u73b0\u6709\u7684\u4ee3\u7801\u4e0d\u4ec5\u53ef\u4ee5\u51cf\u5c11\u5f00\u53d1\u7684\u5de5\u4f5c\u91cf\uff0c\u4e5f\u6709\u5229\u4e8e\u4ee3\u7801\u7684\u7ba1\u7406\u548c\u7ef4\u62a4\uff0c\u8fd9\u662f\u6211\u4eec\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\u90fd\u4f1a\u4f7f\u7528\u5230\u7684\u6280\u672f\u624b\u6bb5\u3002","title":"\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb"},{"location":"new/9%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/#_4","text":"\u521a\u624d\u6211\u4eec\u63d0\u5230\u4e86\uff0c\u53ef\u4ee5\u5728\u5df2\u6709\u7c7b\u7684\u57fa\u7840\u4e0a\u521b\u5efa\u65b0\u7c7b\uff0c\u8fd9\u5176\u4e2d\u7684\u4e00\u79cd\u505a\u6cd5\u5c31\u662f\u8ba9\u4e00\u4e2a\u7c7b\u4ece\u53e6\u4e00\u4e2a\u7c7b\u90a3\u91cc\u5c06\u5c5e\u6027\u548c\u65b9\u6cd5\u76f4\u63a5\u7ee7\u627f\u4e0b\u6765\uff0c\u4ece\u800c\u51cf\u5c11\u91cd\u590d\u4ee3\u7801\u7684\u7f16\u5199\u3002\u63d0\u4f9b\u7ee7\u627f\u4fe1\u606f\u7684\u6211\u4eec\u79f0\u4e4b\u4e3a\u7236\u7c7b\uff0c\u4e5f\u53eb\u8d85\u7c7b\u6216\u57fa\u7c7b\uff1b\u5f97\u5230\u7ee7\u627f\u4fe1\u606f\u7684\u6211\u4eec\u79f0\u4e4b\u4e3a\u5b50\u7c7b\uff0c\u4e5f\u53eb\u6d3e\u751f\u7c7b\u6216\u884d\u751f\u7c7b\u3002\u5b50\u7c7b\u9664\u4e86\u7ee7\u627f\u7236\u7c7b\u63d0\u4f9b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u81ea\u5df1\u7279\u6709\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u6240\u4ee5\u5b50\u7c7b\u6bd4\u7236\u7c7b\u62e5\u6709\u7684\u66f4\u591a\u7684\u80fd\u529b\uff0c\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u7528\u5b50\u7c7b\u5bf9\u8c61\u53bb\u66ff\u6362\u6389\u4e00\u4e2a\u7236\u7c7b\u5bf9\u8c61\uff0c\u8fd9\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u4e00\u4e2a\u5e38\u89c1\u7684\u884c\u4e3a\uff0c\u5bf9\u5e94\u7684\u539f\u5219\u79f0\u4e4b\u4e3a \u91cc\u6c0f\u66ff\u6362\u539f\u5219 \u3002\u4e0b\u9762\u6211\u4eec\u5148\u770b\u4e00\u4e2a\u7ee7\u627f\u7684\u4f8b\u5b50\u3002 class Person(object): \"\"\"\u4eba\"\"\" def __init__(self, name, age): self._name = name self._age = age @property def name(self): return self._name @property def age(self): return self._age @age.setter def age(self, age): self._age = age def play(self): print('%s\u6b63\u5728\u6109\u5feb\u7684\u73a9\u800d.' % self._name) def watch_av(self): if self._age >= 18: print('%s\u6b63\u5728\u89c2\u770b\u7231\u60c5\u52a8\u4f5c\u7247.' % self._name) else: print('%s\u53ea\u80fd\u89c2\u770b\u300a\u718a\u51fa\u6ca1\u300b.' % self._name) class Student(Person): \"\"\"\u5b66\u751f\"\"\" def __init__(self, name, age, grade): super().__init__(name, age) self._grade = grade @property def grade(self): return self._grade @grade.setter def grade(self, grade): self._grade = grade def study(self, course): print('%s\u7684%s\u6b63\u5728\u5b66\u4e60%s.' % (self._grade, self._name, course)) class Teacher(Person): \"\"\"\u8001\u5e08\"\"\" def __init__(self, name, age, title): super().__init__(name, age) self._title = title @property def title(self): return self._title @title.setter def title(self, title): self._title = title def teach(self, course): print('%s%s\u6b63\u5728\u8bb2%s.' % (self._name, self._title, course)) def main(): stu = Student('\u738b\u5927\u9524', 15, '\u521d\u4e09') stu.study('\u6570\u5b66') stu.watch_av() t = Teacher('\u9a86\u660a', 38, '\u8001\u53eb\u517d') t.teach('Python\u7a0b\u5e8f\u8bbe\u8ba1') t.watch_av() if __name__ == '__main__': main() \u5b50\u7c7b\u5728\u7ee7\u627f\u4e86\u7236\u7c7b\u7684\u65b9\u6cd5\u540e\uff0c\u53ef\u4ee5\u5bf9\u7236\u7c7b\u5df2\u6709\u7684\u65b9\u6cd5\u7ed9\u51fa\u65b0\u7684\u5b9e\u73b0\u7248\u672c\uff0c\u8fd9\u4e2a\u52a8\u4f5c\u79f0\u4e4b\u4e3a\u65b9\u6cd5\u91cd\u5199\uff08override\uff09\u3002\u901a\u8fc7\u65b9\u6cd5\u91cd\u5199\u6211\u4eec\u53ef\u4ee5\u8ba9\u7236\u7c7b\u7684\u540c\u4e00\u4e2a\u884c\u4e3a\u5728\u5b50\u7c7b\u4e2d\u62e5\u6709\u4e0d\u540c\u7684\u5b9e\u73b0\u7248\u672c\uff0c\u5f53\u6211\u4eec\u8c03\u7528\u8fd9\u4e2a\u7ecf\u8fc7\u5b50\u7c7b\u91cd\u5199\u7684\u65b9\u6cd5\u65f6\uff0c\u4e0d\u540c\u7684\u5b50\u7c7b\u5bf9\u8c61\u4f1a\u8868\u73b0\u51fa\u4e0d\u540c\u7684\u884c\u4e3a\uff0c\u8fd9\u4e2a\u5c31\u662f\u591a\u6001\uff08poly-morphism\uff09\u3002 from abc import ABCMeta, abstractmethod class Pet(object, metaclass=ABCMeta): \"\"\"\u5ba0\u7269\"\"\" def __init__(self, nickname): self._nickname = nickname @abstractmethod def make_voice(self): \"\"\"\u53d1\u51fa\u58f0\u97f3\"\"\" pass class Dog(Pet): \"\"\"\u72d7\"\"\" def make_voice(self): print('%s: \u6c6a\u6c6a\u6c6a...' % self._nickname) class Cat(Pet): \"\"\"\u732b\"\"\" def make_voice(self): print('%s: \u55b5...\u55b5...' % self._nickname) def main(): pets = [Dog('\u65fa\u8d22'), Cat('\u51ef\u8482'), Dog('\u5927\u9ec4')] for pet in pets: pet.make_voice() if __name__ == '__main__': main() \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5c06 Pet \u7c7b\u5904\u7406\u6210\u4e86\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u6240\u8c13\u62bd\u8c61\u7c7b\u5c31\u662f\u4e0d\u80fd\u591f\u521b\u5efa\u5bf9\u8c61\u7684\u7c7b\uff0c\u8fd9\u79cd\u7c7b\u7684\u5b58\u5728\u5c31\u662f\u4e13\u95e8\u4e3a\u4e86\u8ba9\u5176\u4ed6\u7c7b\u53bb\u7ee7\u627f\u5b83\u3002Python\u4ece\u8bed\u6cd5\u5c42\u9762\u5e76\u6ca1\u6709\u50cfJava\u6216C#\u90a3\u6837\u63d0\u4f9b\u5bf9\u62bd\u8c61\u7c7b\u7684\u652f\u6301\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 abc \u6a21\u5757\u7684 ABCMeta \u5143\u7c7b\u548c abstractmethod \u5305\u88c5\u5668\u6765\u8fbe\u5230\u62bd\u8c61\u7c7b\u7684\u6548\u679c\uff0c\u5982\u679c\u4e00\u4e2a\u7c7b\u4e2d\u5b58\u5728\u62bd\u8c61\u65b9\u6cd5\u90a3\u4e48\u8fd9\u4e2a\u7c7b\u5c31\u4e0d\u80fd\u591f\u5b9e\u4f8b\u5316\uff08\u521b\u5efa\u5bf9\u8c61\uff09\u3002\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c Dog \u548c Cat \u4e24\u4e2a\u5b50\u7c7b\u5206\u522b\u5bf9 Pet \u7c7b\u4e2d\u7684 make_voice \u62bd\u8c61\u65b9\u6cd5\u8fdb\u884c\u4e86\u91cd\u5199\u5e76\u7ed9\u51fa\u4e86\u4e0d\u540c\u7684\u5b9e\u73b0\u7248\u672c\uff0c\u5f53\u6211\u4eec\u5728 main \u51fd\u6570\u4e2d\u8c03\u7528\u8be5\u65b9\u6cd5\u65f6\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5c31\u8868\u73b0\u51fa\u4e86\u591a\u6001\u884c\u4e3a\uff08\u540c\u6837\u7684\u65b9\u6cd5\u505a\u4e86\u4e0d\u540c\u7684\u4e8b\u60c5\uff09\u3002","title":"\u7ee7\u627f\u548c\u591a\u6001"},{"location":"new/9%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/#_5","text":"","title":"\u7efc\u5408\u6848\u4f8b"},{"location":"new/9%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/#1","text":"from abc import ABCMeta, abstractmethod from random import randint, randrange class Fighter(object, metaclass=ABCMeta): \"\"\"\u6218\u6597\u8005\"\"\" # \u901a\u8fc7__slots__\u9b54\u6cd5\u9650\u5b9a\u5bf9\u8c61\u53ef\u4ee5\u7ed1\u5b9a\u7684\u6210\u5458\u53d8\u91cf __slots__ = ('_name', '_hp') def __init__(self, name, hp): \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5 :param name: \u540d\u5b57 :param hp: \u751f\u547d\u503c \"\"\" self._name = name self._hp = hp @property def name(self): return self._name @property def hp(self): return self._hp @hp.setter def hp(self, hp): self._hp = hp if hp >= 0 else 0 @property def alive(self): return self._hp > 0 @abstractmethod def attack(self, other): \"\"\"\u653b\u51fb :param other: \u88ab\u653b\u51fb\u7684\u5bf9\u8c61 \"\"\" pass class Ultraman(Fighter): \"\"\"\u5965\u7279\u66fc\"\"\" __slots__ = ('_name', '_hp', '_mp') def __init__(self, name, hp, mp): \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5 :param name: \u540d\u5b57 :param hp: \u751f\u547d\u503c :param mp: \u9b54\u6cd5\u503c \"\"\" super().__init__(name, hp) self._mp = mp def attack(self, other): other.hp -= randint(15, 25) def huge_attack(self, other): \"\"\"\u7a76\u6781\u5fc5\u6740\u6280(\u6253\u6389\u5bf9\u65b9\u81f3\u5c1150\u70b9\u6216\u56db\u5206\u4e4b\u4e09\u7684\u8840) :param other: \u88ab\u653b\u51fb\u7684\u5bf9\u8c61 :return: \u4f7f\u7528\u6210\u529f\u8fd4\u56deTrue\u5426\u5219\u8fd4\u56deFalse \"\"\" if self._mp >= 50: self._mp -= 50 injury = other.hp * 3 // 4 injury = injury if injury >= 50 else 50 other.hp -= injury return True else: self.attack(other) return False def magic_attack(self, others): \"\"\"\u9b54\u6cd5\u653b\u51fb :param others: \u88ab\u653b\u51fb\u7684\u7fa4\u4f53 :return: \u4f7f\u7528\u9b54\u6cd5\u6210\u529f\u8fd4\u56deTrue\u5426\u5219\u8fd4\u56deFalse \"\"\" if self._mp >= 20: self._mp -= 20 for temp in others: if temp.alive: temp.hp -= randint(10, 15) return True else: return False def resume(self): \"\"\"\u6062\u590d\u9b54\u6cd5\u503c\"\"\" incr_point = randint(1, 10) self._mp += incr_point return incr_point def __str__(self): return '~~~%s\u5965\u7279\u66fc~~~\\n' % self._name + \\ '\u751f\u547d\u503c: %d\\n' % self._hp + \\ '\u9b54\u6cd5\u503c: %d\\n' % self._mp class Monster(Fighter): \"\"\"\u5c0f\u602a\u517d\"\"\" __slots__ = ('_name', '_hp') def attack(self, other): other.hp -= randint(10, 20) def __str__(self): return '~~~%s\u5c0f\u602a\u517d~~~\\n' % self._name + \\ '\u751f\u547d\u503c: %d\\n' % self._hp def is_any_alive(monsters): \"\"\"\u5224\u65ad\u6709\u6ca1\u6709\u5c0f\u602a\u517d\u662f\u6d3b\u7740\u7684\"\"\" for monster in monsters: if monster.alive > 0: return True return False def select_alive_one(monsters): \"\"\"\u9009\u4e2d\u4e00\u53ea\u6d3b\u7740\u7684\u5c0f\u602a\u517d\"\"\" monsters_len = len(monsters) while True: index = randrange(monsters_len) monster = monsters[index] if monster.alive > 0: return monster def display_info(ultraman, monsters): \"\"\"\u663e\u793a\u5965\u7279\u66fc\u548c\u5c0f\u602a\u517d\u7684\u4fe1\u606f\"\"\" print(ultraman) for monster in monsters: print(monster, end='') def main(): u = Ultraman('\u9a86\u660a', 1000, 120) m1 = Monster('\u72c4\u4ec1\u6770', 250) m2 = Monster('\u767d\u5143\u82b3', 500) m3 = Monster('\u738b\u5927\u9524', 750) ms = [m1, m2, m3] fight_round = 1 while u.alive and is_any_alive(ms): print('========\u7b2c%02d\u56de\u5408========' % fight_round) m = select_alive_one(ms) # \u9009\u4e2d\u4e00\u53ea\u5c0f\u602a\u517d skill = randint(1, 10) # \u901a\u8fc7\u968f\u673a\u6570\u9009\u62e9\u4f7f\u7528\u54ea\u79cd\u6280\u80fd if skill <= 6: # 60%\u7684\u6982\u7387\u4f7f\u7528\u666e\u901a\u653b\u51fb print('%s\u4f7f\u7528\u666e\u901a\u653b\u51fb\u6253\u4e86%s.' % (u.name, m.name)) u.attack(m) print('%s\u7684\u9b54\u6cd5\u503c\u6062\u590d\u4e86%d\u70b9.' % (u.name, u.resume())) elif skill <= 9: # 30%\u7684\u6982\u7387\u4f7f\u7528\u9b54\u6cd5\u653b\u51fb(\u53ef\u80fd\u56e0\u9b54\u6cd5\u503c\u4e0d\u8db3\u800c\u5931\u8d25) if u.magic_attack(ms): print('%s\u4f7f\u7528\u4e86\u9b54\u6cd5\u653b\u51fb.' % u.name) else: print('%s\u4f7f\u7528\u9b54\u6cd5\u5931\u8d25.' % u.name) else: # 10%\u7684\u6982\u7387\u4f7f\u7528\u7a76\u6781\u5fc5\u6740\u6280(\u5982\u679c\u9b54\u6cd5\u503c\u4e0d\u8db3\u5219\u4f7f\u7528\u666e\u901a\u653b\u51fb) if u.huge_attack(m): print('%s\u4f7f\u7528\u7a76\u6781\u5fc5\u6740\u6280\u8650\u4e86%s.' % (u.name, m.name)) else: print('%s\u4f7f\u7528\u666e\u901a\u653b\u51fb\u6253\u4e86%s.' % (u.name, m.name)) print('%s\u7684\u9b54\u6cd5\u503c\u6062\u590d\u4e86%d\u70b9.' % (u.name, u.resume())) if m.alive > 0: # \u5982\u679c\u9009\u4e2d\u7684\u5c0f\u602a\u517d\u6ca1\u6709\u6b7b\u5c31\u56de\u51fb\u5965\u7279\u66fc print('%s\u56de\u51fb\u4e86%s.' % (m.name, u.name)) m.attack(u) display_info(u, ms) # \u6bcf\u4e2a\u56de\u5408\u7ed3\u675f\u540e\u663e\u793a\u5965\u7279\u66fc\u548c\u5c0f\u602a\u517d\u7684\u4fe1\u606f fight_round += 1 print('\\n========\u6218\u6597\u7ed3\u675f!========\\n') if u.alive > 0: print('%s\u5965\u7279\u66fc\u80dc\u5229!' % u.name) else: print('\u5c0f\u602a\u517d\u80dc\u5229!') if __name__ == '__main__': main()","title":"\u6848\u4f8b1\uff1a\u5965\u7279\u66fc\u6253\u5c0f\u602a\u517d"},{"location":"new/9%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/#2","text":"import random class Card(object): \"\"\"\u4e00\u5f20\u724c\"\"\" def __init__(self, suite, face): self._suite = suite self._face = face @property def face(self): return self._face @property def suite(self): return self._suite def __str__(self): if self._face == 1: face_str = 'A' elif self._face == 11: face_str = 'J' elif self._face == 12: face_str = 'Q' elif self._face == 13: face_str = 'K' else: face_str = str(self._face) return '%s%s' % (self._suite, face_str) def __repr__(self): return self.__str__() class Poker(object): \"\"\"\u4e00\u526f\u724c\"\"\" def __init__(self): self._cards = [Card(suite, face) for suite in '\u2660\u2665\u2663\u2666' for face in range(1, 14)] self._current = 0 @property def cards(self): return self._cards def shuffle(self): \"\"\"\u6d17\u724c(\u968f\u673a\u4e71\u5e8f)\"\"\" self._current = 0 random.shuffle(self._cards) @property def next(self): \"\"\"\u53d1\u724c\"\"\" card = self._cards[self._current] self._current += 1 return card @property def has_next(self): \"\"\"\u8fd8\u6709\u6ca1\u6709\u724c\"\"\" return self._current < len(self._cards) class Player(object): \"\"\"\u73a9\u5bb6\"\"\" def __init__(self, name): self._name = name self._cards_on_hand = [] @property def name(self): return self._name @property def cards_on_hand(self): return self._cards_on_hand def get(self, card): \"\"\"\u6478\u724c\"\"\" self._cards_on_hand.append(card) def arrange(self, card_key): \"\"\"\u73a9\u5bb6\u6574\u7406\u624b\u4e0a\u7684\u724c\"\"\" self._cards_on_hand.sort(key=card_key) # \u6392\u5e8f\u89c4\u5219-\u5148\u6839\u636e\u82b1\u8272\u518d\u6839\u636e\u70b9\u6570\u6392\u5e8f def get_key(card): return (card.suite, card.face) def main(): p = Poker() p.shuffle() players = [Player('\u4e1c\u90aa'), Player('\u897f\u6bd2'), Player('\u5357\u5e1d'), Player('\u5317\u4e10')] for _ in range(13): for player in players: player.get(p.next) for player in players: print(player.name + ':', end=' ') player.arrange(get_key) print(player.cards_on_hand) if __name__ == '__main__': main() \u8bf4\u660e \uff1a\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u5c1d\u8bd5\u5728\u4e0a\u9762\u4ee3\u7801\u7684\u57fa\u7840\u4e0a\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u6251\u514b\u6e38\u620f\uff0c\u4f8b\u598221\u70b9(Black Jack)\uff0c\u6e38\u620f\u7684\u89c4\u5219\u53ef\u4ee5\u81ea\u5df1\u5728\u7f51\u4e0a\u627e\u4e00\u627e\u3002","title":"\u6848\u4f8b2\uff1a\u6251\u514b\u6e38\u620f"},{"location":"new/9%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/#3","text":"\"\"\" \u67d0\u516c\u53f8\u6709\u4e09\u79cd\u7c7b\u578b\u7684\u5458\u5de5 \u5206\u522b\u662f\u90e8\u95e8\u7ecf\u7406\u3001\u7a0b\u5e8f\u5458\u548c\u9500\u552e\u5458 \u9700\u8981\u8bbe\u8ba1\u4e00\u4e2a\u5de5\u8d44\u7ed3\u7b97\u7cfb\u7edf \u6839\u636e\u63d0\u4f9b\u7684\u5458\u5de5\u4fe1\u606f\u6765\u8ba1\u7b97\u6708\u85aa \u90e8\u95e8\u7ecf\u7406\u7684\u6708\u85aa\u662f\u6bcf\u6708\u56fa\u5b9a15000\u5143 \u7a0b\u5e8f\u5458\u7684\u6708\u85aa\u6309\u672c\u6708\u5de5\u4f5c\u65f6\u95f4\u8ba1\u7b97 \u6bcf\u5c0f\u65f6150\u5143 \u9500\u552e\u5458\u7684\u6708\u85aa\u662f1200\u5143\u7684\u5e95\u85aa\u52a0\u4e0a\u9500\u552e\u989d5%\u7684\u63d0\u6210 \"\"\" from abc import ABCMeta, abstractmethod class Employee(object, metaclass=ABCMeta): \"\"\"\u5458\u5de5\"\"\" def __init__(self, name): \"\"\" \u521d\u59cb\u5316\u65b9\u6cd5 :param name: \u59d3\u540d \"\"\" self._name = name @property def name(self): return self._name @abstractmethod def get_salary(self): \"\"\" \u83b7\u5f97\u6708\u85aa :return: \u6708\u85aa \"\"\" pass class Manager(Employee): \"\"\"\u90e8\u95e8\u7ecf\u7406\"\"\" def get_salary(self): return 15000.0 class Programmer(Employee): \"\"\"\u7a0b\u5e8f\u5458\"\"\" def __init__(self, name, working_hour=0): super().__init__(name) self._working_hour = working_hour @property def working_hour(self): return self._working_hour @working_hour.setter def working_hour(self, working_hour): self._working_hour = working_hour if working_hour > 0 else 0 def get_salary(self): return 150.0 * self._working_hour class Salesman(Employee): \"\"\"\u9500\u552e\u5458\"\"\" def __init__(self, name, sales=0): super().__init__(name) self._sales = sales @property def sales(self): return self._sales @sales.setter def sales(self, sales): self._sales = sales if sales > 0 else 0 def get_salary(self): return 1200.0 + self._sales * 0.05 def main(): emps = [ Manager('\u5218\u5907'), Programmer('\u8bf8\u845b\u4eae'), Manager('\u66f9\u64cd'), Salesman('\u8340\u5f67'), Salesman('\u5415\u5e03'), Programmer('\u5f20\u8fbd'), Programmer('\u8d75\u4e91') ] for emp in emps: if isinstance(emp, Programmer): emp.working_hour = int(input('\u8bf7\u8f93\u5165%s\u672c\u6708\u5de5\u4f5c\u65f6\u95f4: ' % emp.name)) elif isinstance(emp, Salesman): emp.sales = float(input('\u8bf7\u8f93\u5165%s\u672c\u6708\u9500\u552e\u989d: ' % emp.name)) # \u540c\u6837\u662f\u63a5\u6536get_salary\u8fd9\u4e2a\u6d88\u606f\u4f46\u662f\u4e0d\u540c\u7684\u5458\u5de5\u8868\u73b0\u51fa\u4e86\u4e0d\u540c\u7684\u884c\u4e3a(\u591a\u6001) print('%s\u672c\u6708\u5de5\u8d44\u4e3a: \uffe5%s\u5143' % (emp.name, emp.get_salary())) if __name__ == '__main__': main()","title":"\u6848\u4f8b3\uff1a\u5de5\u8d44\u7ed3\u7b97\u7cfb\u7edf"}]}